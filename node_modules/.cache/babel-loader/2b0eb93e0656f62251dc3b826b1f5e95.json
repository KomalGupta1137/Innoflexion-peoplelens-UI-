{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-unsafe-call */\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport i18n from 'i18next'; // import translation from \"../../public/locales/en/translation.json\";\n\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n/* eslint-disable @typescript-eslint/no-floating-promises */\n\ni18n // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n// learn more: https://github.com/i18next/i18next-http-backend\n.use(Backend) // detect user language\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\n.use(LanguageDetector) // pass the i18n instance to react-i18next.\n.use(initReactI18next) // init i18next\n// for all options read: https://www.i18next.com/overview/configuration-options\n.init({\n  backend: {\n    loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`\n  },\n  lng: 'en',\n  fallbackLng: 'en',\n  debug: true,\n  interpolation: {\n    escapeValue: false // not needed for react as it escapes by default\n\n  } // ns: [\"ns1\"],\n\n});","map":{"version":3,"sources":["/home/komal/Documents/Current/peoplelens_ui/src/i18n/i18n.ts"],"names":["i18n","initReactI18next","Backend","LanguageDetector","use","init","backend","loadPath","process","env","PUBLIC_URL","lng","fallbackLng","debug","interpolation","escapeValue"],"mappings":"AAAA;;AACA;AACA,OAAOA,IAAP,MAAiB,SAAjB,C,CACA;;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AAEA;;AACAH,IAAI,CACF;AACA;AAFE,CAGDI,GAHH,CAGOF,OAHP,EAIE;AACA;AALF,CAMGE,GANH,CAMOD,gBANP,EAOE;AAPF,CAQGC,GARH,CAQOH,gBARP,EASE;AACA;AAVF,CAWGI,IAXH,CAWQ;AACJC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW;AAD7B,GADL;AAIJC,EAAAA,GAAG,EAAE,IAJD;AAKJC,EAAAA,WAAW,EAAE,IALT;AAMJC,EAAAA,KAAK,EAAE,IANH;AAQJC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,KADA,CACO;;AADP,GARX,CAWJ;;AAXI,CAXR","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport i18n from 'i18next';\n// import translation from \"../../public/locales/en/translation.json\";\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\n/* eslint-disable @typescript-eslint/no-floating-promises */\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    backend: {\n      loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`,\n    },\n    lng: 'en',\n    fallbackLng: 'en',\n    debug: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    // ns: [\"ns1\"],\n  });\n"]},"metadata":{},"sourceType":"module"}