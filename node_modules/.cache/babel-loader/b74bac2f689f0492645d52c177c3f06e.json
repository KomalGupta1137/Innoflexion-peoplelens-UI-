{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Current/peoplelens_ui/src/components/organisms/MyTeamDashboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CustomizedTabs from '../../molecules/CustomisedTabs';\nimport PeopleDrivers from '../PeopleDrivers';\nimport SalesOutcomes from '../SalesOutcomes';\nimport PeopleActivitiesWidget from '../PeopleActivitiesWidget'; // import ActivityScores from '../ActivityScore/index';\n\nimport LearningWidget from '../LearningWidget';\nimport KeyDriversWidget from '../KeyDriversWidget';\nimport { useQuery } from '@apollo/client';\nimport { GetDashboardData } from '../../../gql/queries/dashboard';\nimport { GetDeeperInsights } from '../../../gql/queries/deeperInsights';\nimport { dates } from '../ManagerDashboard';\nimport Loader from '../../atoms/Loader';\nimport ManagerInsights from '../ManagerInsights/index';\nimport { subtractDate } from '../../../utils/subtractDate/index';\nimport { ProductColorContext } from '../../../utils/productColorContext';\nimport ComingSoon from '../../../assets/Coming_Soon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyTeamDashboard = ({\n  activeQuarter\n}) => {\n  _s();\n\n  var _dashboardData$people, _dashboardData$people2;\n\n  const {\n    ProductColorMap,\n    setProductColorMap\n  } = React.useContext(ProductColorContext);\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(GetDashboardData, {\n    variables: {\n      dashboardInput: {\n        startDate: dates === null || dates === void 0 ? void 0 : dates[activeQuarter].startDate,\n        endDate: dates === null || dates === void 0 ? void 0 : dates[activeQuarter].endDate,\n        userId: ''\n      }\n    }\n  });\n  const {\n    loading: loading2,\n    error: error2,\n    data: data2,\n    refetch: refetch2\n  } = useQuery(GetDeeperInsights, {\n    variables: {\n      dashboardInput: {\n        startDate: dates === null || dates === void 0 ? void 0 : dates[activeQuarter].startDate,\n        endDate: dates === null || dates === void 0 ? void 0 : dates[activeQuarter].endDate\n      }\n    }\n  });\n  const {\n    loading: loading3,\n    error: error3,\n    data: data3,\n    refetch: refetch3\n  } = useQuery(GetDashboardData, {\n    variables: {\n      dashboardInput: {\n        startDate: subtractDate(dates === null || dates === void 0 ? void 0 : dates[activeQuarter].startDate),\n        endDate: subtractDate(dates === null || dates === void 0 ? void 0 : dates[activeQuarter].endDate),\n        userId: ''\n      }\n    }\n  });\n  const [activeTab, setActiveTab] = useState(0);\n\n  const handleTabChange = num => {\n    setActiveTab(num);\n  };\n\n  useEffect(() => {\n    void refetch();\n    void refetch2();\n    void refetch3();\n  }, [activeQuarter, refetch, refetch2, refetch3]);\n  useEffect(() => {\n    var _data$getDashboardDat;\n\n    setProductColorMap(data === null || data === void 0 ? void 0 : (_data$getDashboardDat = data.getDashboardData) === null || _data$getDashboardDat === void 0 ? void 0 : _data$getDashboardDat.productColorMap);\n  }, [data]);\n\n  if (loading2) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  if (error2) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"`Error! $\", error2.message, \"` \"]\n  }, void 0, true);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  if (error) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"`Error! $\", error.message, \"` \"]\n  }, void 0, true);\n  const dashboardData = data === null || data === void 0 ? void 0 : data.getDashboardData;\n  const dashboardData1 = data3 === null || data3 === void 0 ? void 0 : data3.getDashboardData;\n  const tabNames = ['ALL', 'ORGANIZATION', 'PEOPLE', 'CUSTOMER', 'MANAGER INSIGHTS'];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CustomizedTabs, {\n      tabNames: tabNames,\n      primary: true,\n      activeTab: activeTab,\n      tabName: tabNames[activeTab],\n      handleTabChange: handleTabChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), (activeTab == 1 || activeTab == 2 || activeTab == 3) && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ComingSoon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), activeTab === 4 && /*#__PURE__*/_jsxDEV(ManagerInsights, {\n      data: data2 === null || data2 === void 0 ? void 0 : data2.deeperInsight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 27\n    }, this), activeTab === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SalesOutcomes, {\n        dashboardData: dashboardData,\n        activeQuarter: activeQuarter,\n        previousYearDashboardData: dashboardData1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PeopleDrivers, {\n        data: dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.peopleDrivers,\n        activeQuarter: activeQuarter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LearningWidget, {\n        activeQuarter: activeQuarter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PeopleActivitiesWidget, {\n        teamData: dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$people = dashboardData.peopleDrivers) === null || _dashboardData$people === void 0 ? void 0 : (_dashboardData$people2 = _dashboardData$people.myTeam) === null || _dashboardData$people2 === void 0 ? void 0 : _dashboardData$people2.personaCount,\n        activeQuarter: activeQuarter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(KeyDriversWidget, {\n        activeQuarter: activeQuarter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(MyTeamDashboard, \"Zc54ZUF9BLaf5X4bQ0jb8TfClCg=\", false, function () {\n  return [useQuery, useQuery, useQuery];\n});\n\n_c = MyTeamDashboard;\nexport default MyTeamDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyTeamDashboard\");","map":{"version":3,"sources":["/home/komal/Documents/Current/peoplelens_ui/src/components/organisms/MyTeamDashboard/index.tsx"],"names":["React","useEffect","useState","CustomizedTabs","PeopleDrivers","SalesOutcomes","PeopleActivitiesWidget","LearningWidget","KeyDriversWidget","useQuery","GetDashboardData","GetDeeperInsights","dates","Loader","ManagerInsights","subtractDate","ProductColorContext","ComingSoon","MyTeamDashboard","activeQuarter","ProductColorMap","setProductColorMap","useContext","loading","error","data","refetch","variables","dashboardInput","startDate","endDate","userId","loading2","error2","data2","refetch2","loading3","error3","data3","refetch3","activeTab","setActiveTab","handleTabChange","num","getDashboardData","productColorMap","message","dashboardData","dashboardData1","tabNames","textAlign","deeperInsight","peopleDrivers","myTeam","personaCount"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getDashboardData_getDashboardData as DashboardData } from '../../../gql/types';\nimport CustomizedTabs from '../../molecules/CustomisedTabs';\nimport PeopleDrivers from '../PeopleDrivers';\nimport { _t_ } from '../../../utils/translation/translation';\nimport SalesOutcomes from '../SalesOutcomes';\nimport PeopleActivitiesWidget from '../PeopleActivitiesWidget';\n// import ActivityScores from '../ActivityScore/index';\nimport LearningWidget from '../LearningWidget';\nimport KeyDriversWidget from '../KeyDriversWidget';\nimport { QueryResult, useQuery } from '@apollo/client';\nimport { getDashboardData as DashboardResponse } from '../../../gql/types';\nimport { deeperInsight as DeeperInsightResponse1 } from '../../../gql/types';\nimport {\n  GetDashboardData,\n  ProductPortfolio,\n} from '../../../gql/queries/dashboard';\nimport { GetDeeperInsights } from '../../../gql/queries/deeperInsights';\nimport { dates } from '../ManagerDashboard';\nimport Loader from '../../atoms/Loader';\nimport ManagerInsights from '../ManagerInsights/index';\nimport { subtractDate } from '../../../utils/subtractDate/index';\nimport { ProductColorContext } from '../../../utils/productColorContext';\nimport ComingSoon from '../../../assets/Coming_Soon.png';\nexport interface MyTeamDashboardProps {\n  activeQuarter: number;\n}\n\nconst MyTeamDashboard: React.FC<MyTeamDashboardProps> = ({\n  activeQuarter,\n}: MyTeamDashboardProps) => {\n  const { ProductColorMap, setProductColorMap } = React.useContext(\n    ProductColorContext,\n  );\n\n  const {\n    loading,\n    error,\n    data,\n    refetch,\n  }: QueryResult<DashboardResponse> = useQuery(GetDashboardData, {\n    variables: {\n      dashboardInput: {\n        startDate: dates?.[activeQuarter].startDate,\n        endDate: dates?.[activeQuarter].endDate,\n        userId: '',\n      },\n    },\n  });\n\n  const {\n    loading: loading2,\n    error: error2,\n    data: data2,\n    refetch: refetch2,\n  }: QueryResult<DeeperInsightResponse1> = useQuery(GetDeeperInsights, {\n    variables: {\n      dashboardInput: {\n        startDate: dates?.[activeQuarter].startDate,\n        endDate: dates?.[activeQuarter].endDate,\n      },\n    },\n  });\n\n  const {\n    loading: loading3,\n    error: error3,\n    data: data3,\n    refetch: refetch3,\n  }: QueryResult<DashboardResponse> = useQuery(GetDashboardData, {\n    variables: {\n      dashboardInput: {\n        startDate: subtractDate(dates?.[activeQuarter].startDate),\n        endDate: subtractDate(dates?.[activeQuarter].endDate),\n        userId: '',\n      },\n    },\n  });\n\n  const [activeTab, setActiveTab] = useState(0);\n\n  const handleTabChange = (num: number) => {\n    setActiveTab(num);\n  };\n\n  useEffect(() => {\n    void refetch();\n    void refetch2();\n    void refetch3();\n  }, [activeQuarter, refetch, refetch2, refetch3]);\n\n  useEffect(() => {\n    setProductColorMap(data?.getDashboardData?.productColorMap);\n  }, [data]);\n\n  if (loading2) {\n    return (\n      <>\n        <Loader />\n      </>\n    );\n  }\n  if (error2) return <>`Error! ${error2.message}` </>;\n\n  if (loading) {\n    return (\n      <>\n        <Loader />\n      </>\n    );\n  }\n  if (error) return <>`Error! ${error.message}` </>;\n  const dashboardData = data?.getDashboardData;\n  const dashboardData1 = data3?.getDashboardData;\n  const tabNames = [\n    'ALL',\n    'ORGANIZATION',\n    'PEOPLE',\n    'CUSTOMER',\n    'MANAGER INSIGHTS',\n  ];\n  return (\n    <>\n      <CustomizedTabs\n        tabNames={tabNames}\n        primary={true}\n        activeTab={activeTab}\n        tabName={tabNames[activeTab]}\n        handleTabChange={handleTabChange}\n      />\n      {(activeTab == 1 || activeTab == 2 || activeTab == 3) && (\n        <div style={{ textAlign: 'center' }}>\n          <img src={ComingSoon} />\n        </div>\n      )}\n      {activeTab === 4 && <ManagerInsights data={data2?.deeperInsight} />}\n      {activeTab === 0 && (\n        <>\n          <SalesOutcomes\n            dashboardData={dashboardData}\n            activeQuarter={activeQuarter}\n            previousYearDashboardData={dashboardData1}\n          />\n\n          <PeopleDrivers\n            data={dashboardData?.peopleDrivers}\n            activeQuarter={activeQuarter}\n          />\n          <LearningWidget activeQuarter={activeQuarter} />\n          {/* <ActivityScores activeQuarter={activeQuarter} /> */}\n\n          <PeopleActivitiesWidget\n            teamData={dashboardData?.peopleDrivers?.myTeam?.personaCount}\n            activeQuarter={activeQuarter}\n          />\n          <KeyDriversWidget activeQuarter={activeQuarter} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MyTeamDashboard;\n"]},"metadata":{},"sourceType":"module"}