{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/organisms/ManagerDashboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Grid, makeStyles, Typography } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport { COLORS } from '../../../plTheme';\nimport CustomizedTabs from '../../molecules/CustomisedTabs';\nimport MyTeamDashboard from '../MyTeamDashboard';\nimport jwtDecode from 'jwt-decode';\nimport Leaderboard from '../Leaderboard';\nimport Sidebar from '../Sidebar';\nimport ReportBuilder from '../ReportBuilder';\nimport ReactGA from 'react-ga';\nimport ComingSoon from '../../../assets/Coming_Soon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nReactGA.pageview(window.location.pathname);\nconst useStyles = makeStyles(theme => ({\n  contentAlignment: {\n    padding: '2%',\n    backgroundColor: COLORS.HOMEPAGE_BACKGROUND,\n    width: 'calc(100% + 57px)'\n  },\n  buttonStyles: {\n    marginRight: '16px',\n    width: '68.08px'\n  },\n  hideWhenPrint: {},\n  [`@media print`]: {\n    contentAlignment: {\n      padding: 0\n    },\n    hideWhenPrint: {\n      display: 'none'\n    },\n    tabAlignment: {\n      paddingLeft: '0%'\n    }\n  },\n  tabAlignment: {\n    paddingLeft: '1%'\n  }\n}));\nexport const dates = [{\n  startDate: '2020-01-01T00:00:00.000Z',\n  endDate: '2020-12-31T23:59:59.999Z'\n}, {\n  startDate: '2020-01-01T00:00:00.000Z',\n  endDate: '2020-03-31T23:59:59.999Z'\n}, {\n  startDate: '2020-04-01T00:00:00.000Z',\n  endDate: '2020-06-30T23:59:59.999Z'\n}, {\n  startDate: '2020-07-01T00:00:00.000Z',\n  endDate: '2020-09-30T23:59:59.999Z'\n}, {\n  startDate: '2020-10-01T00:00:00.000Z',\n  endDate: '2020-12-31T23:59:59.999Z'\n}, {\n  startDate: '2020-01-01T00:00:00.000Z',\n  endDate: '2020-06-30T23:59:59.999Z'\n}, {\n  startDate: '2020-07-01T00:00:00.000Z',\n  endDate: '2020-12-31T23:59:59.999Z'\n}];\nconst tabNames = ['MY TEAM', 'LEADERBOARD', 'MYSELF', 'REPORTS'];\nconst QUARTER_NAMES = ['2021', 'Q1', 'Q2', 'Q3', 'Q4'];\n\nconst ManagerDashboard = () => {\n  _s();\n\n  ReactGA.event({\n    category: 'Manager Lens',\n    action: 'Manager Lens'\n  });\n  const classes = useStyles();\n  const [activeQuarter, setActiveQuarter] = useState(0);\n  const token = localStorage.getItem('accessToken');\n  const decodedToken = token && jwtDecode(token);\n  const firstName = decodedToken.user.firstName;\n  ReactGA.event({\n    category: 'Manager Login',\n    action: `Manager Login - ${firstName}`\n  });\n\n  const handleActiveQuarterChange = value => {\n    setActiveQuarter(value);\n  };\n\n  const [activeTab, setActiveTab] = React.useState(0);\n\n  const handleTabChange = num => {\n    // alert('The URL of this page is: ' + window.location.href);\n    if (num === 0) {\n      history.pushState({}, 'null', '/dashboard/myteam');\n    } else if (num === 1) {\n      history.pushState({}, 'null', '/dashboard/leaderboard');\n    } else if (num === 2) {\n      history.pushState({}, 'null', '/dashboard/myself');\n    } else if (num === 3) {\n      history.pushState({}, 'null', '/dashboard/reports');\n    }\n\n    setActiveTab(num);\n  };\n\n  useEffect(() => {\n    //  alert('The URL of this page is: ' + window.location.href);\n    if (window.location.href.endsWith('/myteam')) {\n      setActiveTab(0);\n    } else if (window.location.href.endsWith('/leaderboard')) {\n      setActiveTab(1);\n    } else if (window.location.href.endsWith('/myself')) {\n      setActiveTab(2);\n    } else if (window.location.href.endsWith('/reports')) {\n      setActiveTab(3);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      spacing: 6,\n      className: `${classes.contentAlignment}`,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: `${classes.hideWhenPrint}`,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h1\",\n              children: firstName === null || firstName === void 0 ? void 0 : firstName.concat(\"'s lens\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), activeTab != 3 ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            className: `${classes.hideWhenPrint}`,\n            children: QUARTER_NAMES.map((quarterName, quarterIndex) => /*#__PURE__*/_jsxDEV(Button, {\n              variant: activeQuarter === quarterIndex ? 'contained' : 'outlined',\n              color: activeQuarter === quarterIndex ? 'primary' : 'default',\n              className: classes.buttonStyles,\n              onClick: () => {\n                handleActiveQuarterChange(quarterIndex);\n              },\n              children: quarterName\n            }, quarterIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            className: `${classes.hideWhenPrint}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: `${classes.hideWhenPrint}`,\n        children: /*#__PURE__*/_jsxDEV(CustomizedTabs, {\n          tabNames: tabNames,\n          primary: true,\n          activeTab: activeTab,\n          tabName: tabNames[activeTab],\n          handleTabChange: handleTabChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.tabAlignment,\n        children: [activeTab === 0 && /*#__PURE__*/_jsxDEV(MyTeamDashboard, {\n          activeQuarter: activeQuarter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 31\n        }, this), activeTab === 1 && /*#__PURE__*/_jsxDEV(Leaderboard, {\n          activeQuarter: activeQuarter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 31\n        }, this), activeTab === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: ComingSoon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), activeTab === 3 && /*#__PURE__*/_jsxDEV(ReportBuilder, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: `${classes.hideWhenPrint}`,\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ManagerDashboard, \"cBFXdstCVyO3bqOJOuFJpCZLxYI=\", false, function () {\n  return [useStyles];\n});\n\n_c = ManagerDashboard;\nexport default ManagerDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManagerDashboard\");","map":{"version":3,"sources":["/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/organisms/ManagerDashboard/index.tsx"],"names":["Button","Grid","makeStyles","Typography","React","useState","useEffect","COLORS","CustomizedTabs","MyTeamDashboard","jwtDecode","Leaderboard","Sidebar","ReportBuilder","ReactGA","ComingSoon","pageview","window","location","pathname","useStyles","theme","contentAlignment","padding","backgroundColor","HOMEPAGE_BACKGROUND","width","buttonStyles","marginRight","hideWhenPrint","display","tabAlignment","paddingLeft","dates","startDate","endDate","tabNames","QUARTER_NAMES","ManagerDashboard","event","category","action","classes","activeQuarter","setActiveQuarter","token","localStorage","getItem","decodedToken","firstName","user","handleActiveQuarterChange","value","activeTab","setActiveTab","handleTabChange","num","history","pushState","href","endsWith","concat","map","quarterName","quarterIndex","textAlign"],"mappings":"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","sourcesContent":["import { Button, Grid, makeStyles, Typography } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport { COLORS } from '../../../plTheme';\nimport CustomizedTabs from '../../molecules/CustomisedTabs';\nimport { _t_ } from '../../../utils/translation/translation';\nimport MyTeamDashboard from '../MyTeamDashboard';\nimport jwtDecode from 'jwt-decode';\nimport Leaderboard from '../Leaderboard';\nimport Sidebar from '../Sidebar';\nimport ReportBuilder from '../ReportBuilder';\nimport ReactGA from 'react-ga';\nimport ComingSoon from '../../../assets/Coming_Soon.png';\nReactGA.pageview(window.location.pathname);\n\nconst useStyles = makeStyles((theme) => ({\n  contentAlignment: {\n    padding: '2%',\n    backgroundColor: COLORS.HOMEPAGE_BACKGROUND,\n    width: 'calc(100% + 57px)',\n  },\n  buttonStyles: {\n    marginRight: '16px',\n    width: '68.08px',\n  },\n  hideWhenPrint: {},\n  [`@media print`]: {\n    contentAlignment: {\n      padding: 0,\n    },\n    hideWhenPrint: {\n      display: 'none',\n    },\n    tabAlignment: {\n      paddingLeft: '0%',\n    },\n  },\n  tabAlignment: {\n    paddingLeft: '1%',\n  },\n}));\n\nexport const dates = [\n  {\n    startDate: '2020-01-01T00:00:00.000Z',\n    endDate: '2020-12-31T23:59:59.999Z',\n  },\n  {\n    startDate: '2020-01-01T00:00:00.000Z',\n    endDate: '2020-03-31T23:59:59.999Z',\n  },\n  {\n    startDate: '2020-04-01T00:00:00.000Z',\n    endDate: '2020-06-30T23:59:59.999Z',\n  },\n  {\n    startDate: '2020-07-01T00:00:00.000Z',\n    endDate: '2020-09-30T23:59:59.999Z',\n  },\n  {\n    startDate: '2020-10-01T00:00:00.000Z',\n    endDate: '2020-12-31T23:59:59.999Z',\n  },\n  {\n    startDate: '2020-01-01T00:00:00.000Z',\n    endDate: '2020-06-30T23:59:59.999Z',\n  },\n  {\n    startDate: '2020-07-01T00:00:00.000Z',\n    endDate: '2020-12-31T23:59:59.999Z',\n  },\n];\n\nconst tabNames = ['MY TEAM', 'LEADERBOARD', 'MYSELF', 'REPORTS'];\n\nconst QUARTER_NAMES = ['2021', 'Q1', 'Q2', 'Q3', 'Q4'];\n\nconst ManagerDashboard: React.FC = () => {\n  ReactGA.event({\n    category: 'Manager Lens',\n    action: 'Manager Lens',\n  });\n  const classes = useStyles();\n  const [activeQuarter, setActiveQuarter] = useState<number>(0);\n  const token = localStorage.getItem('accessToken');\n  const decodedToken: any = token && jwtDecode(token);\n  const firstName = decodedToken.user.firstName;\n  ReactGA.event({\n    category: 'Manager Login',\n    action: `Manager Login - ${firstName}`,\n  });\n\n  const handleActiveQuarterChange = (value: number) => {\n    setActiveQuarter(value);\n  };\n\n  const [activeTab, setActiveTab] = React.useState(0);\n\n  const handleTabChange = (num: number) => {\n    // alert('The URL of this page is: ' + window.location.href);\n    if (num === 0) {\n      history.pushState({}, 'null', '/dashboard/myteam');\n    } else if (num === 1) {\n      history.pushState({}, 'null', '/dashboard/leaderboard');\n    } else if (num === 2) {\n      history.pushState({}, 'null', '/dashboard/myself');\n    } else if (num === 3) {\n      history.pushState({}, 'null', '/dashboard/reports');\n    }\n    setActiveTab(num);\n  };\n\n  useEffect(() => {\n    //  alert('The URL of this page is: ' + window.location.href);\n    if (window.location.href.endsWith('/myteam')) {\n      setActiveTab(0);\n    } else if (window.location.href.endsWith('/leaderboard')) {\n      setActiveTab(1);\n    } else if (window.location.href.endsWith('/myself')) {\n      setActiveTab(2);\n    } else if (window.location.href.endsWith('/reports')) {\n      setActiveTab(3);\n    }\n  }, []);\n\n  return (\n    <>\n      <Grid\n        container\n        direction=\"column\"\n        spacing={6}\n        className={`${classes.contentAlignment}`}\n      >\n        <Grid item className={`${classes.hideWhenPrint}`}>\n          <Grid container justify=\"space-between\">\n            <Grid item>\n              <Typography variant=\"h1\">\n                {firstName?.concat(\"'s lens\")}\n              </Typography>\n            </Grid>\n            {activeTab != 3 ? (\n              <Grid item className={`${classes.hideWhenPrint}`}>\n                {QUARTER_NAMES.map((quarterName, quarterIndex) => (\n                  <Button\n                    key={quarterIndex}\n                    variant={\n                      activeQuarter === quarterIndex ? 'contained' : 'outlined'\n                    }\n                    color={\n                      activeQuarter === quarterIndex ? 'primary' : 'default'\n                    }\n                    className={classes.buttonStyles}\n                    onClick={() => {\n                      handleActiveQuarterChange(quarterIndex);\n                    }}\n                  >\n                    {quarterName}\n                  </Button>\n                ))}\n              </Grid>\n            ) : (\n              <Grid item className={`${classes.hideWhenPrint}`}>\n                {}\n              </Grid>\n            )}\n          </Grid>\n        </Grid>\n        <Grid item className={`${classes.hideWhenPrint}`}>\n          <CustomizedTabs\n            tabNames={tabNames}\n            primary={true}\n            activeTab={activeTab}\n            tabName={tabNames[activeTab]}\n            handleTabChange={handleTabChange}\n          />\n        </Grid>\n        <Grid className={classes.tabAlignment}>\n          {activeTab === 0 && <MyTeamDashboard activeQuarter={activeQuarter} />}\n          {activeTab === 1 && <Leaderboard activeQuarter={activeQuarter} />}\n          {activeTab === 2 && (\n            <div style={{ textAlign: 'center' }}>\n              <img src={ComingSoon} />\n            </div>\n          )}\n          {activeTab === 3 && <ReportBuilder />}\n        </Grid>\n        <Grid item className={`${classes.hideWhenPrint}`}>\n          <Sidebar />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default ManagerDashboard;\n"]},"metadata":{},"sourceType":"module"}