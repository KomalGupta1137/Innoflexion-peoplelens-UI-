{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Current/peoplelens_ui/src/components/organisms/PeopleActivitiesContainer/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from '@apollo/client';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport Loader from '../../atoms/Loader';\nimport Progressbar from '../../molecules/Progressbar';\nimport SpiderChart from '../../molecules/SpiderChart';\nimport { GetPeopleActivitiesData } from '../../../gql/queries/dashboard';\nimport { dates } from '../ManagerDashboard';\nimport { useWindowSize } from '../../../utils/hooks/useWindowSize';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PeopleActivitiesContainer = ({\n  persona,\n  activeQuarter\n}) => {\n  _s();\n\n  var _data$peopleActivitie, _data$peopleActivitie2, _data$peopleActivitie3, _data$peopleActivitie4, _data$peopleActivitie5, _data$peopleActivitie6, _data$peopleActivitie7, _data$peopleActivitie8, _data$peopleActivitie9, _data$peopleActivitie10, _data$peopleActivitie11, _data$peopleActivitie12, _data$peopleActivitie13, _data$peopleActivitie14, _data$peopleActivitie15, _data$peopleActivitie16, _data$peopleActivitie17, _data$peopleActivitie18, _data$peopleActivitie19, _data$peopleActivitie20, _data$peopleActivitie21, _data$peopleActivitie22, _data$peopleActivitie23, _data$peopleActivitie24, _data$peopleActivitie25, _data$peopleActivitie26, _data$peopleActivitie27, _data$peopleActivitie28, _data$peopleActivitie29, _data$peopleActivitie30, _data$peopleActivitie31, _data$peopleActivitie32, _data$peopleActivitie33, _data$peopleActivitie34, _data$peopleActivitie35, _data$peopleActivitie36, _data$peopleActivitie37, _data$peopleActivitie38, _data$peopleActivitie39, _data$peopleActivitie40, _data$peopleActivitie41, _data$peopleActivitie42, _data$peopleActivitie43, _data$peopleActivitie44, _data$peopleActivitie45, _data$peopleActivitie46, _data$peopleActivitie47, _data$peopleActivitie48, _data$peopleActivitie49, _data$peopleActivitie50;\n\n  const [width] = useWindowSize();\n  const useStyles = makeStyles({\n    graphElement: {\n      height: 735,\n      width: 'max-content'\n    },\n    leftHeading: {\n      marginTop: '1.2rem',\n      marginLeft: 51.2\n    },\n    spiderChartElement: {\n      marginTop: 70,\n      marginBottom: 70,\n      marginLeft: width > 1400 ? '5.8rem' : '2.4rem'\n    }\n  });\n  const classes = useStyles();\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(GetPeopleActivitiesData, {\n    variables: {\n      dashboardInput: {\n        startDate: dates === null || dates === void 0 ? void 0 : dates[activeQuarter].startDate,\n        endDate: dates === null || dates === void 0 ? void 0 : dates[activeQuarter].endDate,\n        userId: ''\n      },\n      persona: persona\n    }\n  });\n  useEffect(() => {\n    void refetch();\n  }, [persona, refetch]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  if (error) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"`Error! $\", error.message, \"` \"]\n  }, void 0, true);\n  const chartDataCategories = ['Total Activity', 'Customer Activity', 'Account Activity', 'Pipeline Discipline', 'Followup Ratio'];\n  const progressBarData = [{\n    name: 'Total Activity',\n    value: Math.round(Number(data === null || data === void 0 ? void 0 : (_data$peopleActivitie = data.peopleActivities) === null || _data$peopleActivitie === void 0 ? void 0 : (_data$peopleActivitie2 = _data$peopleActivitie.objectiveScore) === null || _data$peopleActivitie2 === void 0 ? void 0 : _data$peopleActivitie2.curQuarterVal)),\n    percentage: Math.round(Number(data === null || data === void 0 ? void 0 : (_data$peopleActivitie3 = data.peopleActivities) === null || _data$peopleActivitie3 === void 0 ? void 0 : (_data$peopleActivitie4 = _data$peopleActivitie3.objectiveScore) === null || _data$peopleActivitie4 === void 0 ? void 0 : _data$peopleActivitie4.curQuarterVal) - Number(data === null || data === void 0 ? void 0 : (_data$peopleActivitie5 = data.peopleActivities) === null || _data$peopleActivitie5 === void 0 ? void 0 : (_data$peopleActivitie6 = _data$peopleActivitie5.objectiveScore) === null || _data$peopleActivitie6 === void 0 ? void 0 : _data$peopleActivitie6.prevQuarterVal)),\n    benchmarkValue: data === null || data === void 0 ? void 0 : (_data$peopleActivitie7 = data.peopleActivities) === null || _data$peopleActivitie7 === void 0 ? void 0 : (_data$peopleActivitie8 = _data$peopleActivitie7.objectiveScore) === null || _data$peopleActivitie8 === void 0 ? void 0 : _data$peopleActivitie8.benchMark\n  }, {\n    name: 'Customer Activity',\n    value: Math.round(Number(data === null || data === void 0 ? void 0 : (_data$peopleActivitie9 = data.peopleActivities) === null || _data$peopleActivitie9 === void 0 ? void 0 : (_data$peopleActivitie10 = _data$peopleActivitie9.timeAllocationScore) === null || _data$peopleActivitie10 === void 0 ? void 0 : _data$peopleActivitie10.curQuarterVal)),\n    percentage: Math.round(Number(data === null || data === void 0 ? void 0 : (_data$peopleActivitie11 = data.peopleActivities) === null || _data$peopleActivitie11 === void 0 ? void 0 : (_data$peopleActivitie12 = _data$peopleActivitie11.timeAllocationScore) === null || _data$peopleActivitie12 === void 0 ? void 0 : _data$peopleActivitie12.curQuarterVal) - Number(data === null || data === void 0 ? void 0 : (_data$peopleActivitie13 = data.peopleActivities) === null || _data$peopleActivitie13 === void 0 ? void 0 : (_data$peopleActivitie14 = _data$peopleActivitie13.timeAllocationScore) === null || _data$peopleActivitie14 === void 0 ? void 0 : _data$peopleActivitie14.prevQuarterVal)),\n    benchmarkValue: data === null || data === void 0 ? void 0 : (_data$peopleActivitie15 = data.peopleActivities) === null || _data$peopleActivitie15 === void 0 ? void 0 : (_data$peopleActivitie16 = _data$peopleActivitie15.timeAllocationScore) === null || _data$peopleActivitie16 === void 0 ? void 0 : _data$peopleActivitie16.benchMark\n  }, {\n    name: 'Account Activity',\n    value: Math.round(Number(data === null || data === void 0 ? void 0 : (_data$peopleActivitie17 = data.peopleActivities) === null || _data$peopleActivitie17 === void 0 ? void 0 : (_data$peopleActivitie18 = _data$peopleActivitie17.accountCoverage) === null || _data$peopleActivitie18 === void 0 ? void 0 : _data$peopleActivitie18.curQuarterVal)),\n    percentage: Math.round(Number(data === null || data === void 0 ? void 0 : (_data$peopleActivitie19 = data.peopleActivities) === null || _data$peopleActivitie19 === void 0 ? void 0 : (_data$peopleActivitie20 = _data$peopleActivitie19.accountCoverage) === null || _data$peopleActivitie20 === void 0 ? void 0 : _data$peopleActivitie20.curQuarterVal) - Number(data === null || data === void 0 ? void 0 : (_data$peopleActivitie21 = data.peopleActivities) === null || _data$peopleActivitie21 === void 0 ? void 0 : (_data$peopleActivitie22 = _data$peopleActivitie21.accountCoverage) === null || _data$peopleActivitie22 === void 0 ? void 0 : _data$peopleActivitie22.prevQuarterVal)),\n    benchmarkValue: data === null || data === void 0 ? void 0 : (_data$peopleActivitie23 = data.peopleActivities) === null || _data$peopleActivitie23 === void 0 ? void 0 : (_data$peopleActivitie24 = _data$peopleActivitie23.accountCoverage) === null || _data$peopleActivitie24 === void 0 ? void 0 : _data$peopleActivitie24.benchMark\n  }, {\n    name: 'Pipeline Discipline',\n    value: Math.round(Number(data === null || data === void 0 ? void 0 : (_data$peopleActivitie25 = data.peopleActivities) === null || _data$peopleActivitie25 === void 0 ? void 0 : (_data$peopleActivitie26 = _data$peopleActivitie25.pipelineDisciplineScore) === null || _data$peopleActivitie26 === void 0 ? void 0 : _data$peopleActivitie26.curQuarterVal)),\n    percentage: Math.round(Number(data === null || data === void 0 ? void 0 : (_data$peopleActivitie27 = data.peopleActivities) === null || _data$peopleActivitie27 === void 0 ? void 0 : (_data$peopleActivitie28 = _data$peopleActivitie27.pipelineDisciplineScore) === null || _data$peopleActivitie28 === void 0 ? void 0 : _data$peopleActivitie28.curQuarterVal) - Number(data === null || data === void 0 ? void 0 : (_data$peopleActivitie29 = data.peopleActivities) === null || _data$peopleActivitie29 === void 0 ? void 0 : (_data$peopleActivitie30 = _data$peopleActivitie29.pipelineDisciplineScore) === null || _data$peopleActivitie30 === void 0 ? void 0 : _data$peopleActivitie30.prevQuarterVal)),\n    benchmarkValue: data === null || data === void 0 ? void 0 : (_data$peopleActivitie31 = data.peopleActivities) === null || _data$peopleActivitie31 === void 0 ? void 0 : (_data$peopleActivitie32 = _data$peopleActivitie31.pipelineDisciplineScore) === null || _data$peopleActivitie32 === void 0 ? void 0 : _data$peopleActivitie32.benchMark\n  }, {\n    name: 'Followup Ratio',\n    value: Math.round(Number(data === null || data === void 0 ? void 0 : (_data$peopleActivitie33 = data.peopleActivities) === null || _data$peopleActivitie33 === void 0 ? void 0 : (_data$peopleActivitie34 = _data$peopleActivitie33.followThrough) === null || _data$peopleActivitie34 === void 0 ? void 0 : _data$peopleActivitie34.curQuarterVal)),\n    percentage: Math.round(Number(data === null || data === void 0 ? void 0 : (_data$peopleActivitie35 = data.peopleActivities) === null || _data$peopleActivitie35 === void 0 ? void 0 : (_data$peopleActivitie36 = _data$peopleActivitie35.followThrough) === null || _data$peopleActivitie36 === void 0 ? void 0 : _data$peopleActivitie36.curQuarterVal) - Number(data === null || data === void 0 ? void 0 : (_data$peopleActivitie37 = data.peopleActivities) === null || _data$peopleActivitie37 === void 0 ? void 0 : (_data$peopleActivitie38 = _data$peopleActivitie37.followThrough) === null || _data$peopleActivitie38 === void 0 ? void 0 : _data$peopleActivitie38.prevQuarterVal)),\n    benchmarkValue: data === null || data === void 0 ? void 0 : (_data$peopleActivitie39 = data.peopleActivities) === null || _data$peopleActivitie39 === void 0 ? void 0 : (_data$peopleActivitie40 = _data$peopleActivitie39.followThrough) === null || _data$peopleActivitie40 === void 0 ? void 0 : _data$peopleActivitie40.benchMark\n  }];\n  const chartData = [Math.round(Number(data === null || data === void 0 ? void 0 : (_data$peopleActivitie41 = data.peopleActivities) === null || _data$peopleActivitie41 === void 0 ? void 0 : (_data$peopleActivitie42 = _data$peopleActivitie41.objectiveScore) === null || _data$peopleActivitie42 === void 0 ? void 0 : _data$peopleActivitie42.curQuarterVal)), Math.round(Number(data === null || data === void 0 ? void 0 : (_data$peopleActivitie43 = data.peopleActivities) === null || _data$peopleActivitie43 === void 0 ? void 0 : (_data$peopleActivitie44 = _data$peopleActivitie43.timeAllocationScore) === null || _data$peopleActivitie44 === void 0 ? void 0 : _data$peopleActivitie44.curQuarterVal)), Math.round(Number(data === null || data === void 0 ? void 0 : (_data$peopleActivitie45 = data.peopleActivities) === null || _data$peopleActivitie45 === void 0 ? void 0 : (_data$peopleActivitie46 = _data$peopleActivitie45.pipelineDisciplineScore) === null || _data$peopleActivitie46 === void 0 ? void 0 : _data$peopleActivitie46.curQuarterVal)), Math.round(Number(data === null || data === void 0 ? void 0 : (_data$peopleActivitie47 = data.peopleActivities) === null || _data$peopleActivitie47 === void 0 ? void 0 : (_data$peopleActivitie48 = _data$peopleActivitie47.followThrough) === null || _data$peopleActivitie48 === void 0 ? void 0 : _data$peopleActivitie48.curQuarterVal)), Math.round(Number(data === null || data === void 0 ? void 0 : (_data$peopleActivitie49 = data.peopleActivities) === null || _data$peopleActivitie49 === void 0 ? void 0 : (_data$peopleActivitie50 = _data$peopleActivitie49.accountCoverage) === null || _data$peopleActivitie50 === void 0 ? void 0 : _data$peopleActivitie50.curQuarterVal))];\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"row\",\n    alignItems: \"flex-end\",\n    justify: \"space-between\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        className: classes.graphElement,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            justify: \"space-between\",\n            style: {\n              marginTop: 2\n            },\n            children: progressBarData.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              className: classes.leftHeading,\n              children: /*#__PURE__*/_jsxDEV(Progressbar, {\n                name: item.name,\n                value1: item.value,\n                value2: item.value > 100 ? item.value / 2 > 100 ? 100 : item.value / 2 : item.value,\n                benchmarkValue: item.benchmarkValue ? item.benchmarkValue : 0,\n                percentage: item.percentage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.spiderChartElement,\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(SpiderChart, {\n            chartData: chartData,\n            chartDataCategories: chartDataCategories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PeopleActivitiesContainer, \"wYn/st9y1aH5OnOH/CGMDLP5MxY=\", true, function () {\n  return [useWindowSize, useQuery];\n});\n\n_c = PeopleActivitiesContainer;\nexport default PeopleActivitiesContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PeopleActivitiesContainer\");","map":{"version":3,"sources":["/home/komal/Documents/Current/peoplelens_ui/src/components/organisms/PeopleActivitiesContainer/index.tsx"],"names":["useQuery","Grid","makeStyles","React","useEffect","Loader","Progressbar","SpiderChart","GetPeopleActivitiesData","dates","useWindowSize","PeopleActivitiesContainer","persona","activeQuarter","width","useStyles","graphElement","height","leftHeading","marginTop","marginLeft","spiderChartElement","marginBottom","classes","loading","error","data","refetch","variables","dashboardInput","startDate","endDate","userId","message","chartDataCategories","progressBarData","name","value","Math","round","Number","peopleActivities","objectiveScore","curQuarterVal","percentage","prevQuarterVal","benchmarkValue","benchMark","timeAllocationScore","accountCoverage","pipelineDisciplineScore","followThrough","chartData","map","item","index"],"mappings":";;;AAAA,SAAsBA,QAAtB,QAAsC,gBAAtC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA,SAASC,uBAAT,QAAwC,gCAAxC;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,aAAT,QAA8B,oCAA9B;;;;AAMA,MAAMC,yBAAmE,GAAG,CAAC;AAC3EC,EAAAA,OAD2E;AAE3EC,EAAAA;AAF2E,CAAD,KAGtC;AAAA;;AAAA;;AACpC,QAAM,CAACC,KAAD,IAAUJ,aAAa,EAA7B;AACA,QAAMK,SAAS,GAAGb,UAAU,CAAC;AAC3Bc,IAAAA,YAAY,EAAE;AACZC,MAAAA,MAAM,EAAE,GADI;AAEZH,MAAAA,KAAK,EAAE;AAFK,KADa;AAK3BI,IAAAA,WAAW,EAAE;AACXC,MAAAA,SAAS,EAAE,QADA;AAEXC,MAAAA,UAAU,EAAE;AAFD,KALc;AAS3BC,IAAAA,kBAAkB,EAAE;AAClBF,MAAAA,SAAS,EAAE,EADO;AAElBG,MAAAA,YAAY,EAAE,EAFI;AAGlBF,MAAAA,UAAU,EAAEN,KAAK,GAAG,IAAR,GAAe,QAAf,GAA0B;AAHpB;AATO,GAAD,CAA5B;AAeA,QAAMS,OAAO,GAAGR,SAAS,EAAzB;AAEA,QAAM;AACJS,IAAAA,OADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,IAHI;AAIJC,IAAAA;AAJI,MAKiC3B,QAAQ,CAACQ,uBAAD,EAA0B;AACvEoB,IAAAA,SAAS,EAAE;AACTC,MAAAA,cAAc,EAAE;AACdC,QAAAA,SAAS,EAAErB,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAGI,aAAH,CAAL,CAAuBiB,SADpB;AAEdC,QAAAA,OAAO,EAAEtB,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAGI,aAAH,CAAL,CAAuBkB,OAFlB;AAGdC,QAAAA,MAAM,EAAE;AAHM,OADP;AAMTpB,MAAAA,OAAO,EAAEA;AANA;AAD4D,GAA1B,CAL/C;AAgBAR,EAAAA,SAAS,CAAC,MAAM;AACd,SAAKuB,OAAO,EAAZ;AACD,GAFQ,EAEN,CAACf,OAAD,EAAUe,OAAV,CAFM,CAAT;;AAIA,MAAIH,OAAJ,EAAa;AACX,wBACE;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAKD;;AACD,MAAIC,KAAJ,EAAW,oBAAO;AAAA,4BAAYA,KAAK,CAACQ,OAAlB;AAAA,kBAAP;AAEX,QAAMC,mBAAmB,GAAG,CAC1B,gBAD0B,EAE1B,mBAF0B,EAG1B,kBAH0B,EAI1B,qBAJ0B,EAK1B,gBAL0B,CAA5B;AAQA,QAAMC,eAAe,GAAG,CACtB;AACEC,IAAAA,IAAI,EAAE,gBADR;AAEEC,IAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CACLC,MAAM,CAACd,IAAD,aAACA,IAAD,gDAACA,IAAI,CAAEe,gBAAP,oFAAC,sBAAwBC,cAAzB,2DAAC,uBAAwCC,aAAzC,CADD,CAFT;AAKEC,IAAAA,UAAU,EAAEN,IAAI,CAACC,KAAL,CACVC,MAAM,CAACd,IAAD,aAACA,IAAD,iDAACA,IAAI,CAAEe,gBAAP,qFAAC,uBAAwBC,cAAzB,2DAAC,uBAAwCC,aAAzC,CAAN,GACEH,MAAM,CAACd,IAAD,aAACA,IAAD,iDAACA,IAAI,CAAEe,gBAAP,qFAAC,uBAAwBC,cAAzB,2DAAC,uBAAwCG,cAAzC,CAFE,CALd;AASEC,IAAAA,cAAc,EAAEpB,IAAF,aAAEA,IAAF,iDAAEA,IAAI,CAAEe,gBAAR,qFAAE,uBAAwBC,cAA1B,2DAAE,uBAAwCK;AAT1D,GADsB,EAYtB;AACEX,IAAAA,IAAI,EAAE,mBADR;AAEEC,IAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CACLC,MAAM,CAACd,IAAD,aAACA,IAAD,iDAACA,IAAI,CAAEe,gBAAP,sFAAC,uBAAwBO,mBAAzB,4DAAC,wBAA6CL,aAA9C,CADD,CAFT;AAKEC,IAAAA,UAAU,EAAEN,IAAI,CAACC,KAAL,CACVC,MAAM,CAACd,IAAD,aAACA,IAAD,kDAACA,IAAI,CAAEe,gBAAP,uFAAC,wBAAwBO,mBAAzB,4DAAC,wBAA6CL,aAA9C,CAAN,GACEH,MAAM,CAACd,IAAD,aAACA,IAAD,kDAACA,IAAI,CAAEe,gBAAP,uFAAC,wBAAwBO,mBAAzB,4DAAC,wBAA6CH,cAA9C,CAFE,CALd;AASEC,IAAAA,cAAc,EAAEpB,IAAF,aAAEA,IAAF,kDAAEA,IAAI,CAAEe,gBAAR,uFAAE,wBAAwBO,mBAA1B,4DAAE,wBAA6CD;AAT/D,GAZsB,EAuBtB;AACEX,IAAAA,IAAI,EAAE,kBADR;AAEEC,IAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CACLC,MAAM,CAACd,IAAD,aAACA,IAAD,kDAACA,IAAI,CAAEe,gBAAP,uFAAC,wBAAwBQ,eAAzB,4DAAC,wBAAyCN,aAA1C,CADD,CAFT;AAKEC,IAAAA,UAAU,EAAEN,IAAI,CAACC,KAAL,CACVC,MAAM,CAACd,IAAD,aAACA,IAAD,kDAACA,IAAI,CAAEe,gBAAP,uFAAC,wBAAwBQ,eAAzB,4DAAC,wBAAyCN,aAA1C,CAAN,GACEH,MAAM,CAACd,IAAD,aAACA,IAAD,kDAACA,IAAI,CAAEe,gBAAP,uFAAC,wBAAwBQ,eAAzB,4DAAC,wBAAyCJ,cAA1C,CAFE,CALd;AASEC,IAAAA,cAAc,EAAEpB,IAAF,aAAEA,IAAF,kDAAEA,IAAI,CAAEe,gBAAR,uFAAE,wBAAwBQ,eAA1B,4DAAE,wBAAyCF;AAT3D,GAvBsB,EAkCtB;AACEX,IAAAA,IAAI,EAAE,qBADR;AAEEC,IAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CACLC,MAAM,CAACd,IAAD,aAACA,IAAD,kDAACA,IAAI,CAAEe,gBAAP,uFAAC,wBAAwBS,uBAAzB,4DAAC,wBAAiDP,aAAlD,CADD,CAFT;AAKEC,IAAAA,UAAU,EAAEN,IAAI,CAACC,KAAL,CACVC,MAAM,CAACd,IAAD,aAACA,IAAD,kDAACA,IAAI,CAAEe,gBAAP,uFAAC,wBAAwBS,uBAAzB,4DAAC,wBAAiDP,aAAlD,CAAN,GACEH,MAAM,CACJd,IADI,aACJA,IADI,kDACJA,IAAI,CAAEe,gBADF,uFACJ,wBAAwBS,uBADpB,4DACJ,wBAAiDL,cAD7C,CAFE,CALd;AAWEC,IAAAA,cAAc,EACZpB,IADY,aACZA,IADY,kDACZA,IAAI,CAAEe,gBADM,uFACZ,wBAAwBS,uBADZ,4DACZ,wBAAiDH;AAZrD,GAlCsB,EAgDtB;AACEX,IAAAA,IAAI,EAAE,gBADR;AAEEC,IAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CACLC,MAAM,CAACd,IAAD,aAACA,IAAD,kDAACA,IAAI,CAAEe,gBAAP,uFAAC,wBAAwBU,aAAzB,4DAAC,wBAAuCR,aAAxC,CADD,CAFT;AAKEC,IAAAA,UAAU,EAAEN,IAAI,CAACC,KAAL,CACVC,MAAM,CAACd,IAAD,aAACA,IAAD,kDAACA,IAAI,CAAEe,gBAAP,uFAAC,wBAAwBU,aAAzB,4DAAC,wBAAuCR,aAAxC,CAAN,GACEH,MAAM,CAACd,IAAD,aAACA,IAAD,kDAACA,IAAI,CAAEe,gBAAP,uFAAC,wBAAwBU,aAAzB,4DAAC,wBAAuCN,cAAxC,CAFE,CALd;AASEC,IAAAA,cAAc,EAAEpB,IAAF,aAAEA,IAAF,kDAAEA,IAAI,CAAEe,gBAAR,uFAAE,wBAAwBU,aAA1B,4DAAE,wBAAuCJ;AATzD,GAhDsB,CAAxB;AA6DA,QAAMK,SAAS,GAAG,CAChBd,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACd,IAAD,aAACA,IAAD,kDAACA,IAAI,CAAEe,gBAAP,uFAAC,wBAAwBC,cAAzB,4DAAC,wBAAwCC,aAAzC,CAAjB,CADgB,EAEhBL,IAAI,CAACC,KAAL,CACEC,MAAM,CAACd,IAAD,aAACA,IAAD,kDAACA,IAAI,CAAEe,gBAAP,uFAAC,wBAAwBO,mBAAzB,4DAAC,wBAA6CL,aAA9C,CADR,CAFgB,EAKhBL,IAAI,CAACC,KAAL,CACEC,MAAM,CAACd,IAAD,aAACA,IAAD,kDAACA,IAAI,CAAEe,gBAAP,uFAAC,wBAAwBS,uBAAzB,4DAAC,wBAAiDP,aAAlD,CADR,CALgB,EAQhBL,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACd,IAAD,aAACA,IAAD,kDAACA,IAAI,CAAEe,gBAAP,uFAAC,wBAAwBU,aAAzB,4DAAC,wBAAuCR,aAAxC,CAAjB,CARgB,EAShBL,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACd,IAAD,aAACA,IAAD,kDAACA,IAAI,CAAEe,gBAAP,uFAAC,wBAAwBQ,eAAzB,4DAAC,wBAAyCN,aAA1C,CAAjB,CATgB,CAAlB;AAYA,sBACE,QAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,UAAU,EAAC,UAHb;AAIE,IAAA,OAAO,EAAC,eAJV;AAAA,2BAME,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,SAAS,EAAC,KAFZ;AAGE,QAAA,OAAO,EAAC,YAHV;AAIE,QAAA,SAAS,EAAEpB,OAAO,CAACP,YAJrB;AAAA,gCAME,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,IAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,SAAS,EAAC,QAFZ;AAGE,YAAA,OAAO,EAAC,eAHV;AAIE,YAAA,KAAK,EAAE;AAAEG,cAAAA,SAAS,EAAE;AAAb,aAJT;AAAA,sBAMGgB,eAAe,CAACkB,GAAhB,CAAoB,CAACC,IAAD,EAAOC,KAAP,kBACnB,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAuB,cAAA,SAAS,EAAEhC,OAAO,CAACL,WAA1C;AAAA,qCACE,QAAC,WAAD;AACE,gBAAA,IAAI,EAAEoC,IAAI,CAAClB,IADb;AAEE,gBAAA,MAAM,EAAEkB,IAAI,CAACjB,KAFf;AAGE,gBAAA,MAAM,EACJiB,IAAI,CAACjB,KAAL,GAAa,GAAb,GACIiB,IAAI,CAACjB,KAAL,GAAa,CAAb,GAAiB,GAAjB,GACE,GADF,GAEEiB,IAAI,CAACjB,KAAL,GAAa,CAHnB,GAIIiB,IAAI,CAACjB,KARb;AAUE,gBAAA,cAAc,EACZiB,IAAI,CAACR,cAAL,GAAsBQ,IAAI,CAACR,cAA3B,GAA4C,CAXhD;AAaE,gBAAA,UAAU,EAAEQ,IAAI,CAACV;AAbnB;AAAA;AAAA;AAAA;AAAA;AADF,eAAgBW,KAAhB;AAAA;AAAA;AAAA;AAAA,oBADD;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,eAkCE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,SAAS,EAAEhC,OAAO,CAACF,kBAA9B;AAAkD,UAAA,OAAO,EAAC,QAA1D;AAAA,iCACE,QAAC,WAAD;AACE,YAAA,SAAS,EAAE+B,SADb;AAEE,YAAA,mBAAmB,EAAElB;AAFvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAlCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAoDD,CAxLD;;GAAMvB,yB;UAIYD,a,EAuBuBV,Q;;;KA3BnCW,yB;AA0LN,eAAeA,yBAAf","sourcesContent":["import { QueryResult, useQuery } from '@apollo/client';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport Loader from '../../atoms/Loader';\nimport Progressbar from '../../molecules/Progressbar';\nimport SpiderChart from '../../molecules/SpiderChart';\nimport { peopleactivityQuery as PeopleActivitiesData } from '../../../gql/types';\nimport { GetPeopleActivitiesData } from '../../../gql/queries/dashboard';\nimport { dates } from '../ManagerDashboard';\nimport { useWindowSize } from '../../../utils/hooks/useWindowSize';\ninterface PeopleActivitiesContainerProps {\n  persona: string;\n  activeQuarter: number;\n}\n\nconst PeopleActivitiesContainer: React.FC<PeopleActivitiesContainerProps> = ({\n  persona,\n  activeQuarter,\n}: PeopleActivitiesContainerProps) => {\n  const [width] = useWindowSize();\n  const useStyles = makeStyles({\n    graphElement: {\n      height: 735,\n      width: 'max-content',\n    },\n    leftHeading: {\n      marginTop: '1.2rem',\n      marginLeft: 51.2,\n    },\n    spiderChartElement: {\n      marginTop: 70,\n      marginBottom: 70,\n      marginLeft: width > 1400 ? '5.8rem' : '2.4rem',\n    },\n  });\n  const classes = useStyles();\n\n  const {\n    loading,\n    error,\n    data,\n    refetch,\n  }: QueryResult<PeopleActivitiesData> = useQuery(GetPeopleActivitiesData, {\n    variables: {\n      dashboardInput: {\n        startDate: dates?.[activeQuarter].startDate,\n        endDate: dates?.[activeQuarter].endDate,\n        userId: '',\n      },\n      persona: persona,\n    },\n  });\n\n  useEffect(() => {\n    void refetch();\n  }, [persona, refetch]);\n\n  if (loading) {\n    return (\n      <>\n        <Loader />\n      </>\n    );\n  }\n  if (error) return <>`Error! ${error.message}` </>;\n\n  const chartDataCategories = [\n    'Total Activity',\n    'Customer Activity',\n    'Account Activity',\n    'Pipeline Discipline',\n    'Followup Ratio',\n  ];\n\n  const progressBarData = [\n    {\n      name: 'Total Activity',\n      value: Math.round(\n        Number(data?.peopleActivities?.objectiveScore?.curQuarterVal),\n      ),\n      percentage: Math.round(\n        Number(data?.peopleActivities?.objectiveScore?.curQuarterVal) -\n          Number(data?.peopleActivities?.objectiveScore?.prevQuarterVal),\n      ),\n      benchmarkValue: data?.peopleActivities?.objectiveScore?.benchMark,\n    },\n    {\n      name: 'Customer Activity',\n      value: Math.round(\n        Number(data?.peopleActivities?.timeAllocationScore?.curQuarterVal),\n      ),\n      percentage: Math.round(\n        Number(data?.peopleActivities?.timeAllocationScore?.curQuarterVal) -\n          Number(data?.peopleActivities?.timeAllocationScore?.prevQuarterVal),\n      ),\n      benchmarkValue: data?.peopleActivities?.timeAllocationScore?.benchMark,\n    },\n    {\n      name: 'Account Activity',\n      value: Math.round(\n        Number(data?.peopleActivities?.accountCoverage?.curQuarterVal),\n      ),\n      percentage: Math.round(\n        Number(data?.peopleActivities?.accountCoverage?.curQuarterVal) -\n          Number(data?.peopleActivities?.accountCoverage?.prevQuarterVal),\n      ),\n      benchmarkValue: data?.peopleActivities?.accountCoverage?.benchMark,\n    },\n    {\n      name: 'Pipeline Discipline',\n      value: Math.round(\n        Number(data?.peopleActivities?.pipelineDisciplineScore?.curQuarterVal),\n      ),\n      percentage: Math.round(\n        Number(data?.peopleActivities?.pipelineDisciplineScore?.curQuarterVal) -\n          Number(\n            data?.peopleActivities?.pipelineDisciplineScore?.prevQuarterVal,\n          ),\n      ),\n      benchmarkValue:\n        data?.peopleActivities?.pipelineDisciplineScore?.benchMark,\n    },\n    {\n      name: 'Followup Ratio',\n      value: Math.round(\n        Number(data?.peopleActivities?.followThrough?.curQuarterVal),\n      ),\n      percentage: Math.round(\n        Number(data?.peopleActivities?.followThrough?.curQuarterVal) -\n          Number(data?.peopleActivities?.followThrough?.prevQuarterVal),\n      ),\n      benchmarkValue: data?.peopleActivities?.followThrough?.benchMark,\n    },\n  ];\n\n  const chartData = [\n    Math.round(Number(data?.peopleActivities?.objectiveScore?.curQuarterVal)),\n    Math.round(\n      Number(data?.peopleActivities?.timeAllocationScore?.curQuarterVal),\n    ),\n    Math.round(\n      Number(data?.peopleActivities?.pipelineDisciplineScore?.curQuarterVal),\n    ),\n    Math.round(Number(data?.peopleActivities?.followThrough?.curQuarterVal)),\n    Math.round(Number(data?.peopleActivities?.accountCoverage?.curQuarterVal)),\n  ];\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      alignItems=\"flex-end\"\n      justify=\"space-between\"\n    >\n      <Grid item xs={12}>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          className={classes.graphElement}\n        >\n          <Grid item>\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"space-between\"\n              style={{ marginTop: 2 }}\n            >\n              {progressBarData.map((item, index: number) => (\n                <Grid item key={index} className={classes.leftHeading}>\n                  <Progressbar\n                    name={item.name}\n                    value1={item.value}\n                    value2={\n                      item.value > 100\n                        ? item.value / 2 > 100\n                          ? 100\n                          : item.value / 2\n                        : item.value\n                    }\n                    benchmarkValue={\n                      item.benchmarkValue ? item.benchmarkValue : 0\n                    }\n                    percentage={item.percentage}\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          </Grid>\n          <Grid item className={classes.spiderChartElement} justify=\"center\">\n            <SpiderChart\n              chartData={chartData}\n              chartDataCategories={chartDataCategories}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default PeopleActivitiesContainer;\n"]},"metadata":{},"sourceType":"module"}