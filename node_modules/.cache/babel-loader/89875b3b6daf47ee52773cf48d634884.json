{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/organisms/ComissionStructure/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useGlobalStyles } from '../../../plStyles';\nimport { _t_ } from '../../../utils/translation/translation';\nimport WidgetCard from '../../atoms/WidgetCard';\nimport { COLORS } from '../../../plTheme';\nimport { _n_ } from '../../../utils/numerals/numerals';\nimport { useWindowSize } from '../../../utils/hooks/useWindowSize';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CommisionStructure = ({\n  data\n}) => {\n  _s();\n\n  const [width] = useWindowSize();\n  const structure = [{\n    threshold: '',\n    rate: 0,\n    value: ''\n  }];\n  structure.pop();\n\n  if (data) {\n    data.forEach(element => {\n      structure.push({\n        threshold: (element === null || element === void 0 ? void 0 : element.threshold) ? _n_(element === null || element === void 0 ? void 0 : element.threshold, '0.0a') : '',\n        rate: (element === null || element === void 0 ? void 0 : element.rate) ? element === null || element === void 0 ? void 0 : element.rate : 0,\n        value: (element === null || element === void 0 ? void 0 : element.value) ? _n_(element === null || element === void 0 ? void 0 : element.value.toFixed().toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','), '0[.]0a') : ''\n      });\n    });\n  }\n\n  const useStyles = makeStyles({\n    root: {\n      height: 396,\n      padding: 16,\n      paddingRight: 30,\n      background: '#D9D9D9',\n      opacity: 0.6\n    },\n    data: {\n      fontFamily: 'Rubik',\n      fontSize: 20,\n      fontWeight: 500,\n      color: COLORS.TEXT_HIGH_EMPHASIS\n    },\n    percentage: {\n      fontFamily: 'Rubik',\n      fontSize: 16,\n      fontWeight: 500,\n      color: COLORS.TEXT_HIGH_EMPHASIS,\n      // marginRight: width < 1500 ? 80 : 140,\n      textAlign: 'left'\n    }\n  });\n  const globalClasses = useGlobalStyles();\n  const classes = useStyles();\n  const divWidth = 60;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [' ', /*#__PURE__*/_jsxDEV(WidgetCard, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            width: '100%',\n            marginBottom: '0.5rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: globalClasses.body1WidgetTitle,\n            children: _t_('commission structure')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          direction: \"row\",\n          alignItems: \"center\",\n          justify: \"center\",\n          container: true // key={index}\n          ,\n          style: {\n            paddingTop: 0,\n            paddingLeft: 5,\n            justifyContent: 'flex-start',\n            marginBottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              width: '16.5%'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.data,\n              style: {\n                fontSize: '14px',\n                marginLeft: 6\n              },\n              children: 'Tier'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              width: '30%'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.percentage,\n              style: {\n                fontSize: '14px'\n              },\n              children: 'Variable'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              width: '0%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          direction: \"row\",\n          alignItems: \"center\",\n          justify: \"center\",\n          container: true // key={index}\n          ,\n          style: {\n            paddingTop: 0,\n            paddingLeft: 5,\n            justifyContent: 'flex-start',\n            marginBottom: -20\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              width: '19%',\n              marginLeft: 4\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.data,\n              style: {\n                fontSize: '14px'\n              },\n              children: '($M) '\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              width: '30%'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.percentage,\n              style: {\n                fontSize: '14px'\n              },\n              children: '(%)'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              width: '0%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), structure.map((element, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          direction: \"row\",\n          alignItems: \"center\",\n          justify: \"center\",\n          container: true,\n          style: {\n            paddingTop: '3rem',\n            paddingLeft: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              width: '20%'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.data,\n              children: [' ', element === null || element === void 0 ? void 0 : element.threshold, index + 1 === structure.length && '+']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              width: '30%'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.percentage,\n              align: \"right\",\n              children: [element === null || element === void 0 ? void 0 : element.rate, '%']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              width: '50%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: COLORS.PL_PRIMARY,\n                borderRadius: '0px 10px 10px 0px',\n                minWidth: '40%',\n                width: index === 0 ? 'fit-content' : String(Number(divWidth + index * 15)) + '%',\n                height: '120%',\n                alignItems: 'center',\n                display: 'flex',\n                paddingLeft: '2%',\n                color: 'white'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  fontFamily: 'Rubik',\n                  fontWeight: 400,\n                  fontSize: 13\n                },\n                children: [' ', '$', (element === null || element === void 0 ? void 0 : element.value) === '62.5K' ? '65K' : element === null || element === void 0 ? void 0 : element.value, index + 1 === structure.length && '+']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CommisionStructure, \"YqdXBL9Sxqff0SeBKNu0www9U1I=\", true, function () {\n  return [useWindowSize, useGlobalStyles];\n});\n\n_c = CommisionStructure;\nexport default CommisionStructure;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommisionStructure\");","map":{"version":3,"sources":["/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/organisms/ComissionStructure/index.tsx"],"names":["Grid","makeStyles","Typography","React","useGlobalStyles","_t_","WidgetCard","COLORS","_n_","useWindowSize","CommisionStructure","data","width","structure","threshold","rate","value","pop","forEach","element","push","toFixed","toString","replace","useStyles","root","height","padding","paddingRight","background","opacity","fontFamily","fontSize","fontWeight","color","TEXT_HIGH_EMPHASIS","percentage","textAlign","globalClasses","classes","divWidth","marginBottom","body1WidgetTitle","paddingTop","paddingLeft","justifyContent","marginLeft","map","index","length","backgroundColor","PL_PRIMARY","borderRadius","minWidth","String","Number","alignItems","display"],"mappings":"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","sourcesContent":["import { Grid, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useGlobalStyles } from '../../../plStyles';\nimport { _t_ } from '../../../utils/translation/translation';\nimport WidgetCard from '../../atoms/WidgetCard';\nimport { COLORS } from '../../../plTheme';\nimport { repDashboardData_RepDashboardData_rewards_commissionStructure as CommisionStructureData } from '../../../gql/types';\nimport { _n_ } from '../../../utils/numerals/numerals';\n\nimport { useWindowSize } from '../../../utils/hooks/useWindowSize';\ninterface CommisionStructureProps {\n  data?: (CommisionStructureData | null)[] | null;\n}\n\nconst CommisionStructure: React.FC<CommisionStructureProps> = ({\n  data,\n}: CommisionStructureProps) => {\n  const [width] = useWindowSize();\n  const structure = [{ threshold: '', rate: 0, value: '' }];\n  structure.pop();\n  if (data) {\n    data.forEach((element) => {\n      structure.push({\n        threshold: element?.threshold ? _n_(element?.threshold, '0.0a') : '',\n\n        rate: element?.rate ? element?.rate : 0,\n        value: element?.value\n          ? _n_(\n              element?.value\n                .toFixed()\n                .toString()\n                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n              '0[.]0a',\n            )\n          : '',\n      });\n    });\n  }\n\n  const useStyles = makeStyles({\n    root: {\n      height: 396,\n      padding: 16,\n      paddingRight: 30,\n      background: '#D9D9D9',\n      opacity: 0.6,\n    },\n    data: {\n      fontFamily: 'Rubik',\n      fontSize: 20,\n      fontWeight: 500,\n      color: COLORS.TEXT_HIGH_EMPHASIS,\n    },\n    percentage: {\n      fontFamily: 'Rubik',\n      fontSize: 16,\n      fontWeight: 500,\n      color: COLORS.TEXT_HIGH_EMPHASIS,\n      // marginRight: width < 1500 ? 80 : 140,\n      textAlign: 'left',\n    },\n  });\n  const globalClasses = useGlobalStyles();\n  const classes = useStyles();\n  const divWidth = 60;\n  return (\n    <>\n      {' '}\n      <WidgetCard>\n        <Grid container direction=\"column\" className={classes.root}>\n          <Grid item style={{ width: '100%', marginBottom: '0.5rem' }}>\n            <Typography className={globalClasses.body1WidgetTitle}>\n              {_t_('commission structure')}\n            </Typography>\n          </Grid>\n          <Grid\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n            container\n            // key={index}\n            style={{\n              paddingTop: 0,\n              paddingLeft: 5,\n              justifyContent: 'flex-start',\n              marginBottom: 5,\n            }}\n          >\n            <Grid item style={{ width: '16.5%' }}>\n              <Typography\n                className={classes.data}\n                style={{ fontSize: '14px', marginLeft: 6 }}\n              >\n                {'Tier'}\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              style={{\n                width: '30%',\n              }}\n            >\n              <Typography\n                className={classes.percentage}\n                style={{ fontSize: '14px' }}\n              >\n                {'Variable'}\n              </Typography>\n            </Grid>\n\n            <Grid item style={{ width: '0%' }}>\n              <div>\n                <Typography> {/* {'$'} */}</Typography>\n              </div>\n            </Grid>\n          </Grid>\n          <Grid\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n            container\n            // key={index}\n            style={{\n              paddingTop: 0,\n              paddingLeft: 5,\n              justifyContent: 'flex-start',\n              marginBottom: -20,\n            }}\n          >\n            <Grid item style={{ width: '19%', marginLeft: 4 }}>\n              <Typography className={classes.data} style={{ fontSize: '14px' }}>\n                {'($M) '}\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              style={{\n                width: '30%',\n              }}\n            >\n              <Typography\n                className={classes.percentage}\n                style={{ fontSize: '14px' }}\n              >\n                {'(%)'}\n              </Typography>\n            </Grid>\n\n            <Grid item style={{ width: '0%' }}>\n              <div>\n                <Typography> {/* {'$'} */}</Typography>\n              </div>\n            </Grid>\n          </Grid>\n          {structure.map((element, index) => (\n            <Grid\n              direction=\"row\"\n              alignItems=\"center\"\n              justify=\"center\"\n              container\n              key={index}\n              style={{ paddingTop: '3rem', paddingLeft: 5 }}\n            >\n              <Grid item style={{ width: '20%' }}>\n                <Typography className={classes.data}>\n                  {' '}\n                  {element?.threshold}\n                  {index + 1 === structure.length && '+'}\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                style={{\n                  width: '30%',\n                }}\n              >\n                <Typography className={classes.percentage} align=\"right\">\n                  {element?.rate}\n                  {'%'}\n                </Typography>\n              </Grid>\n\n              <Grid item style={{ width: '50%' }}>\n                <div\n                  style={{\n                    backgroundColor: COLORS.PL_PRIMARY,\n                    borderRadius: '0px 10px 10px 0px',\n                    minWidth: '40%',\n                    width:\n                      index === 0\n                        ? 'fit-content'\n                        : String(Number(divWidth + index * 15)) + '%',\n                    height: '120%',\n                    alignItems: 'center',\n                    display: 'flex',\n                    paddingLeft: '2%',\n                    color: 'white',\n                  }}\n                >\n                  <Typography\n                    style={{\n                      fontFamily: 'Rubik',\n                      fontWeight: 400,\n                      fontSize: 13,\n                    }}\n                  >\n                    {' '}\n                    {'$'}\n                    {element?.value === '62.5K' ? '65K' : element?.value}\n                    {index + 1 === structure.length && '+'}\n                  </Typography>\n                </div>\n              </Grid>\n            </Grid>\n          ))}\n        </Grid>\n      </WidgetCard>\n    </>\n  );\n};\n\nexport default CommisionStructure;\n"]},"metadata":{},"sourceType":"module"}