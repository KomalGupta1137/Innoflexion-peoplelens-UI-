{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/organisms/Sidebar/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Drawer, IconButton, List, ListItem, ListItemIcon, makeStyles, Toolbar } from '@material-ui/core';\nimport React from 'react';\nimport icon1 from '../../../assets/SidebarIcons/image1.png';\nimport icon2 from '../../../assets/SidebarIcons/image2.png';\nimport icon3 from '../../../assets/SidebarIcons/image3.png';\nimport Icon from '../../atoms/Icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: '80px',\n    height: 'auto'\n  },\n  flex: {\n    width: '1%',\n    display: 'flex',\n    marginTop: theme.spacing(6),\n    paddingRight: theme.spacing(2)\n  },\n  listItemBorder: {\n    width: '100%',\n    borderLeft: '3px solid black',\n    paddingLeft: '-3px'\n  },\n  defaultBorder: {\n    width: '100%',\n    borderLeft: '3px solid white'\n  },\n  paperSize: {\n    width: '80px'\n  },\n  listItem: {\n    padding: '10% 20% 10% 20%'\n  }\n}));\nconst SidebarImages = [{\n  id: 0,\n  icon: icon1\n}, {\n  id: 1,\n  icon: icon2\n}, {\n  id: 2,\n  icon: icon3\n}];\n\nconst Sidebar = () => {\n  _s();\n\n  const classes = useStyles();\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    variant: \"permanent\",\n    className: classes.drawer,\n    classes: {\n      paper: classes.paperSize\n    },\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.flex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: SidebarImages.map((val, key) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        onClick: event => handleListItemClick(event, key),\n        className: selectedIndex === key ? classes.listItemBorder : classes.defaultBorder,\n        classes: {\n          gutters: classes.listItem\n        },\n        children: /*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              imageSrc: val.icon,\n              imageSize: \"smallMedium\",\n              title: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"C0gye0bmCHxT9D++3+6E4jw4HaQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/organisms/Sidebar/index.tsx"],"names":["Drawer","IconButton","List","ListItem","ListItemIcon","makeStyles","Toolbar","React","icon1","icon2","icon3","Icon","useStyles","theme","drawer","width","height","flex","display","marginTop","spacing","paddingRight","listItemBorder","borderLeft","paddingLeft","defaultBorder","paperSize","listItem","padding","SidebarImages","id","icon","Sidebar","classes","handleListItemClick","event","index","setSelectedIndex","selectedIndex","useState","paper","map","val","key","gutters"],"mappings":"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","sourcesContent":["import {\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  makeStyles,\n  Toolbar,\n} from '@material-ui/core';\nimport React, { useState } from 'react';\nimport icon1 from '../../../assets/SidebarIcons/image1.png';\nimport icon2 from '../../../assets/SidebarIcons/image2.png';\nimport icon3 from '../../../assets/SidebarIcons/image3.png';\nimport Icon from '../../atoms/Icon';\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: '80px',\n    height: 'auto',\n  },\n  flex: {\n    width: '1%',\n    display: 'flex',\n    marginTop: theme.spacing(6),\n    paddingRight: theme.spacing(2),\n  },\n  listItemBorder: {\n    width: '100%',\n    borderLeft: '3px solid black',\n    paddingLeft: '-3px',\n  },\n  defaultBorder: {\n    width: '100%',\n    borderLeft: '3px solid white',\n  },\n  paperSize: {\n    width: '80px',\n  },\n  listItem: {\n    padding: '10% 20% 10% 20%',\n  },\n}));\n\nconst SidebarImages = [\n  {\n    id: 0,\n    icon: icon1,\n  },\n  {\n    id: 1,\n    icon: icon2,\n  },\n  {\n    id: 2,\n    icon: icon3,\n  },\n];\n\nconst Sidebar = () => {\n  const classes = useStyles();\n\n  const handleListItemClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    index: number,\n  ) => {\n    setSelectedIndex(index);\n  };\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  return (\n    <Drawer\n      variant=\"permanent\"\n      className={classes.drawer}\n      classes={{ paper: classes.paperSize }}\n    >\n      <Toolbar />\n      <div className={classes.flex} />\n      <List>\n        {SidebarImages.map((val, key) => (\n          <ListItem\n            button\n            key={key}\n            onClick={(event) => handleListItemClick(event, key)}\n            className={\n              selectedIndex === key\n                ? classes.listItemBorder\n                : classes.defaultBorder\n            }\n            classes={{ gutters: classes.listItem }}\n          >\n            <ListItemIcon>\n              <IconButton>\n                <Icon imageSrc={val.icon} imageSize=\"smallMedium\" title=\"\" />\n              </IconButton>\n            </ListItemIcon>\n          </ListItem>\n        ))}\n      </List>\n    </Drawer>\n  );\n};\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}