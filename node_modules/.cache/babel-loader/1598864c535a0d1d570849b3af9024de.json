{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/molecules/PortfolioPieChart/index.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\n/* eslint-disable @typescript-eslint/restrict-plus-operands */\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport React, { useEffect } from 'react';\nimport { COLORS, plTheme } from '../../../plTheme';\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts';\nimport { sortBy } from 'lodash-es';\nimport numeral from 'numeral';\nimport { ProductColorContext } from '../../../utils/productColorContext';\nimport { _n_ } from '../../../utils/numerals/numerals'; // import {numeral} from 'numeral';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PortfolioPieChart = ({\n  currentData,\n  previousData,\n  large = false,\n  isReport\n}) => {\n  _s();\n\n  const [currentYearData, setCurrentYearData] = React.useState([]);\n  const [previousYearData, setPreviousYearData] = React.useState([]);\n  useEffect(() => {\n    if (currentData && previousData) {\n      setCurrentYearData(currentData);\n      setPreviousYearData(previousData);\n    }\n  }, [currentData, previousData]);\n  const {\n    ProductColorMap,\n    setProductColorMap\n  } = React.useContext(ProductColorContext);\n  const [seriesData, setSeriesData] = React.useState([]);\n  useEffect(() => {\n    const tempSeriesData = [];\n\n    for (const product of currentData) {\n      var _previousData$find, _ProductColorMap$find;\n\n      const prevValueForProduct = (_previousData$find = previousData.find(x => x.name === product.name)) === null || _previousData$find === void 0 ? void 0 : _previousData$find.y;\n      /**\n       * We need to decide what to put for growth value if the last years value\n       * is zero. As we can not detrmine the growth from zero value.\n       *\n       * Here in one possibility:\n       *\n       * Any time you have to show a rate of increase from zero,\n       * output the infinity symbol (∞).\n       * That's Alt + 236 on your number pad, in case you're wondering.\n       * You could also use negative infinity (-∞) for a negative growth rate from zero.\n       *\n       *\n       * ***** But currently we are displaying as 100% if there is no growth for last year.\n       */\n\n      const growth = prevValueForProduct ? (product.y - prevValueForProduct) / prevValueForProduct * 100 : 100;\n      const smallerName = product.name.toLowerCase();\n      const color = ProductColorMap === null || ProductColorMap === void 0 ? void 0 : (_ProductColorMap$find = ProductColorMap.find(x => (x === null || x === void 0 ? void 0 : x.productName) === smallerName)) === null || _ProductColorMap$find === void 0 ? void 0 : _ProductColorMap$find.color;\n      if (product.y !== 0) tempSeriesData.push({\n        name: product.name,\n        y: product.y,\n        growth: growth,\n        color: color\n      });\n    }\n\n    const sortedTempData = sortBy(tempSeriesData, 'y').reverse();\n    setSeriesData(sortedTempData);\n  }, [currentYearData, previousYearData]);\n  const CHART_COLORS = [COLORS.MAIN_BLUE_PRESSED, COLORS.MAIN_HUE_2, COLORS.MAIN_BLUE_HOVER, COLORS.MAIN_HOVER_LIGHT];\n\n  const returnPieSize = () => {\n    if (isReport === true) {\n      return 205;\n    } else if (isReport && large === true) {\n      return 205;\n    } else if (!isReport && large === false) {\n      return 270;\n    } else if (!isReport && large === true) {\n      return 300;\n    }\n  };\n\n  const options = {\n    chart: {\n      type: 'pie',\n      plotBackgroundColor: null,\n      backgroundColor: 'transparent',\n      plotBorderWidth: null,\n      plotShadow: false,\n      height: returnPieSize(),\n      style: {\n        fontFamily: plTheme.typography.fontFamily,\n        // \"Rubik\",\n        fontSize: '14px',\n        fontWeight: 300\n      }\n    },\n    title: null,\n    tooltip: {\n      enabled: false,\n      backgroundColor: '#fff',\n      borderColor: '#F6F6F6',\n      borderWidth: 2,\n      borderRadius: 4,\n      shadow: false,\n      pointFormat: '<b>{series.name}</b>: <b>{point.percentage:.1f}%</b>',\n      useHTML: true,\n      followPointer: false,\n      formatter: function () {\n        // @ts-ignore\n        const name = // @ts-ignore\n        this && this.point && this.point.name ? // @ts-ignore\n        this.point.name.toString() : '';\n        const currentYearValue = // @ts-ignore\n        this && this.point && this.point.y ? // @ts-ignore\n        this.point.y.toString() : '';\n        const growth = // @ts-ignore\n        this && this.point && this.point.growth ? // @ts-ignore\n        this.point.growth.toString() : ''; // @ts-ignore\n\n        const formattedCurrentYearValue = numeral(parseInt(currentYearValue)).format('0a'); // const formattedCurrentYearValue = _n_(currentYearValue, '0a')\n        // @ts-ignore\n\n        let tooltip = ``;\n        tooltip += `<span  style=\"font-family: Rubik; font-size: 12px; font-weight: 500;\"> ` + name + `</span>`;\n        tooltip += `<br><table style=\"width: 100px; margin-top: 6px; margin-left: -3px;\">`;\n        tooltip += `<tr><td><span style=\"font-size: 10px;\">Current</span></td><td style=\"text-align: right\"><span style=\"font-size: 10px;\">` + formattedCurrentYearValue + `%.</span></td></tr>`;\n        const arrow = growth > 0 ? `<span style=\"font-size: 12px; color: green;\">&#9650;</span>` : `\t<span style=\"font-size: 12px; color: red;\">&#9660;</span>`;\n        tooltip += `<tr><td><span style=\"font-size: 10px;\">Y/Y ` + arrow + `</span></td><td style=\"text-align: right\"><span style=\"font-size: 10px;\">` + Math.round(+growth).toString().replace(/-/g, '') + `%</span></td></tr>`;\n        tooltip += `</table>`;\n        tooltip += ``;\n        return tooltip;\n      }\n    },\n    credits: {\n      enabled: false\n    },\n    accessibility: {\n      point: {\n        valueSuffix: '%'\n      }\n    },\n    plotOptions: {\n      pie: {\n        allowPointSelect: false,\n        cursor: 'pointer',\n        shadow: false,\n        borderWidth: 0,\n        showInLegend: true,\n        dataLabels: {\n          padding: 0,\n          enabled: true,\n          connectorShape: 'straight',\n          connectorColor: 'rgba(126, 133, 142, 0.33)',\n          distance: isReport ? 15 : 30,\n          style: {\n            fontWeight: 300,\n            fontSize: '1px'\n          },\n          formatter: function () {\n            // @ts-ignore\n            const name = // @ts-ignore\n            this && this.point && this.point.name ? // @ts-ignore\n            this.point.name.toString() : '';\n            const currentYearValue = // @ts-ignore\n            this && this.point && this.point.y ? // @ts-ignore\n            this.point.y.toString() : '';\n            const growth = // @ts-ignore\n            this && this.point && this.point.growth ? // @ts-ignore\n            this.point.growth.toString() : ''; // @ts-ignore\n\n            const formattedCurrentYearValue = _n_(currentYearValue, '0,0.0a');\n\n            const arrow = growth > 0 ? `<span style=\"font-size: 14px; color: #2DCA73;\">&#9650;</span>` : `\t<span style=\"font-size: 14px; color: #ff0000;\">&#9660;</span>`;\n            const smallerArrow = growth > 0 ? `<span style=\"font-size: 10px; color: #2DCA73;\">&#9650;</span>` : `\t<span style=\"font-size: 10px; color: #ff0000;\">&#9660;</span>`; // @ts-ignore\n\n            let label = ``;\n            label += `<span  style=\"font-family: Rubik; font-size: ` + `13px` + `; font-weight: 300;\">` + name + ` $` + formattedCurrentYearValue + `</span> `;\n            label += `<br><span  style=\"font-family: Rubik; font-size: 13px; font-weight: 300;\">(` + Math.round(+growth) + // `20` +\n            `%` + arrow + `)</span>`; // @ts-ignore\n\n            let smallerLabel = ``;\n            smallerLabel += `<span  style=\"font-family: Rubik; font-size: 9px; font-weight: 400;\">` + name + ` $` + formattedCurrentYearValue + `</span> `;\n            smallerLabel += `<br><span  style=\"font-family: Rubik; font-size: 9px; font-weight: 400;\">(` + Math.round(+growth) + // `20` +\n            `%` + smallerArrow + `)</span>`;\n            smallerLabel += ``;\n\n            if (seriesData.length > 4) {\n              return smallerLabel;\n            } else {\n              return label;\n            }\n          }\n        },\n        states: {\n          hover: {\n            brightness: 0\n          },\n          select: {\n            enabled: false\n          }\n        }\n      },\n      series: {\n        events: {\n          legendItemClick: function () {\n            return false;\n          }\n        },\n        states: {\n          inactive: {\n            opacity: 1\n          },\n          active: {\n            borderColor: 'transparent'\n          },\n          hover: {\n            halo: {\n              attributes: {\n                fill: 'transparent',\n                'stroke-width': 0,\n                stroke: 'transparent'\n              }\n            }\n          }\n        }\n      }\n    },\n    legend: {\n      enabled: false,\n      fontSize: 12,\n      fontWeight: 400,\n      layout: 'horizontal',\n      textTransform: 'uppercase',\n      alignColumns: false,\n      // align: reportInd ? 'right' : 'left',\n      verticalAlign: 'top',\n      // x: width < 1500 ? (reportInd ? -20 : 0) : reportInd ? -65 : 60,\n      // y: reportInd ? -15 : -15,\n      symbolHeight: 4,\n      symbolWidth: 15,\n      symbolBorderRadius: 2,\n      symbolRadius: 2,\n      squareSymbol: false,\n      itemStyle: {\n        fontWeight: 400,\n        lineHeight: 16 // verticalAlign: 'top',\n\n      },\n      labelFormat: '<span style=\"font-family: Rubik; text-transform: uppercase;\">{name}</span>'\n    },\n    series: [{\n      name: 'Product Portfolio',\n      data: seriesData\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [' ', /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PortfolioPieChart, \"gUAGeale2uYvhZOIRgO3bW6KL4M=\");\n\n_c = PortfolioPieChart;\nexport default PortfolioPieChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioPieChart\");","map":{"version":3,"sources":["/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/molecules/PortfolioPieChart/index.tsx"],"names":["React","useEffect","COLORS","plTheme","HighchartsReact","Highcharts","sortBy","numeral","ProductColorContext","_n_","PortfolioPieChart","currentData","previousData","large","isReport","currentYearData","setCurrentYearData","useState","previousYearData","setPreviousYearData","ProductColorMap","setProductColorMap","useContext","seriesData","setSeriesData","tempSeriesData","product","prevValueForProduct","find","x","name","y","growth","smallerName","toLowerCase","color","productName","push","sortedTempData","reverse","CHART_COLORS","MAIN_BLUE_PRESSED","MAIN_HUE_2","MAIN_BLUE_HOVER","MAIN_HOVER_LIGHT","returnPieSize","options","chart","type","plotBackgroundColor","backgroundColor","plotBorderWidth","plotShadow","height","style","fontFamily","typography","fontSize","fontWeight","title","tooltip","enabled","borderColor","borderWidth","borderRadius","shadow","pointFormat","useHTML","followPointer","formatter","point","toString","currentYearValue","formattedCurrentYearValue","parseInt","format","arrow","Math","round","replace","credits","accessibility","valueSuffix","plotOptions","pie","allowPointSelect","cursor","showInLegend","dataLabels","padding","connectorShape","connectorColor","distance","smallerArrow","label","smallerLabel","length","states","hover","brightness","select","series","events","legendItemClick","inactive","opacity","active","halo","attributes","fill","stroke","legend","layout","textTransform","alignColumns","verticalAlign","symbolHeight","symbolWidth","symbolBorderRadius","symbolRadius","squareSymbol","itemStyle","lineHeight","labelFormat","data"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable @typescript-eslint/restrict-plus-operands */\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport React, { useEffect } from 'react';\nimport { COLORS, plTheme } from '../../../plTheme';\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts';\nimport { sortBy } from 'lodash-es';\nimport numeral from 'numeral';\nimport { ProductColorContext } from '../../../utils/productColorContext';\nimport { _n_ } from '../../../utils/numerals/numerals';\n\n// import {numeral} from 'numeral';\n\ninterface PortfolioPieChartProps {\n  currentData: any | null;\n  previousData: any | null;\n  large?: boolean;\n  isReport?: boolean;\n}\n\ninterface dataProps {\n  name: string;\n  y: number;\n  growth?: number;\n}\n\nconst PortfolioPieChart: React.FC<PortfolioPieChartProps> = ({\n  currentData,\n  previousData,\n  large = false,\n  isReport,\n}: PortfolioPieChartProps) => {\n  const [currentYearData, setCurrentYearData] = React.useState<dataProps[]>([]);\n  const [previousYearData, setPreviousYearData] = React.useState<dataProps[]>(\n    [],\n  );\n\n  useEffect(() => {\n    if (currentData && previousData) {\n      setCurrentYearData(currentData);\n      setPreviousYearData(previousData);\n    }\n  }, [currentData, previousData]);\n\n  const { ProductColorMap, setProductColorMap } = React.useContext(\n    ProductColorContext,\n  );\n\n  const [seriesData, setSeriesData] = React.useState<dataProps[]>([]);\n  useEffect(() => {\n    const tempSeriesData = [];\n    for (const product of currentData) {\n      const prevValueForProduct = previousData.find(\n        (x: dataProps) => x.name === product.name,\n      )?.y;\n\n      /**\n       * We need to decide what to put for growth value if the last years value\n       * is zero. As we can not detrmine the growth from zero value.\n       *\n       * Here in one possibility:\n       *\n       * Any time you have to show a rate of increase from zero,\n       * output the infinity symbol (∞).\n       * That's Alt + 236 on your number pad, in case you're wondering.\n       * You could also use negative infinity (-∞) for a negative growth rate from zero.\n       *\n       *\n       * ***** But currently we are displaying as 100% if there is no growth for last year.\n       */\n\n      const growth = prevValueForProduct\n        ? ((product.y - prevValueForProduct) / prevValueForProduct) * 100\n        : 100;\n\n      const smallerName = product.name.toLowerCase();\n      const color = ProductColorMap?.find((x) => x?.productName === smallerName)\n        ?.color;\n\n      if (product.y !== 0)\n        tempSeriesData.push({\n          name: product.name,\n          y: product.y,\n          growth: growth,\n          color: color,\n        });\n    }\n    const sortedTempData = sortBy(tempSeriesData, 'y').reverse();\n    setSeriesData(sortedTempData);\n  }, [currentYearData, previousYearData]);\n\n  const CHART_COLORS = [\n    COLORS.MAIN_BLUE_PRESSED,\n    COLORS.MAIN_HUE_2,\n    COLORS.MAIN_BLUE_HOVER,\n\n    COLORS.MAIN_HOVER_LIGHT,\n  ];\n\n  const returnPieSize = () => {\n    if (isReport === true) {\n      return 205;\n    } else if (isReport && large === true) {\n      return 205;\n    } else if (!isReport && large === false) {\n      return 270;\n    } else if (!isReport && large === true) {\n      return 300;\n    }\n  };\n  const options = {\n    chart: {\n      type: 'pie',\n      plotBackgroundColor: null,\n      backgroundColor: 'transparent',\n      plotBorderWidth: null,\n      plotShadow: false,\n      height: returnPieSize(),\n      style: {\n        fontFamily: plTheme.typography.fontFamily, // \"Rubik\",\n        fontSize: '14px',\n        fontWeight: 300,\n      },\n    },\n    title: null,\n    tooltip: {\n      enabled: false,\n      backgroundColor: '#fff',\n      borderColor: '#F6F6F6',\n      borderWidth: 2,\n      borderRadius: 4,\n      shadow: false,\n      pointFormat: '<b>{series.name}</b>: <b>{point.percentage:.1f}%</b>',\n      useHTML: true,\n      followPointer: false,\n      formatter: function () {\n        // @ts-ignore\n        const name =\n          // @ts-ignore\n          this && this.point && this.point.name\n            ? // @ts-ignore\n              this.point.name.toString()\n            : '';\n\n        const currentYearValue =\n          // @ts-ignore\n          this && this.point && this.point.y\n            ? // @ts-ignore\n              this.point.y.toString()\n            : '';\n        const growth =\n          // @ts-ignore\n          this && this.point && this.point.growth\n            ? // @ts-ignore\n              this.point.growth.toString()\n            : '';\n        // @ts-ignore\n        const formattedCurrentYearValue = numeral(\n          parseInt(currentYearValue),\n        ).format('0a');\n\n        // const formattedCurrentYearValue = _n_(currentYearValue, '0a')\n\n        // @ts-ignore\n        let tooltip = ``;\n        tooltip +=\n          `<span  style=\"font-family: Rubik; font-size: 12px; font-weight: 500;\"> ` +\n          name +\n          `</span>`;\n\n        tooltip += `<br><table style=\"width: 100px; margin-top: 6px; margin-left: -3px;\">`;\n        tooltip +=\n          `<tr><td><span style=\"font-size: 10px;\">Current</span></td><td style=\"text-align: right\"><span style=\"font-size: 10px;\">` +\n          formattedCurrentYearValue +\n          `%.</span></td></tr>`;\n\n        const arrow =\n          growth > 0\n            ? `<span style=\"font-size: 12px; color: green;\">&#9650;</span>`\n            : `\t<span style=\"font-size: 12px; color: red;\">&#9660;</span>`;\n        tooltip +=\n          `<tr><td><span style=\"font-size: 10px;\">Y/Y ` +\n          arrow +\n          `</span></td><td style=\"text-align: right\"><span style=\"font-size: 10px;\">` +\n          Math.round(+growth)\n            .toString()\n            .replace(/-/g, '') +\n          `%</span></td></tr>`;\n\n        tooltip += `</table>`;\n        tooltip += ``;\n        return tooltip;\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    accessibility: {\n      point: {\n        valueSuffix: '%',\n      },\n    },\n    plotOptions: {\n      pie: {\n        allowPointSelect: false,\n        cursor: 'pointer',\n        shadow: false,\n        borderWidth: 0,\n        showInLegend: true,\n        dataLabels: {\n          padding: 0,\n          enabled: true,\n          connectorShape: 'straight',\n          connectorColor: 'rgba(126, 133, 142, 0.33)',\n          distance: isReport ? 15 : 30,\n          style: {\n            fontWeight: 300,\n            fontSize: '1px',\n          },\n          formatter: function () {\n            // @ts-ignore\n            const name =\n              // @ts-ignore\n              this && this.point && this.point.name\n                ? // @ts-ignore\n                  this.point.name.toString()\n                : '';\n\n            const currentYearValue =\n              // @ts-ignore\n              this && this.point && this.point.y\n                ? // @ts-ignore\n                  this.point.y.toString()\n                : '';\n            const growth =\n              // @ts-ignore\n              this && this.point && this.point.growth\n                ? // @ts-ignore\n                  this.point.growth.toString()\n                : '';\n\n            // @ts-ignore\n            const formattedCurrentYearValue = _n_(currentYearValue, '0,0.0a');\n            const arrow =\n              growth > 0\n                ? `<span style=\"font-size: 14px; color: #2DCA73;\">&#9650;</span>`\n                : `\t<span style=\"font-size: 14px; color: #ff0000;\">&#9660;</span>`;\n\n            const smallerArrow =\n              growth > 0\n                ? `<span style=\"font-size: 10px; color: #2DCA73;\">&#9650;</span>`\n                : `\t<span style=\"font-size: 10px; color: #ff0000;\">&#9660;</span>`;\n\n            // @ts-ignore\n            let label = ``;\n            label +=\n              `<span  style=\"font-family: Rubik; font-size: ` +\n              `13px` +\n              `; font-weight: 300;\">` +\n              name +\n              ` $` +\n              formattedCurrentYearValue +\n              `</span> `;\n\n            label +=\n              `<br><span  style=\"font-family: Rubik; font-size: 13px; font-weight: 300;\">(` +\n              Math.round(+growth) +\n              // `20` +\n              `%` +\n              arrow +\n              `)</span>`;\n\n            // @ts-ignore\n            let smallerLabel = ``;\n            smallerLabel +=\n              `<span  style=\"font-family: Rubik; font-size: 9px; font-weight: 400;\">` +\n              name +\n              ` $` +\n              formattedCurrentYearValue +\n              `</span> `;\n\n            smallerLabel +=\n              `<br><span  style=\"font-family: Rubik; font-size: 9px; font-weight: 400;\">(` +\n              Math.round(+growth) +\n              // `20` +\n              `%` +\n              smallerArrow +\n              `)</span>`;\n\n            smallerLabel += ``;\n            if (seriesData.length > 4) {\n              return smallerLabel;\n            } else {\n              return label;\n            }\n          },\n        },\n        states: {\n          hover: {\n            brightness: 0,\n          },\n          select: {\n            enabled: false,\n          },\n        },\n      },\n      series: {\n        events: {\n          legendItemClick: function () {\n            return false;\n          },\n        },\n        states: {\n          inactive: {\n            opacity: 1,\n          },\n          active: {\n            borderColor: 'transparent',\n          },\n          hover: {\n            halo: {\n              attributes: {\n                fill: 'transparent',\n                'stroke-width': 0,\n                stroke: 'transparent',\n              },\n            },\n          },\n        },\n      },\n    },\n    legend: {\n      enabled: false,\n      fontSize: 12,\n      fontWeight: 400,\n      layout: 'horizontal',\n      textTransform: 'uppercase',\n      alignColumns: false,\n      // align: reportInd ? 'right' : 'left',\n      verticalAlign: 'top',\n      // x: width < 1500 ? (reportInd ? -20 : 0) : reportInd ? -65 : 60,\n      // y: reportInd ? -15 : -15,\n      symbolHeight: 4,\n      symbolWidth: 15,\n      symbolBorderRadius: 2,\n      symbolRadius: 2,\n      squareSymbol: false,\n      itemStyle: {\n        fontWeight: 400,\n        lineHeight: 16,\n        // verticalAlign: 'top',\n      },\n      labelFormat:\n        '<span style=\"font-family: Rubik; text-transform: uppercase;\">{name}</span>',\n    },\n    series: [\n      {\n        name: 'Product Portfolio',\n        data: seriesData,\n      },\n    ],\n  };\n\n  return (\n    <>\n      {' '}\n      <HighchartsReact highcharts={Highcharts} options={options} />\n    </>\n  );\n};\n\nexport default PortfolioPieChart;\n"]},"metadata":{},"sourceType":"module"}