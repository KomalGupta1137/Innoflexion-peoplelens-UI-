{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/organisms/RepDashboard/index.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n\n/* eslint-disable @typescript-eslint/no-empty-function */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\n/* eslint-disable @typescript-eslint/restrict-template-expressions */\n\n/* eslint-disable prettier/prettier */\nimport { Button, Grid, makeStyles, Typography } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport { COLORS } from '../../../plTheme';\nimport CustomizedTabs from '../../molecules/CustomisedTabs';\nimport { _t_ } from '../../../utils/translation/translation';\nimport jwtDecode from 'jwt-decode';\nimport Sidebar from '../Sidebar';\nimport RepMyselfDashboard from '../RepMyselfDashboard';\nimport { subYears } from 'date-fns';\nimport ReactGA from 'react-ga';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nReactGA.pageview(window.location.pathname);\nconst useStyles = makeStyles(theme => ({\n  contentAlignment: {\n    padding: '2%',\n    backgroundColor: COLORS.HOMEPAGE_BACKGROUND,\n    width: 'calc(100% + 59px)'\n  },\n  buttonStyles: {\n    marginRight: '16px',\n    width: '68.08px'\n  },\n  hideWhenPrint: {},\n  [`@media print`]: {\n    contentAlignment: {\n      padding: 0\n    },\n    hideWhenPrint: {\n      display: 'none'\n    },\n    tabAlignment: {\n      paddingLeft: '0%'\n    }\n  },\n  tabAlignment: {\n    paddingLeft: '1%'\n  }\n}));\nexport const dates = [{\n  startDate: '2020-01-01T00:00:00.000Z',\n  endDate: '2020-12-31T23:59:59.999Z'\n}, {\n  startDate: '2020-01-01T00:00:00.000Z',\n  endDate: '2020-03-31T23:59:59.999Z'\n}, {\n  startDate: '2020-04-01T00:00:00.000Z',\n  endDate: '2020-06-30T23:59:59.999Z'\n}, {\n  startDate: '2020-07-01T00:00:00.000Z',\n  endDate: '2020-09-30T23:59:59.999Z'\n}, {\n  startDate: '2020-10-01T00:00:00.000Z',\n  endDate: '2020-12-31T23:59:59.999Z'\n}, {\n  startDate: '2020-01-01T00:00:00.000Z',\n  endDate: '2020-06-30T23:59:59.999Z'\n}, {\n  startDate: '2020-07-01T00:00:00.000Z',\n  endDate: '2020-12-31T23:59:59.999Z'\n}];\nconst QUARTER_NAMES = ['2021', 'Q1', 'Q2', 'Q3', 'Q4'];\n\nconst RepDashboard = ({\n  persona\n}) => {\n  _s();\n\n  ReactGA.event({\n    category: 'Rep Lens',\n    action: 'Rep Lens'\n  });\n  const classes = useStyles();\n  const [activeQuarter, setActiveQuarter] = useState(0);\n  const token = localStorage.getItem('accessToken');\n  const decodedToken = token && jwtDecode(token);\n  const firstName = decodedToken.user.firstName;\n  ReactGA.event({\n    category: 'Rep Login',\n    action: `Rep Login - ${firstName}`\n  });\n\n  const handleActiveQuarterChange = value => {\n    setActiveQuarter(value);\n  };\n\n  const [activeTab, setActiveTab] = React.useState(0);\n\n  const handleTabChange = num => {};\n\n  useEffect(() => {\n    if (window.location.href.endsWith('/myteam')) {\n      setActiveTab(0);\n    } else if (window.location.href.endsWith('/leaderboard')) {\n      setActiveTab(1);\n    } else if (window.location.href.endsWith('/myself')) {\n      setActiveTab(2);\n    } else if (window.location.href.endsWith('/reports')) {\n      setActiveTab(3);\n    }\n  });\n  const [currentQuarter, setCurrentQuarter] = React.useState(0);\n  const [currentWeekNumber, setCurrentWeekNumber] = React.useState(0);\n  useEffect(() => {\n    const todaysDate = new Date();\n    const now = subYears(todaysDate, 1);\n    const quarter = moment().quarter();\n    const weekOfQuarter = getWeek() % 13;\n    setCurrentQuarter(quarter);\n    setActiveQuarter(quarter);\n    setCurrentWeekNumber(weekOfQuarter);\n  }, []);\n\n  const getWeek = () => {\n    const target = new Date(new Date().valueOf());\n    const dayNr = (target.getDay() + 6) % 7;\n    target.setDate(target.getDate() - dayNr + 3);\n    const firstThursday = target.valueOf();\n    target.setMonth(0, 1);\n\n    if (target.getDay() != 4) {\n      target.setMonth(0, 1 + (4 - target.getDay() + 7) % 7);\n    }\n\n    return 1 + Math.ceil((firstThursday - target.valueOf()) / 604800000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      spacing: 6,\n      className: `${classes.contentAlignment}`,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: `${classes.hideWhenPrint}`,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h1\",\n              children: firstName === null || firstName === void 0 ? void 0 : firstName.concat(\"'s lens\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            className: `${classes.hideWhenPrint}`,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"row\",\n              alignItems: \"center\",\n              children: QUARTER_NAMES.map((quarterName, quarterIndex) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"column\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: activeQuarter === quarterIndex ? 'contained' : 'outlined',\n                      color: activeQuarter === quarterIndex ? 'primary' : 'default',\n                      className: classes.buttonStyles,\n                      onClick: () => {\n                        handleActiveQuarterChange(quarterIndex);\n                      },\n                      children: quarterName\n                    }, quarterIndex, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    style: {\n                      height: '20px',\n                      marginLeft: 8,\n                      marginTop: 5\n                    },\n                    children: quarterIndex === currentQuarter && /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle1\",\n                      color: \"textPrimary\",\n                      children: [\"Week \", currentWeekNumber]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this)\n              }, quarterIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: `${classes.hideWhenPrint}`,\n        children: /*#__PURE__*/_jsxDEV(CustomizedTabs, {\n          tabNames: [// _t_('MY TEAM'),\n          // _t_('LEADERBOARD'),\n          _t_('MYSELF') // _t_('REPORTS'),\n          ],\n          primary: true,\n          activeTab: activeTab,\n          tabName: \"\",\n          handleTabChange: handleTabChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.tabAlignment,\n        children: activeTab === 0 && /*#__PURE__*/_jsxDEV(RepMyselfDashboard, {\n          activeQuarter: activeQuarter,\n          currentWeek: currentWeekNumber,\n          persona: persona\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: `${classes.hideWhenPrint}`,\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(RepDashboard, \"z9vPWNmyxZriPDrvL3X8F8k4HbI=\", false, function () {\n  return [useStyles];\n});\n\n_c = RepDashboard;\nexport default RepDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RepDashboard\");","map":{"version":3,"sources":["/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/organisms/RepDashboard/index.tsx"],"names":["Button","Grid","makeStyles","Typography","React","useState","useEffect","COLORS","CustomizedTabs","_t_","jwtDecode","Sidebar","RepMyselfDashboard","subYears","ReactGA","moment","pageview","window","location","pathname","useStyles","theme","contentAlignment","padding","backgroundColor","HOMEPAGE_BACKGROUND","width","buttonStyles","marginRight","hideWhenPrint","display","tabAlignment","paddingLeft","dates","startDate","endDate","QUARTER_NAMES","RepDashboard","persona","event","category","action","classes","activeQuarter","setActiveQuarter","token","localStorage","getItem","decodedToken","firstName","user","handleActiveQuarterChange","value","activeTab","setActiveTab","handleTabChange","num","href","endsWith","currentQuarter","setCurrentQuarter","currentWeekNumber","setCurrentWeekNumber","todaysDate","Date","now","quarter","weekOfQuarter","getWeek","target","valueOf","dayNr","getDay","setDate","getDate","firstThursday","setMonth","Math","ceil","concat","map","quarterName","quarterIndex","height","marginLeft","marginTop"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-call */\r\n/* eslint-disable @typescript-eslint/no-empty-function */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\r\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\n/* eslint-disable @typescript-eslint/restrict-template-expressions */\r\n/* eslint-disable prettier/prettier */\r\nimport { Button, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { COLORS } from '../../../plTheme';\r\nimport Loader from '../../atoms/Loader';\r\nimport CustomizedTabs from '../../molecules/CustomisedTabs';\r\nimport { _t_ } from '../../../utils/translation/translation';\r\nimport jwtDecode from 'jwt-decode';\r\nimport Sidebar from '../Sidebar';\r\nimport RepMyselfDashboard from '../RepMyselfDashboard';\r\nimport { subYears } from 'date-fns';\r\nimport ReactGA from 'react-ga';\r\nimport moment from 'moment';\r\n\r\nReactGA.pageview(window.location.pathname);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  contentAlignment: {\r\n    padding: '2%',\r\n    backgroundColor: COLORS.HOMEPAGE_BACKGROUND,\r\n    width: 'calc(100% + 59px)',\r\n  },\r\n  buttonStyles: {\r\n    marginRight: '16px',\r\n    width: '68.08px',\r\n  },\r\n  hideWhenPrint: {},\r\n  [`@media print`]: {\r\n    contentAlignment: {\r\n      padding: 0,\r\n    },\r\n    hideWhenPrint: {\r\n      display: 'none',\r\n    },\r\n    tabAlignment: {\r\n      paddingLeft: '0%',\r\n    },\r\n  },\r\n  tabAlignment: {\r\n    paddingLeft: '1%',\r\n  },\r\n}));\r\n\r\nexport const dates = [\r\n  {\r\n    startDate: '2020-01-01T00:00:00.000Z',\r\n    endDate: '2020-12-31T23:59:59.999Z',\r\n  },\r\n  {\r\n    startDate: '2020-01-01T00:00:00.000Z',\r\n    endDate: '2020-03-31T23:59:59.999Z',\r\n  },\r\n  {\r\n    startDate: '2020-04-01T00:00:00.000Z',\r\n    endDate: '2020-06-30T23:59:59.999Z',\r\n  },\r\n  {\r\n    startDate: '2020-07-01T00:00:00.000Z',\r\n    endDate: '2020-09-30T23:59:59.999Z',\r\n  },\r\n  {\r\n    startDate: '2020-10-01T00:00:00.000Z',\r\n    endDate: '2020-12-31T23:59:59.999Z',\r\n  },\r\n  {\r\n    startDate: '2020-01-01T00:00:00.000Z',\r\n    endDate: '2020-06-30T23:59:59.999Z',\r\n  },\r\n  {\r\n    startDate: '2020-07-01T00:00:00.000Z',\r\n    endDate: '2020-12-31T23:59:59.999Z',\r\n  },\r\n];\r\n\r\nconst QUARTER_NAMES = ['2021', 'Q1', 'Q2', 'Q3', 'Q4'];\r\nexport interface RepDashboardProps {\r\n  persona: string;\r\n}\r\n\r\nconst RepDashboard: React.FC<RepDashboardProps> = ({\r\n  persona,\r\n}: RepDashboardProps) => {\r\n  ReactGA.event({\r\n    category: 'Rep Lens',\r\n    action: 'Rep Lens',\r\n  });\r\n  const classes = useStyles();\r\n  const [activeQuarter, setActiveQuarter] = useState<number>(0);\r\n  const token = localStorage.getItem('accessToken');\r\n  const decodedToken: any = token && jwtDecode(token);\r\n  const firstName = decodedToken.user.firstName;\r\n  ReactGA.event({\r\n    category: 'Rep Login',\r\n    action: `Rep Login - ${firstName}`,\r\n  });\r\n\r\n  const handleActiveQuarterChange = (value: number) => {\r\n    setActiveQuarter(value);\r\n  };\r\n\r\n  const [activeTab, setActiveTab] = React.useState(0);\r\n\r\n  const handleTabChange = (num: number) => {};\r\n\r\n  useEffect(() => {\r\n    if (window.location.href.endsWith('/myteam')) {\r\n      setActiveTab(0);\r\n    } else if (window.location.href.endsWith('/leaderboard')) {\r\n      setActiveTab(1);\r\n    } else if (window.location.href.endsWith('/myself')) {\r\n      setActiveTab(2);\r\n    } else if (window.location.href.endsWith('/reports')) {\r\n      setActiveTab(3);\r\n    }\r\n  });\r\n\r\n  const [currentQuarter, setCurrentQuarter] = React.useState(0);\r\n  const [currentWeekNumber, setCurrentWeekNumber] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n    const todaysDate = new Date();\r\n    const now = subYears(todaysDate, 1);\r\n    const quarter = moment().quarter();\r\n    const weekOfQuarter = getWeek() % 13;\r\n    setCurrentQuarter(quarter);\r\n    setActiveQuarter(quarter);\r\n    setCurrentWeekNumber(weekOfQuarter);\r\n  }, []);\r\n\r\n  const getWeek = () => {\r\n    const target = new Date(new Date().valueOf());\r\n    const dayNr = (target.getDay() + 6) % 7;\r\n    target.setDate(target.getDate() - dayNr + 3);\r\n    const firstThursday = target.valueOf();\r\n    target.setMonth(0, 1);\r\n    if (target.getDay() != 4) {\r\n      target.setMonth(0, 1 + ((4 - target.getDay() + 7) % 7));\r\n    }\r\n    return 1 + Math.ceil((firstThursday - target.valueOf()) / 604800000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        spacing={6}\r\n        className={`${classes.contentAlignment}`}\r\n      >\r\n        <Grid item className={`${classes.hideWhenPrint}`}>\r\n          <Grid container justify=\"space-between\">\r\n            <Grid item>\r\n              <Typography variant=\"h1\">\r\n                {firstName?.concat(\"'s lens\")}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item className={`${classes.hideWhenPrint}`}>\r\n              <Grid container direction=\"row\" alignItems=\"center\">\r\n                {QUARTER_NAMES.map((quarterName, quarterIndex) => (\r\n                  <Grid item key={quarterIndex}>\r\n                    <Grid container direction=\"column\">\r\n                      <Grid item>\r\n                        <Button\r\n                          key={quarterIndex}\r\n                          variant={\r\n                            activeQuarter === quarterIndex\r\n                              ? 'contained'\r\n                              : 'outlined'\r\n                          }\r\n                          color={\r\n                            activeQuarter === quarterIndex\r\n                              ? 'primary'\r\n                              : 'default'\r\n                          }\r\n                          className={classes.buttonStyles}\r\n                          onClick={() => {\r\n                            handleActiveQuarterChange(quarterIndex);\r\n                          }}\r\n                        >\r\n                          {quarterName}\r\n                        </Button>\r\n                      </Grid>\r\n\r\n                      <Grid\r\n                        item\r\n                        style={{ height: '20px', marginLeft: 8, marginTop: 5 }}\r\n                      >\r\n                        {quarterIndex === currentQuarter && (\r\n                          <Typography variant=\"subtitle1\" color=\"textPrimary\">\r\n                            Week {currentWeekNumber}\r\n                          </Typography>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item className={`${classes.hideWhenPrint}`}>\r\n          <CustomizedTabs\r\n            tabNames={[\r\n              // _t_('MY TEAM'),\r\n              // _t_('LEADERBOARD'),\r\n              _t_('MYSELF'),\r\n              // _t_('REPORTS'),\r\n            ]}\r\n            primary={true}\r\n            activeTab={activeTab}\r\n            tabName=\"\"\r\n            handleTabChange={handleTabChange}\r\n          />\r\n        </Grid>\r\n        <Grid className={classes.tabAlignment}>\r\n          {activeTab === 0 && (\r\n            <RepMyselfDashboard\r\n              activeQuarter={activeQuarter}\r\n              currentWeek={currentWeekNumber}\r\n              persona={persona}\r\n            />\r\n          )}\r\n        </Grid>\r\n        <Grid item className={`${classes.hideWhenPrint}`}>\r\n          <Sidebar />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RepDashboard;\r\n"]},"metadata":{},"sourceType":"module"}