{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Current/peoplelens_ui/src/components/molecules/MYEarningsEquity/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useGlobalStyles } from '../../../plStyles';\nimport { _t_ } from '../../../utils/translation/translation';\nimport WidgetCard from '../../atoms/WidgetCard';\nimport { _n_ } from '../../../utils/numerals/numerals';\nimport QuestionMark from '../../../assets/QuestionMark.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Equity = ({\n  data,\n  demoMode\n}) => {\n  _s();\n\n  var _data$vestedShares, _data$remainingShares;\n\n  const useStyles = makeStyles({\n    root: {\n      padding: 16,\n      height: 192,\n      background: demoMode ? '#D9D9D9' : 'white',\n      opacity: demoMode ? 0.6 : 1\n    },\n    shares: {\n      fontSize: 14,\n      fontWeight: 300,\n      lineHeight: '24px',\n      letterSpacing: '0em'\n    },\n    sharevalue: {\n      fontSize: 14,\n      fontWeight: 500,\n      lineHeight: '18px',\n      letterSpacing: '0em',\n      paddingTop: '2%',\n      paddingLeft: '5%'\n    },\n    amount: {\n      fontSize: 20,\n      fontWeight: 500,\n      lineHeight: '32px',\n      letterSpacing: '0em'\n    }\n  });\n  const globalClasses = useGlobalStyles();\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [' ', /*#__PURE__*/_jsxDEV(WidgetCard, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            width: '100%',\n            paddingBottom: '5%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: globalClasses.body1WidgetTitle,\n            children: _t_('Equity')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                width: '50%'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: globalClasses.body1WidgetTitle,\n                children: _t_('Vested')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                width: '50%'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: globalClasses.body1WidgetTitle,\n                children: _t_('remaining')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            width: '100%',\n            paddingTop: '3%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                width: '50%',\n                display: 'flex',\n                flexDirection: 'row'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                className: classes.amount,\n                children: [\"$\", (data === null || data === void 0 ? void 0 : data.vestedAmount) && _n_(data === null || data === void 0 ? void 0 : data.vestedAmount, '0,0.0a')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                hidden: demoMode ? true : false,\n                src: QuestionMark,\n                style: {\n                  height: 18,\n                  width: 18,\n                  marginLeft: '5%',\n                  marginTop: '5.5%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                width: '50%',\n                display: 'flex',\n                flexDirection: 'row'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                className: classes.amount,\n                children: [\"$\", (data === null || data === void 0 ? void 0 : data.remainingAmount) && _n_(data === null || data === void 0 ? void 0 : data.remainingAmount.toFixed().toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','), '0,0[.]0a')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                hidden: demoMode ? true : false,\n                src: QuestionMark,\n                style: {\n                  marginLeft: '5%',\n                  marginTop: '5.5%',\n                  height: 18,\n                  width: 18\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            width: '100%',\n            paddingTop: '3%',\n            height: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                width: '50%',\n                display: 'flex',\n                flexDirection: 'row'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                className: classes.shares,\n                children: [_t_('Shares'), ':  ', ' ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                className: classes.sharevalue,\n                children: data === null || data === void 0 ? void 0 : (_data$vestedShares = data.vestedShares) === null || _data$vestedShares === void 0 ? void 0 : _data$vestedShares.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                width: '50%',\n                display: 'flex',\n                flexDirection: 'row'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                className: classes.shares,\n                children: [_t_('Shares'), ': ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                className: classes.sharevalue,\n                children: data === null || data === void 0 ? void 0 : (_data$remainingShares = data.remainingShares) === null || _data$remainingShares === void 0 ? void 0 : _data$remainingShares.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Equity, \"28ZziovLQgxfZNqN82w4GSbO8ec=\", true, function () {\n  return [useGlobalStyles];\n});\n\n_c = Equity;\nexport default Equity;\n\nvar _c;\n\n$RefreshReg$(_c, \"Equity\");","map":{"version":3,"sources":["/home/komal/Documents/Current/peoplelens_ui/src/components/molecules/MYEarningsEquity/index.tsx"],"names":["Grid","makeStyles","Typography","React","useGlobalStyles","_t_","WidgetCard","_n_","QuestionMark","Equity","data","demoMode","useStyles","root","padding","height","background","opacity","shares","fontSize","fontWeight","lineHeight","letterSpacing","sharevalue","paddingTop","paddingLeft","amount","globalClasses","classes","width","paddingBottom","body1WidgetTitle","display","flexDirection","vestedAmount","marginLeft","marginTop","remainingAmount","toFixed","toString","replace","vestedShares","remainingShares"],"mappings":"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","sourcesContent":["import { Grid, Icon, makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useGlobalStyles } from '../../../plStyles';\r\nimport { _t_ } from '../../../utils/translation/translation';\r\nimport WidgetCard from '../../atoms/WidgetCard';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport CalendarIcon from '../../../assets/calendar.png';\r\nimport { _n_ } from '../../../utils/numerals/numerals';\r\n\r\nimport QuestionMark from '../../../assets/QuestionMark.png';\r\n\r\nimport { repDashboardData_RepDashboardData_earnings_equity as EquityData } from '../../../gql/types';\r\ninterface EquityProps {\r\n  data?: EquityData | null;\r\n  demoMode?: boolean;\r\n}\r\n\r\nconst Equity: React.FC<EquityProps> = ({ data, demoMode }: EquityProps) => {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      padding: 16,\r\n      height: 192,\r\n      background: demoMode ? '#D9D9D9' : 'white',\r\n      opacity: demoMode ? 0.6 : 1\r\n    },\r\n    shares: {\r\n      fontSize: 14,\r\n      fontWeight: 300,\r\n      lineHeight: '24px',\r\n      letterSpacing: '0em',\r\n    },\r\n\r\n    sharevalue: {\r\n      fontSize: 14,\r\n      fontWeight: 500,\r\n      lineHeight: '18px',\r\n\r\n      letterSpacing: '0em',\r\n      paddingTop: '2%',\r\n      paddingLeft: '5%',\r\n    },\r\n    amount: {\r\n      fontSize: 20,\r\n      fontWeight: 500,\r\n      lineHeight: '32px',\r\n\r\n      letterSpacing: '0em',\r\n    },\r\n  });\r\n  const globalClasses = useGlobalStyles();\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      {' '}\r\n      <WidgetCard>\r\n        <Grid container direction=\"column\" className={classes.root}>\r\n          <Grid item style={{ width: '100%', paddingBottom: '5%' }}>\r\n            <Typography className={globalClasses.body1WidgetTitle}>\r\n              {_t_('Equity')}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item style={{ width: '100%' }}>\r\n            <Grid container direction=\"row\" spacing={4}>\r\n              <Grid item style={{ width: '50%' }}>\r\n                <Typography className={globalClasses.body1WidgetTitle}>\r\n                  {_t_('Vested')}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item style={{ width: '50%' }}>\r\n                <Typography className={globalClasses.body1WidgetTitle}>\r\n                  {_t_('remaining')}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item style={{ width: '100%', paddingTop: '3%' }}>\r\n            <Grid container direction=\"row\" spacing={4}>\r\n              <Grid\r\n                item\r\n                style={{\r\n                  width: '50%',\r\n                  display: 'flex',\r\n                  flexDirection: 'row',\r\n                }}\r\n              >\r\n                <Typography variant=\"h6\" className={classes.amount}>\r\n                  ${data?.vestedAmount && _n_(data?.vestedAmount, '0,0.0a')}\r\n                </Typography>\r\n\r\n                <img\r\n                  hidden={demoMode ? true : false}\r\n                  src={QuestionMark}\r\n                  style={{\r\n                    height: 18,\r\n                    width: 18,\r\n                    marginLeft: '5%',\r\n                    marginTop: '5.5%',\r\n                  }}\r\n                ></img>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                style={{\r\n                  width: '50%',\r\n                  display: 'flex',\r\n                  flexDirection: 'row',\r\n                }}\r\n              >\r\n                <Typography variant=\"h6\" className={classes.amount}>\r\n                  $\r\n                  {data?.remainingAmount &&\r\n                    _n_(\r\n                      data?.remainingAmount\r\n                        .toFixed()\r\n                        .toString()\r\n                        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\r\n                      '0,0[.]0a',\r\n                    )}\r\n                </Typography>\r\n\r\n                <img\r\n                  hidden={demoMode ? true : false}\r\n                  src={QuestionMark}\r\n                  style={{\r\n                    marginLeft: '5%',\r\n                    marginTop: '5.5%',\r\n                    height: 18,\r\n                    width: 18,\r\n                  }}\r\n                ></img>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item style={{ width: '100%', paddingTop: '3%', height: 0 }}>\r\n            <Grid container direction=\"row\" spacing={4}>\r\n              <Grid\r\n                item\r\n                style={{\r\n                  width: '50%',\r\n                  display: 'flex',\r\n                  flexDirection: 'row',\r\n                }}\r\n              >\r\n                <Typography variant=\"h6\" className={classes.shares}>\r\n                  {_t_('Shares')}\r\n                  {':  '}{' '}\r\n                </Typography>\r\n                <Typography variant=\"h6\" className={classes.sharevalue}>\r\n                  {data?.vestedShares\r\n                    ?.toString()\r\n                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                style={{\r\n                  width: '50%',\r\n                  display: 'flex',\r\n                  flexDirection: 'row',\r\n                }}\r\n              >\r\n                <Typography variant=\"h6\" className={classes.shares}>\r\n                  {_t_('Shares')}\r\n                  {': '}\r\n                </Typography>\r\n                <Typography variant=\"h6\" className={classes.sharevalue}>\r\n                  {data?.remainingShares\r\n                    ?.toString()\r\n                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </WidgetCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Equity;\r\n"]},"metadata":{},"sourceType":"module"}