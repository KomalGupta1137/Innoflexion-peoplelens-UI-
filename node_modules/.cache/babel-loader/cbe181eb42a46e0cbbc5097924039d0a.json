{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Current/peoplelens_ui/src/components/molecules/RepLearning/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useGlobalStyles } from '../../../plStyles';\nimport { COLORS } from '../../../plTheme';\nimport { _t_ } from '../../../utils/translation/translation';\nimport WidgetCard from '../../atoms/WidgetCard';\nimport { useQuery } from '@apollo/client';\nimport { GetRepDashboardData } from '../../../gql/queries/repDashboard';\nimport Loader from '../../atoms/Loader';\nimport moment from 'moment';\nimport { addDays, addYears } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RepLearning = ({\n  startDate,\n  endDate\n}) => {\n  _s();\n\n  var _data$RepDashboardDat, _data$RepDashboardDat2, _data$RepDashboardDat3, _data$RepDashboardDat4;\n\n  const useStyles = makeStyles({\n    root: {\n      padding: 14,\n      height: 410\n    },\n    mainDiv: {\n      borderBottom: '1px solid ' + COLORS.BORDER_PRIMARY,\n      paddingBottom: '0.5rem',\n      marginTop: '1.9rem'\n    },\n    mainDiv2: {\n      marginTop: '1.2rem',\n      borderBottom: '1px solid ' + COLORS.BORDER_PRIMARY,\n      paddingBottom: '0.5rem'\n    },\n    activityScore: {\n      fontWeight: 500\n    },\n    value: {\n      backgroundColor: COLORS.HOMEPAGE_BACKGROUND,\n      lineHeight: '28px',\n      padding: '0 16px',\n      width: 92\n    },\n    insideDiv: {\n      marginTop: '1.2rem'\n    },\n    stats: {\n      marginTop: '0.4rem'\n    },\n    subHeading: {\n      fontFamily: 'Rubik',\n      fontSize: 14,\n      fontStyle: 'normal',\n      fontWeight: 400,\n      letterSpacing: '0em'\n    },\n    innertext: {\n      fontFamily: 'Rubik',\n      fontSize: 14,\n      fontStyle: 'normal',\n      fontWeight: 300,\n      lineHeight: '21px',\n      letterSpacing: '0em'\n    }\n  });\n  const classes = useStyles();\n  const globalClasses = useGlobalStyles();\n  const completed = [{\n    course: '',\n    courseDate: '',\n    score: 0\n  }];\n  const upcoming = [{\n    course: '',\n    courseDate: ''\n  }];\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(GetRepDashboardData, {\n    variables: {\n      repDashboardInput: {\n        startDate: startDate,\n        endDate: endDate,\n        thresholdValue: 1\n      }\n    }\n  });\n  useEffect(() => {\n    void refetch();\n  }, [startDate, endDate]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  completed.pop();\n  upcoming.pop();\n  if (error) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"`Error! $\", error.message, \"` \"]\n  }, void 0, true);\n  (data === null || data === void 0 ? void 0 : (_data$RepDashboardDat = data.RepDashboardData) === null || _data$RepDashboardDat === void 0 ? void 0 : _data$RepDashboardDat.myLearning) && (data === null || data === void 0 ? void 0 : (_data$RepDashboardDat2 = data.RepDashboardData) === null || _data$RepDashboardDat2 === void 0 ? void 0 : _data$RepDashboardDat2.myLearning.forEach((r, index) => {\n    if ((r === null || r === void 0 ? void 0 : r.courseStatus) === 'completed' && (r === null || r === void 0 ? void 0 : r.course) !== '' && (r === null || r === void 0 ? void 0 : r.courseDate) !== '') {\n      completed.push({\n        course: (r === null || r === void 0 ? void 0 : r.course) ? r === null || r === void 0 ? void 0 : r.course : '',\n        courseDate: (r === null || r === void 0 ? void 0 : r.courseDate) ? r === null || r === void 0 ? void 0 : r.courseDate : '',\n        score: (r === null || r === void 0 ? void 0 : r.assessmentScore) ? r === null || r === void 0 ? void 0 : r.assessmentScore : 0\n      });\n    }\n  })); // To be removed\n\n  completed.forEach(c => {\n    c.courseDate = addYears(new Date(c.courseDate), +1).toString();\n    c.courseDate = addDays(new Date(c.courseDate), +1).toString();\n  });\n  (data === null || data === void 0 ? void 0 : (_data$RepDashboardDat3 = data.RepDashboardData) === null || _data$RepDashboardDat3 === void 0 ? void 0 : _data$RepDashboardDat3.myLearning) && (data === null || data === void 0 ? void 0 : (_data$RepDashboardDat4 = data.RepDashboardData) === null || _data$RepDashboardDat4 === void 0 ? void 0 : _data$RepDashboardDat4.myLearning.forEach(r => {\n    if ((r === null || r === void 0 ? void 0 : r.courseStatus) === 'upcoming' && (r === null || r === void 0 ? void 0 : r.course) !== '' && (r === null || r === void 0 ? void 0 : r.courseDate) !== '') {\n      upcoming.push({\n        course: (r === null || r === void 0 ? void 0 : r.course) ? r === null || r === void 0 ? void 0 : r.course : '',\n        courseDate: (r === null || r === void 0 ? void 0 : r.courseDate) ? r === null || r === void 0 ? void 0 : r.courseDate : ''\n      });\n    }\n  }));\n  upcoming.forEach(c => {\n    c.courseDate = addYears(new Date(c.courseDate), +1).toString();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(WidgetCard, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: `${globalClasses.body1WidgetTitle}`,\n          children: _t_('my LEARNING')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          spacing: 2,\n          style: {\n            paddingTop: '2.2rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              flex: 40\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: globalClasses.h5Bold,\n              color: \"textPrimary\",\n              children: \"Module\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              flex: 30,\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: globalClasses.h5Bold,\n              color: \"textPrimary\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              flex: 30,\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: globalClasses.h5Bold,\n              color: \"textPrimary\",\n              children: \"Assessment Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: `${classes.subHeading} ${classes.mainDiv}`,\n          children: _t_('Completed')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          children: completed.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            align: \"center\",\n            style: {\n              marginTop: '5%'\n            },\n            children: \"No modules to be completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this) : completed.map((element, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            spacing: 2,\n            style: {\n              marginTop: '0.8rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                flex: 40\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.innertext,\n                children: element.course\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                flex: 30,\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.innertext,\n                children: _t_(moment(element === null || element === void 0 ? void 0 : element.courseDate).utc().format('MMM DD YYYY'))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                flex: 30,\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.innertext,\n                children: element.courseDate === '' && element.course === '' ? '' : element.score.toFixed(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: `${classes.subHeading} ${classes.mainDiv2}`,\n          children: _t_('Upcoming')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          children: upcoming.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            align: \"center\",\n            style: {\n              marginTop: '5%'\n            },\n            children: [' ', \"No upcoming modules\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this) : upcoming.map((element, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            spacing: 2,\n            style: {\n              marginTop: '0.8rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                flex: 40\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.innertext,\n                children: element.course\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                flex: 30,\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.innertext,\n                children: _t_(moment(element === null || element === void 0 ? void 0 : element.courseDate).utc().format('MMM DD YYYY'))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                flex: 30,\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.innertext\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(RepLearning, \"2MdXmCkVqoF9gJwxCEKBnGkdl+c=\", true, function () {\n  return [useGlobalStyles, useQuery];\n});\n\n_c = RepLearning;\nexport default RepLearning;\n\nvar _c;\n\n$RefreshReg$(_c, \"RepLearning\");","map":{"version":3,"sources":["/home/komal/Documents/Current/peoplelens_ui/src/components/molecules/RepLearning/index.tsx"],"names":["Grid","makeStyles","Typography","React","useEffect","useGlobalStyles","COLORS","_t_","WidgetCard","useQuery","GetRepDashboardData","Loader","moment","addDays","addYears","RepLearning","startDate","endDate","useStyles","root","padding","height","mainDiv","borderBottom","BORDER_PRIMARY","paddingBottom","marginTop","mainDiv2","activityScore","fontWeight","value","backgroundColor","HOMEPAGE_BACKGROUND","lineHeight","width","insideDiv","stats","subHeading","fontFamily","fontSize","fontStyle","letterSpacing","innertext","classes","globalClasses","completed","course","courseDate","score","upcoming","loading","error","data","refetch","variables","repDashboardInput","thresholdValue","pop","message","RepDashboardData","myLearning","forEach","r","index","courseStatus","push","assessmentScore","c","Date","toString","body1WidgetTitle","paddingTop","flex","h5Bold","textAlign","length","map","element","utc","format","toFixed"],"mappings":"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","sourcesContent":["import { Grid, makeStyles, Typography } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useGlobalStyles } from '../../../plStyles';\nimport { COLORS } from '../../../plTheme';\nimport { _t_ } from '../../../utils/translation/translation';\nimport WidgetCard from '../../atoms/WidgetCard';\n\nimport { repDashboardData_RepDashboardData_myLearning as MyLearningData } from '../../../gql/types';\nimport { QueryResult, useQuery } from '@apollo/client';\nimport { GetRepDashboardData } from '../../../gql/queries/repDashboard';\n\nimport { repDashboardData as RepDashboardData } from '../../../gql/types';\nimport Loader from '../../atoms/Loader';\nimport moment from 'moment';\nimport { addDays, addYears } from 'date-fns';\n\ninterface RepLearningProps {\n  startDate?: string;\n  endDate?: string;\n}\nconst RepLearning: React.FC<RepLearningProps> = ({\n  startDate,\n  endDate,\n}: RepLearningProps) => {\n  const useStyles = makeStyles({\n    root: {\n      padding: 14,\n      height: 410,\n    },\n    mainDiv: {\n      borderBottom: '1px solid ' + COLORS.BORDER_PRIMARY,\n      paddingBottom: '0.5rem',\n      marginTop: '1.9rem',\n    },\n    mainDiv2: {\n      marginTop: '1.2rem',\n      borderBottom: '1px solid ' + COLORS.BORDER_PRIMARY,\n      paddingBottom: '0.5rem',\n    },\n    activityScore: {\n      fontWeight: 500,\n    },\n    value: {\n      backgroundColor: COLORS.HOMEPAGE_BACKGROUND,\n      lineHeight: '28px',\n      padding: '0 16px',\n      width: 92,\n    },\n    insideDiv: {\n      marginTop: '1.2rem',\n    },\n    stats: {\n      marginTop: '0.4rem',\n    },\n    subHeading: {\n      fontFamily: 'Rubik',\n      fontSize: 14,\n      fontStyle: 'normal',\n      fontWeight: 400,\n\n      letterSpacing: '0em',\n    },\n    innertext: {\n      fontFamily: 'Rubik',\n      fontSize: 14,\n      fontStyle: 'normal',\n      fontWeight: 300,\n      lineHeight: '21px',\n      letterSpacing: '0em',\n    },\n  });\n\n  const classes = useStyles();\n  const globalClasses = useGlobalStyles();\n  const completed = [{ course: '', courseDate: '', score: 0 }];\n  const upcoming = [{ course: '', courseDate: '' }];\n\n  const {\n    loading,\n    error,\n    data,\n    refetch,\n  }: QueryResult<RepDashboardData> = useQuery(GetRepDashboardData, {\n    variables: {\n      repDashboardInput: {\n        startDate: startDate,\n        endDate: endDate,\n        thresholdValue: 1,\n      },\n    },\n  });\n\n  useEffect(() => {\n    void refetch();\n  }, [startDate, endDate]);\n\n  if (loading) {\n    return (\n      <>\n        <Loader />\n      </>\n    );\n  }\n  completed.pop();\n  upcoming.pop();\n\n  if (error) return <>`Error! ${error.message}` </>;\n  data?.RepDashboardData?.myLearning &&\n    data?.RepDashboardData?.myLearning.forEach(\n      (r: MyLearningData | null, index: number) => {\n        if (\n          r?.courseStatus === 'completed' &&\n          r?.course !== '' &&\n          r?.courseDate !== ''\n        ) {\n          completed.push({\n            course: r?.course ? r?.course : '',\n            courseDate: r?.courseDate ? r?.courseDate : '',\n            score: r?.assessmentScore ? r?.assessmentScore : 0,\n          });\n        }\n      },\n    );\n  // To be removed\n  completed.forEach((c) => {\n    c.courseDate = addYears(new Date(c.courseDate), +1).toString();\n    c.courseDate = addDays(new Date(c.courseDate), +1).toString();\n  });\n  data?.RepDashboardData?.myLearning &&\n    data?.RepDashboardData?.myLearning.forEach((r: MyLearningData | null) => {\n      if (\n        r?.courseStatus === 'upcoming' &&\n        r?.course !== '' &&\n        r?.courseDate !== ''\n      ) {\n        upcoming.push({\n          course: r?.course ? r?.course : '',\n          courseDate: r?.courseDate ? r?.courseDate : '',\n        });\n      }\n    });\n  upcoming.forEach((c) => {\n    c.courseDate = addYears(new Date(c.courseDate), +1).toString();\n  });\n\n  return (\n    <>\n      <WidgetCard>\n        <Grid className={classes.root}>\n          <Typography className={`${globalClasses.body1WidgetTitle}`}>\n            {_t_('my LEARNING')}\n          </Typography>\n          <Grid\n            container\n            direction=\"row\"\n            spacing={2}\n            style={{ paddingTop: '2.2rem' }}\n          >\n            <Grid item style={{ flex: 40 }}>\n              <Typography className={globalClasses.h5Bold} color=\"textPrimary\">\n                Module\n              </Typography>\n            </Grid>\n            <Grid item style={{ flex: 30, textAlign: 'center' }}>\n              <Typography className={globalClasses.h5Bold} color=\"textPrimary\">\n                Date\n              </Typography>\n            </Grid>\n            <Grid item style={{ flex: 30, textAlign: 'center' }}>\n              <Typography className={globalClasses.h5Bold} color=\"textPrimary\">\n                Assessment Score\n              </Typography>\n            </Grid>\n          </Grid>\n          <Typography className={`${classes.subHeading} ${classes.mainDiv}`}>\n            {_t_('Completed')}\n          </Typography>\n          <Grid container direction=\"column\">\n            {completed.length === 0 ? (\n              <Typography\n                variant=\"h4\"\n                align=\"center\"\n                style={{ marginTop: '5%' }}\n              >\n                No modules to be completed\n              </Typography>\n            ) : (\n              completed.map((element, index) => (\n                <Grid\n                  key={index}\n                  container\n                  direction=\"row\"\n                  spacing={2}\n                  style={{ marginTop: '0.8rem' }}\n                >\n                  <Grid item style={{ flex: 40 }}>\n                    <Typography className={classes.innertext}>\n                      {element.course}\n                    </Typography>\n                  </Grid>\n                  <Grid item style={{ flex: 30, textAlign: 'center' }}>\n                    <Typography className={classes.innertext}>\n                      {_t_(\n                        moment(element?.courseDate).utc().format('MMM DD YYYY'),\n                      )}\n                      {/* {element.courseDate.replace(',', '')} */}\n                    </Typography>\n                  </Grid>\n                  <Grid item style={{ flex: 30, textAlign: 'center' }}>\n                    <Typography className={classes.innertext}>\n                      {element.courseDate === '' && element.course === ''\n                        ? ''\n                        : element.score.toFixed(1)}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              ))\n            )}\n          </Grid>\n          <Typography className={`${classes.subHeading} ${classes.mainDiv2}`}>\n            {_t_('Upcoming')}\n          </Typography>\n          <Grid container direction=\"column\">\n            {upcoming.length === 0 ? (\n              <Typography\n                variant=\"h4\"\n                align=\"center\"\n                style={{ marginTop: '5%' }}\n              >\n                {' '}\n                No upcoming modules{' '}\n              </Typography>\n            ) : (\n              upcoming.map((element, index) => (\n                <Grid\n                  container\n                  direction=\"row\"\n                  spacing={2}\n                  style={{ marginTop: '0.8rem' }}\n                  key={index}\n                >\n                  <Grid item style={{ flex: 40 }}>\n                    <Typography className={classes.innertext}>\n                      {element.course}\n                    </Typography>\n                  </Grid>\n                  <Grid item style={{ flex: 30, textAlign: 'center' }}>\n                    <Typography className={classes.innertext}>\n                      {_t_(\n                        moment(element?.courseDate).utc().format('MMM DD YYYY'),\n                      )}\n                    </Typography>\n                  </Grid>\n                  <Grid item style={{ flex: 30, textAlign: 'center' }}>\n                    <Typography className={classes.innertext}></Typography>\n                  </Grid>\n                </Grid>\n              ))\n            )}\n          </Grid>\n        </Grid>\n      </WidgetCard>\n    </>\n  );\n};\n\nexport default RepLearning;\n"]},"metadata":{},"sourceType":"module"}