{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Current/peoplelens_ui/src/components/organisms/RequisitionWidget/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { COLORS } from '../../../plTheme';\nimport StaticFunnel from '../../molecules/StaticFunnel';\nimport WidgetCard from '../../atoms/WidgetCard';\nimport { _t_ } from '../../../utils/translation/translation';\nimport { useGlobalStyles } from '../../../plStyles';\nimport { _n_ } from '../../../utils/numerals/numerals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  main: {\n    marginTop: '18px'\n  },\n  heading: {\n    marginLeft: '16.29px'\n  },\n  rightHeading: {\n    color: COLORS.TEXT_HIGH_EMPHASIS,\n    marginRight: '21.94px'\n  },\n  element: {\n    marginTop: '50px',\n    marginBottom: '60px'\n  },\n  root: {\n    height: '422px'\n  }\n});\n\nconst RequisitionWidget = ({\n  requistionData,\n  requiredCandidates\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [totalNoOfHired, setTotalNoOfHired] = useState(0);\n  const [totalNoOfCandidates, setTotalNoOfCandidates] = useState(0);\n  const [totalNoOfInterviewed, setTotalNoOfInterviewed] = useState(0);\n  const [totalNoOfRequiredCandidates, setTotalNoOfRequiredCandidates] = useState(requiredCandidates);\n  useEffect(() => {\n    if (!requistionData) {\n      return;\n    }\n\n    let noOfHired = 0;\n    let noOfCandidates = 0;\n    let noOfInterviewed = 0;\n\n    for (let i = 0; i < (requistionData === null || requistionData === void 0 ? void 0 : requistionData.length); i++) {\n      var _requistionData$i, _requistionData$i2, _requistionData$i3, _requistionData$i4;\n\n      const value = (_requistionData$i = requistionData[i]) === null || _requistionData$i === void 0 ? void 0 : _requistionData$i.noOfCandidates;\n\n      if (((_requistionData$i2 = requistionData[i]) === null || _requistionData$i2 === void 0 ? void 0 : _requistionData$i2.requisitionStage) === 'hired') {\n        noOfHired += value ? value : 0;\n      } else if (((_requistionData$i3 = requistionData[i]) === null || _requistionData$i3 === void 0 ? void 0 : _requistionData$i3.requisitionStage) === 'interviewing') {\n        noOfInterviewed += value ? value : 0;\n      } else if (((_requistionData$i4 = requistionData[i]) === null || _requistionData$i4 === void 0 ? void 0 : _requistionData$i4.requisitionStage) === 'rejected') {\n        noOfInterviewed += value ? value : 0;\n      }\n\n      noOfCandidates += value ? value : 0;\n    }\n\n    if (noOfHired === 0 && noOfCandidates === 0 && noOfInterviewed === 0) {\n      setTotalNoOfRequiredCandidates(0);\n    }\n\n    setTotalNoOfHired(noOfHired);\n    setTotalNoOfInterviewed(noOfInterviewed);\n    setTotalNoOfCandidates(noOfCandidates);\n  }, [requistionData, requiredCandidates]);\n  const globalClasses = useGlobalStyles();\n  return /*#__PURE__*/_jsxDEV(WidgetCard, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"space-between\",\n      direction: \"column\",\n      className: classes.root,\n      \"data-testid\": \"requistionWidget\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"space-between\",\n          direction: \"row\",\n          className: classes.main,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: `${globalClasses.body1WidgetTitle} ${classes.heading}`,\n              children: [' ', _t_('RECRUITING'), ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              className: classes.rightHeading,\n              children: [' ', _t_('REQS'), \" :\", ' ', totalNoOfRequiredCandidates && _n_(totalNoOfRequiredCandidates, '0,0'), ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: classes.element,\n        children: /*#__PURE__*/_jsxDEV(StaticFunnel, {\n          totalNoOfCandidates: totalNoOfCandidates,\n          totalNoOfHired: totalNoOfHired,\n          totalNoOfInterviewed: totalNoOfInterviewed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RequisitionWidget, \"XJMV0CsQmThy0PQHRH93G+NqwZ8=\", false, function () {\n  return [useStyles, useGlobalStyles];\n});\n\n_c = RequisitionWidget;\nexport default RequisitionWidget;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequisitionWidget\");","map":{"version":3,"sources":["/home/komal/Documents/Current/peoplelens_ui/src/components/organisms/RequisitionWidget/index.tsx"],"names":["Grid","makeStyles","Typography","React","useEffect","useState","COLORS","StaticFunnel","WidgetCard","_t_","useGlobalStyles","_n_","useStyles","main","marginTop","heading","marginLeft","rightHeading","color","TEXT_HIGH_EMPHASIS","marginRight","element","marginBottom","root","height","RequisitionWidget","requistionData","requiredCandidates","classes","totalNoOfHired","setTotalNoOfHired","totalNoOfCandidates","setTotalNoOfCandidates","totalNoOfInterviewed","setTotalNoOfInterviewed","totalNoOfRequiredCandidates","setTotalNoOfRequiredCandidates","noOfHired","noOfCandidates","noOfInterviewed","i","length","value","requisitionStage","globalClasses","body1WidgetTitle"],"mappings":"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","sourcesContent":["import { Grid, makeStyles, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { COLORS } from '../../../plTheme';\nimport StaticFunnel from '../../molecules/StaticFunnel';\nimport WidgetCard from '../../atoms/WidgetCard';\nimport { _t_ } from '../../../utils/translation/translation';\nimport { getDashboardData_getDashboardData_peopleDrivers_requisitionInfo as DashboardRequisitionInfo } from '../../../gql/types';\nimport { useGlobalStyles } from '../../../plStyles';\nimport { _n_ } from '../../../utils/numerals/numerals';\n\ninterface RequisitionProps {\n  requistionData: (DashboardRequisitionInfo | null)[] | null | undefined;\n  requiredCandidates: number | null | undefined;\n}\n\nconst useStyles = makeStyles({\n  main: {\n    marginTop: '18px',\n  },\n\n  heading: {\n    marginLeft: '16.29px',\n  },\n  rightHeading: {\n    color: COLORS.TEXT_HIGH_EMPHASIS,\n    marginRight: '21.94px',\n  },\n  element: {\n    marginTop: '50px',\n    marginBottom: '60px',\n  },\n  root: {\n    height: '422px',\n  },\n});\n\nconst RequisitionWidget: React.FC<RequisitionProps> = ({\n  requistionData,\n  requiredCandidates,\n}: RequisitionProps) => {\n  const classes = useStyles();\n  const [totalNoOfHired, setTotalNoOfHired] = useState(0);\n  const [totalNoOfCandidates, setTotalNoOfCandidates] = useState(0);\n  const [totalNoOfInterviewed, setTotalNoOfInterviewed] = useState(0);\n  const [\n    totalNoOfRequiredCandidates,\n    setTotalNoOfRequiredCandidates,\n  ] = useState(requiredCandidates);\n\n  useEffect(() => {\n    if (!requistionData) {\n      return;\n    }\n    let noOfHired = 0;\n    let noOfCandidates = 0;\n    let noOfInterviewed = 0;\n    for (let i = 0; i < requistionData?.length; i++) {\n      const value = requistionData[i]?.noOfCandidates;\n      if (requistionData[i]?.requisitionStage === 'hired') {\n        noOfHired += value ? value : 0;\n      } else if (requistionData[i]?.requisitionStage === 'interviewing') {\n        noOfInterviewed += value ? value : 0;\n      } else if (requistionData[i]?.requisitionStage === 'rejected') {\n        noOfInterviewed += value ? value : 0;\n      }\n      noOfCandidates += value ? value : 0;\n    }\n\n    if (noOfHired === 0 && noOfCandidates === 0 && noOfInterviewed === 0) {\n      setTotalNoOfRequiredCandidates(0);\n    }\n    setTotalNoOfHired(noOfHired);\n    setTotalNoOfInterviewed(noOfInterviewed);\n    setTotalNoOfCandidates(noOfCandidates);\n  }, [requistionData, requiredCandidates]);\n\n  const globalClasses = useGlobalStyles();\n  return (\n    <WidgetCard>\n      <Grid\n        container\n        justify=\"space-between\"\n        direction=\"column\"\n        className={classes.root}\n        data-testid=\"requistionWidget\"\n      >\n        <Grid item>\n          <Grid\n            container\n            justify=\"space-between\"\n            direction=\"row\"\n            className={classes.main}\n          >\n            <Grid item>\n              <Typography\n                className={`${globalClasses.body1WidgetTitle} ${classes.heading}`}\n              >\n                {' '}\n                {_t_('RECRUITING')}{' '}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"subtitle2\" className={classes.rightHeading}>\n                {' '}\n                {_t_('REQS')} :{' '}\n                {totalNoOfRequiredCandidates &&\n                  _n_(totalNoOfRequiredCandidates, '0,0')}{' '}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item className={classes.element}>\n          <StaticFunnel\n            totalNoOfCandidates={totalNoOfCandidates}\n            totalNoOfHired={totalNoOfHired}\n            totalNoOfInterviewed={totalNoOfInterviewed}\n          />\n        </Grid>\n      </Grid>\n    </WidgetCard>\n  );\n};\n\nexport default RequisitionWidget;\n"]},"metadata":{},"sourceType":"module"}