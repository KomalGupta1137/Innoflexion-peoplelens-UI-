{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nconst faIRPickers = {\n  // Calendar navigation\n  previousMonth: 'ماه گذشته',\n  nextMonth: 'ماه آینده',\n  // View navigation\n  openPreviousView: 'نمای قبلی',\n  openNextView: 'نمای بعدی',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'نمای سال باز است، رفتن به نمای تقویم' : 'نمای تقویم باز است، رفتن به نمای سال',\n  inputModeToggleButtonAriaLabel: (isKeyboardInputOpen, viewType) => isKeyboardInputOpen ? `نمای ورودی متن باز است، رفتن به نمای ${viewType}` : `نمای ${viewType} باز است، رفتن به نمای ورودی متن`,\n  // DateRange placeholders\n  start: 'شروع',\n  end: 'پایان',\n  // Action bar\n  cancelButtonLabel: 'لغو',\n  clearButtonLabel: 'پاک کردن',\n  okButtonLabel: 'اوکی',\n  todayButtonLabel: 'امروز',\n  // Toolbar titles\n  datePickerDefaultToolbarTitle: 'تاریخ را انتخاب کنید',\n  dateTimePickerDefaultToolbarTitle: 'تاریخ و ساعت را انتخاب کنید',\n  timePickerDefaultToolbarTitle: 'ساعت را انتخاب کنید',\n  dateRangePickerDefaultToolbarTitle: 'محدوده تاریخ را انتخاب کنید',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Select ${view}. ${time === null ? 'هیچ ساعتی انتخاب نشده است' : `ساعت انتخاب ${adapter.format(time, 'fullTime')} می باشد`}`,\n  hoursClockNumberText: hours => `${hours} ساعت ها`,\n  minutesClockNumberText: minutes => `${minutes} دقیقه ها`,\n  secondsClockNumberText: seconds => `${seconds} ثانیه ها`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `تاریخ را انتخاب کنید، تاریخ انتخاب شده ${utils.format(utils.date(rawValue), 'fullDate')} می باشد` : 'تاریخ را انتخاب کنید',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `ساعت را انتخاب کنید، ساعت انتخاب شده ${utils.format(utils.date(rawValue), 'fullTime')} می باشد` : 'ساعت را انتخاب کنید',\n  // Table labels\n  timeTableLabel: 'انتخاب تاریخ',\n  dateTableLabel: 'انتخاب ساعت'\n};\nexport const faIR = getPickersLocalization(faIRPickers);","map":{"version":3,"sources":["/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/node_modules/@mui/x-date-pickers/locales/faIR.js"],"names":["getPickersLocalization","faIRPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","inputModeToggleButtonAriaLabel","isKeyboardInputOpen","viewType","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","datePickerDefaultToolbarTitle","dateTimePickerDefaultToolbarTitle","timePickerDefaultToolbarTitle","dateRangePickerDefaultToolbarTitle","clockLabelText","time","adapter","format","hoursClockNumberText","hours","minutesClockNumberText","minutes","secondsClockNumberText","seconds","openDatePickerDialogue","rawValue","utils","isValid","date","openTimePickerDialogue","timeTableLabel","dateTableLabel","faIR"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,gCAAvC;AACA,MAAMC,WAAW,GAAG;AAClB;AACAC,EAAAA,aAAa,EAAE,WAFG;AAGlBC,EAAAA,SAAS,EAAE,WAHO;AAIlB;AACAC,EAAAA,gBAAgB,EAAE,WALA;AAMlBC,EAAAA,YAAY,EAAE,WANI;AAOlBC,EAAAA,oCAAoC,EAAEC,IAAI,IAAIA,IAAI,KAAK,MAAT,GAAkB,sCAAlB,GAA2D,sCAPvF;AAQlBC,EAAAA,8BAA8B,EAAE,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAAI,wCAAuCC,QAAS,EAApD,GAAyD,QAAOA,QAAS,kCAR7I;AASlB;AACAC,EAAAA,KAAK,EAAE,MAVW;AAWlBC,EAAAA,GAAG,EAAE,OAXa;AAYlB;AACAC,EAAAA,iBAAiB,EAAE,KAbD;AAclBC,EAAAA,gBAAgB,EAAE,UAdA;AAelBC,EAAAA,aAAa,EAAE,MAfG;AAgBlBC,EAAAA,gBAAgB,EAAE,OAhBA;AAiBlB;AACAC,EAAAA,6BAA6B,EAAE,sBAlBb;AAmBlBC,EAAAA,iCAAiC,EAAE,6BAnBjB;AAoBlBC,EAAAA,6BAA6B,EAAE,qBApBb;AAqBlBC,EAAAA,kCAAkC,EAAE,6BArBlB;AAsBlB;AACAC,EAAAA,cAAc,EAAE,CAACd,IAAD,EAAOe,IAAP,EAAaC,OAAb,KAA0B,UAAShB,IAAK,KAAIe,IAAI,KAAK,IAAT,GAAgB,2BAAhB,GAA+C,eAAcC,OAAO,CAACC,MAAR,CAAeF,IAAf,EAAqB,UAArB,CAAiC,UAAU,EAvBlJ;AAwBlBG,EAAAA,oBAAoB,EAAEC,KAAK,IAAK,GAAEA,KAAM,UAxBtB;AAyBlBC,EAAAA,sBAAsB,EAAEC,OAAO,IAAK,GAAEA,OAAQ,WAzB5B;AA0BlBC,EAAAA,sBAAsB,EAAEC,OAAO,IAAK,GAAEA,OAAQ,WA1B5B;AA2BlB;AACAC,EAAAA,sBAAsB,EAAE,CAACC,QAAD,EAAWC,KAAX,KAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,GAAmD,0CAAyCC,KAAK,CAACT,MAAN,CAAaS,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAA+C,UAA3I,GAAuJ,sBA5BlL;AA6BlBI,EAAAA,sBAAsB,EAAE,CAACJ,QAAD,EAAWC,KAAX,KAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,GAAmD,wCAAuCC,KAAK,CAACT,MAAN,CAAaS,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAA+C,UAAzI,GAAqJ,qBA7BhL;AA8BlB;AACAK,EAAAA,cAAc,EAAE,cA/BE;AAgClBC,EAAAA,cAAc,EAAE;AAhCE,CAApB;AAkCA,OAAO,MAAMC,IAAI,GAAGvC,sBAAsB,CAACC,WAAD,CAAnC","sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\nconst faIRPickers = {\n  // Calendar navigation\n  previousMonth: 'ماه گذشته',\n  nextMonth: 'ماه آینده',\n  // View navigation\n  openPreviousView: 'نمای قبلی',\n  openNextView: 'نمای بعدی',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'نمای سال باز است، رفتن به نمای تقویم' : 'نمای تقویم باز است، رفتن به نمای سال',\n  inputModeToggleButtonAriaLabel: (isKeyboardInputOpen, viewType) => isKeyboardInputOpen ? `نمای ورودی متن باز است، رفتن به نمای ${viewType}` : `نمای ${viewType} باز است، رفتن به نمای ورودی متن`,\n  // DateRange placeholders\n  start: 'شروع',\n  end: 'پایان',\n  // Action bar\n  cancelButtonLabel: 'لغو',\n  clearButtonLabel: 'پاک کردن',\n  okButtonLabel: 'اوکی',\n  todayButtonLabel: 'امروز',\n  // Toolbar titles\n  datePickerDefaultToolbarTitle: 'تاریخ را انتخاب کنید',\n  dateTimePickerDefaultToolbarTitle: 'تاریخ و ساعت را انتخاب کنید',\n  timePickerDefaultToolbarTitle: 'ساعت را انتخاب کنید',\n  dateRangePickerDefaultToolbarTitle: 'محدوده تاریخ را انتخاب کنید',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Select ${view}. ${time === null ? 'هیچ ساعتی انتخاب نشده است' : `ساعت انتخاب ${adapter.format(time, 'fullTime')} می باشد`}`,\n  hoursClockNumberText: hours => `${hours} ساعت ها`,\n  minutesClockNumberText: minutes => `${minutes} دقیقه ها`,\n  secondsClockNumberText: seconds => `${seconds} ثانیه ها`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `تاریخ را انتخاب کنید، تاریخ انتخاب شده ${utils.format(utils.date(rawValue), 'fullDate')} می باشد` : 'تاریخ را انتخاب کنید',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `ساعت را انتخاب کنید، ساعت انتخاب شده ${utils.format(utils.date(rawValue), 'fullTime')} می باشد` : 'ساعت را انتخاب کنید',\n  // Table labels\n  timeTableLabel: 'انتخاب تاریخ',\n  dateTableLabel: 'انتخاب ساعت'\n};\nexport const faIR = getPickersLocalization(faIRPickers);"]},"metadata":{},"sourceType":"module"}