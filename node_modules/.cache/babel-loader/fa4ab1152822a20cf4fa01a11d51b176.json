{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/organisms/Reports/footer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport LogoWithText from '../../../assets/logoWithText.png';\nimport AltLogo from \"../../../assets/HeaderIcons/PeopleLens_Logo.svg\";\nimport { COLORS } from '../../../plTheme';\nimport { useGlobalStyles } from '../../../plStyles';\nimport { _t_ } from '../../../utils/translation/translation';\nimport { format, utcToZonedTime } from 'date-fns-tz';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  footer: {\n    padding: '5mm 0mm',\n    alignItems: 'center'\n  },\n  footerImage: {\n    height: 33,\n    width: 116\n  },\n  altFooterImage: {\n    height: 45,\n    width: 116\n  },\n  mainTitle: {\n    color: COLORS.TEXT_LOW_EMPHASIS,\n    textAlign: 'center'\n  }\n}));\n\nconst Footer = ({\n  useAltLogo,\n  activeQuarter\n}) => {\n  _s();\n\n  const datesTemp = [{\n    startDate: '2021-01-01T00:00:00.000Z',\n    endDate: '2021-12-31T23:59:59.999Z'\n  }, {\n    startDate: '2021-01-01T00:00:00.000Z',\n    endDate: '2021-03-31T23:59:59.999Z'\n  }, {\n    startDate: '2021-04-01T00:00:00.000Z',\n    endDate: '2021-06-30T23:59:59.999Z'\n  }, {\n    startDate: '2021-07-01T00:00:00.000Z',\n    endDate: '2021-09-30T23:59:59.999Z'\n  }, {\n    startDate: '2021-10-01T00:00:00.000Z',\n    endDate: '2021-12-31T23:59:59.999Z'\n  }, {\n    startDate: '2021-01-01T00:00:00.000Z',\n    endDate: '2021-06-30T23:59:59.999Z'\n  }, {\n    startDate: '2021-07-01T00:00:00.000Z',\n    endDate: '2021-12-31T23:59:59.999Z'\n  }];\n  const classes = useStyles();\n  const globalClasses = useGlobalStyles();\n  const year = new Date().getFullYear();\n  const prevMonth = new Date(new Date().setMonth(new Date().getMonth() - 1));\n  const prevMonth2 = new Date(new Date().setMonth(new Date().getMonth() - 2));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      spacing: 1,\n      className: `${classes.footer}`,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: `${globalClasses.body1WidgetTitle} ${classes.mainTitle}`,\n          children: [activeQuarter == 0 ? new Date().getDate() >= 15 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [prevMonth.toLocaleString('default', {\n              month: 'short'\n            }).toUpperCase(), ' ']\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [prevMonth2.toLocaleString('default', {\n              month: 'short'\n            }).toUpperCase(), ' ']\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [format(utcToZonedTime(new Date(datesTemp[activeQuarter].startDate), 'UTC'), 'MMM').toUpperCase(), ' ', \"-\", ' ', format(utcToZonedTime(new Date(datesTemp[activeQuarter].endDate), 'UTC'), 'MMM').toUpperCase(), ' ']\n          }, void 0, true), format(utcToZonedTime(new Date(datesTemp[activeQuarter].endDate), 'UTC'), 'yyyy'), ' ', activeQuarter == 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : activeQuarter == 5 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"(H1)\"\n          }, void 0, false) : activeQuarter == 6 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"(H2)\"\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"(Q\", activeQuarter, \")\"]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: useAltLogo ? AltLogo : LogoWithText,\n          alt: \"People Lens\",\n          className: useAltLogo ? `${classes.altFooterImage}` : `${classes.footerImage}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: `${globalClasses.roboto400px9px16px} ${classes.mainTitle}`,\n          children: _t_(`@${year} PeopleLens inc. Confidential and proprietary.`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Footer, \"+MxyZrEJ6fwBdqLdd4iSUSEX3hM=\", false, function () {\n  return [useStyles, useGlobalStyles];\n});\n\n_c = Footer;\nexport default Footer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"sources":["/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/organisms/Reports/footer.tsx"],"names":["React","Grid","makeStyles","Typography","LogoWithText","COLORS","useGlobalStyles","_t_","format","utcToZonedTime","useStyles","footer","padding","alignItems","footerImage","height","width","altFooterImage","mainTitle","color","TEXT_LOW_EMPHASIS","textAlign","Footer","useAltLogo","activeQuarter","datesTemp","startDate","endDate","classes","globalClasses","year","Date","getFullYear","prevMonth","setMonth","getMonth","prevMonth2","body1WidgetTitle","getDate","toLocaleString","month","toUpperCase","AltLogo","roboto400px9px16px"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport LogoWithText from '../../../assets/logoWithText.png';\nimport AltLogo from '../../../assets/HeaderIcons/PeopleLens_Logo.svg';\n\nimport { COLORS } from '../../../plTheme';\n\nimport { useGlobalStyles } from '../../../plStyles';\nimport { _t_ } from '../../../utils/translation/translation';\nimport { dates } from '../ManagerDashboard';\nimport { format, utcToZonedTime } from 'date-fns-tz';\n\nconst useStyles = makeStyles(() => ({\n  footer: {\n    padding: '5mm 0mm',\n    alignItems: 'center',\n  },\n  footerImage: {\n    height: 33,\n    width: 116,\n  },\n  altFooterImage: {\n    height: 45,\n    width: 116,\n  },\n  mainTitle: {\n    color: COLORS.TEXT_LOW_EMPHASIS,\n    textAlign: 'center',\n  },\n}));\n\nexport interface FooterProps {\n  useAltLogo?: boolean;\n  activeQuarter: number;\n}\n\nconst Footer: React.FC<FooterProps> = ({\n  useAltLogo,\n  activeQuarter,\n}: FooterProps) => {\n  const datesTemp = [\n    {\n      startDate: '2021-01-01T00:00:00.000Z',\n      endDate: '2021-12-31T23:59:59.999Z',\n    },\n    {\n      startDate: '2021-01-01T00:00:00.000Z',\n      endDate: '2021-03-31T23:59:59.999Z',\n    },\n    {\n      startDate: '2021-04-01T00:00:00.000Z',\n      endDate: '2021-06-30T23:59:59.999Z',\n    },\n    {\n      startDate: '2021-07-01T00:00:00.000Z',\n      endDate: '2021-09-30T23:59:59.999Z',\n    },\n    {\n      startDate: '2021-10-01T00:00:00.000Z',\n      endDate: '2021-12-31T23:59:59.999Z',\n    },\n    {\n      startDate: '2021-01-01T00:00:00.000Z',\n      endDate: '2021-06-30T23:59:59.999Z',\n    },\n    {\n      startDate: '2021-07-01T00:00:00.000Z',\n      endDate: '2021-12-31T23:59:59.999Z',\n    },\n  ];\n  const classes = useStyles();\n  const globalClasses = useGlobalStyles();\n  const year = new Date().getFullYear();\n  const prevMonth = new Date(new Date().setMonth(new Date().getMonth() - 1));\n  const prevMonth2 = new Date(new Date().setMonth(new Date().getMonth() - 2));\n\n  return (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        spacing={1}\n        className={`${classes.footer}`}\n      >\n        <Grid item>\n          <Typography\n            className={`${globalClasses.body1WidgetTitle} ${classes.mainTitle}`}\n          >\n            {activeQuarter == 0 ? (\n              new Date().getDate() >= 15 ? (\n                <>\n                  {prevMonth\n                    .toLocaleString('default', { month: 'short' })\n                    .toUpperCase()}{' '}\n                </>\n              ) : (\n                <>\n                  {prevMonth2\n                    .toLocaleString('default', { month: 'short' })\n                    .toUpperCase()}{' '}\n                </>\n              )\n            ) : (\n              <>\n                {format(\n                  utcToZonedTime(\n                    new Date(datesTemp[activeQuarter].startDate),\n                    'UTC',\n                  ),\n                  'MMM',\n                ).toUpperCase()}{' '}\n                -{' '}\n                {format(\n                  utcToZonedTime(\n                    new Date(datesTemp[activeQuarter].endDate),\n                    'UTC',\n                  ),\n                  'MMM',\n                ).toUpperCase()}{' '}\n              </>\n            )}\n            {format(\n              utcToZonedTime(new Date(datesTemp[activeQuarter].endDate), 'UTC'),\n              'yyyy',\n            )}{' '}\n            {activeQuarter == 0 ? (\n              <></>\n            ) : activeQuarter == 5 ? (\n              <>(H1)</>\n            ) : activeQuarter == 6 ? (\n              <>(H2)</>\n            ) : (\n              <>\n                (Q\n                {activeQuarter})\n              </>\n            )}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <img\n            src={useAltLogo ? AltLogo : LogoWithText}\n            alt=\"People Lens\"\n            className={\n              useAltLogo\n                ? `${classes.altFooterImage}`\n                : `${classes.footerImage}`\n            }\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography\n            className={`${globalClasses.roboto400px9px16px} ${classes.mainTitle}`}\n          >\n            {_t_(`@${year} PeopleLens inc. Confidential and proprietary.`)}\n          </Typography>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Footer;\n"]},"metadata":{},"sourceType":"module"}