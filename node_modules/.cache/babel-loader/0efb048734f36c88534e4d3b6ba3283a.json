{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/organisms/RepEarningsWidget/index.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable prettier/prettier */\nimport { MenuItem, FormControl, Grid, makeStyles, Select, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { _t_ } from '../../../utils/translation/translation';\nimport CalendarIcon from '../../../assets/calendar.png';\nimport { COLORS, plTheme } from '../../../plTheme';\nimport { properties } from '../../../properties';\nimport { GetRepDashboardData } from '../../../gql/queries/repDashboard';\nimport { useQuery } from '@apollo/client';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport RepEarningsContainer from '../RepEarningsContainer';\nimport Loader from '../../atoms/Loader';\nimport { dates } from '../RepDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RepEarningsWidget = ({\n  activeQuarter\n}) => {\n  _s();\n\n  const useStyles = makeStyles({\n    subtitle: {\n      fontWeight: 300\n    },\n    calendarIcon: {\n      width: 22,\n      height: 24\n    },\n    item: {// borderRadius: 4,\n      // border: '1px solid ' + COLORS.BORDER_PRIMARY,\n      // boxShadow: '0px 4px 20px ' + COLORS.BOX_SHADOW_CARDS,\n    },\n    mainDiv: {\n      marginTop: '0.73rem'\n    },\n    // formControl: {\n    //   width: '270px',\n    // },\n    formControl: {\n      marginLeft: 9,\n      width: '175px'\n    },\n    rightSubHeading: {\n      fontFamily: plTheme.typography.fontFamily,\n      fontSize: plTheme.typography.subtitle1.fontSize,\n      fontWeight: plTheme.typography.subtitle1.fontWeight,\n      lineHeight: plTheme.typography.subtitle1.lineHeight,\n      fontStyle: plTheme.typography.subtitle1.fontStyle,\n      backgroundColor: COLORS.GENERAL_WHITE\n    },\n    dropDown: {\n      height: 40\n    },\n    icon: {\n      color: COLORS.TEXT_HIGH_EMPHASIS\n    },\n    selectRoot: {\n      fontSize: 14,\n      fontWeight: 500,\n      fontFamily: 'Rubik',\n      lineHeight: '24px',\n      letterSpacing: '0em',\n      '&:focus': {\n        backgroundColor: 'transparent'\n      }\n    },\n    quantityRoot: {\n      '& .MuiOutlinedInput-notchedOutline': {\n        border: '1px solid rgba(215, 223, 233, 0.4)',\n        borderRadius: '2px'\n      },\n      '& .Mui-focused .MuiOutlinedInput-notchedOutline': {\n        border: '1px solid rgba(215, 223, 233, 0.4)',\n        borderRadius: '2px'\n      },\n      '&:hover .MuiOutlinedInput-notchedOutline': {\n        border: '1px solid rgba(215, 223, 233, 0.4)',\n        borderRadius: '2px'\n      }\n    }\n  });\n  const classes = useStyles();\n  let finacialYearDate = new Date(properties.finacialYearStartDate);\n\n  const getDate = month => {\n    finacialYearDate = new Date(properties.finacialYearStartDate);\n    return new Date(finacialYearDate.setMonth(finacialYearDate.getMonth() + month) - 1000);\n  };\n\n  const [startDate, setStartDate] = useState(properties.finacialYearStartDate);\n  const [endDate, setEndDate] = useState(getDate(12).toISOString());\n  const [selected, setSelected] = useState(6);\n  const [thresholdValue, setThresholdValue] = useState(1);\n\n  const handleChange = event => {\n    setSelected(event.target.value);\n    setStartDate(dropDownDates[event.target.value].startDate);\n    setEndDate(dropDownDates[event.target.value].endDate);\n    setThresholdValue(dropDownDates[event.target.value].value);\n  };\n\n  useEffect(() => {\n    setSelected(activeQuarter);\n    setStartDate(dropDownDates[activeQuarter].startDate);\n    setEndDate(dropDownDates[activeQuarter].endDate);\n  }, [activeQuarter]);\n  const dropDownDates = [{\n    name: 'ANNUAL (YTD)',\n    startDate: dates[0].startDate,\n    endDate: dates[0].endDate,\n    value: 1\n  }, {\n    name: 'QUARTERLY (Q1)',\n    startDate: dates[1].startDate,\n    endDate: dates[1].endDate,\n    value: 4\n  }, {\n    name: 'QUARTERLY (Q2)',\n    startDate: dates[2].startDate,\n    endDate: dates[2].endDate,\n    value: 4\n  }, {\n    name: 'QUARTERLY (Q3)',\n    startDate: dates[3].startDate,\n    endDate: dates[3].endDate,\n    value: 4\n  }, {\n    name: 'QUARTERLY (Q4)',\n    startDate: dates[4].startDate,\n    endDate: dates[4].endDate,\n    value: 4\n  }, {\n    name: 'SEMI ANNUAL (H1)',\n    startDate: dates[5].startDate,\n    endDate: dates[5].endDate,\n    value: 2\n  }, {\n    name: 'SEMI ANNUAL (H2)',\n    startDate: dates[6].startDate,\n    endDate: dates[6].endDate,\n    value: 2\n  }];\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(GetRepDashboardData, {\n    variables: {\n      repDashboardInput: {\n        startDate: startDate,\n        endDate: endDate,\n        thresholdValue: thresholdValue\n      }\n    }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  if (error) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"`Error! $\", error.message, \"` \"]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [' ', /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      color: \"textPrimary\",\n      children: _t_('My Earnings')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      style: {\n        marginTop: '0.29rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          marginTop: '2%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: CalendarIcon,\n          className: classes.calendarIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          className: classes.formControl,\n          classes: {\n            root: classes.quantityRoot\n          },\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            disabled: false,\n            IconComponent: ExpandMoreIcon,\n            className: `${classes.dropDown} ${classes.rightSubHeading}`,\n            value: selected,\n            onChange: handleChange,\n            inputProps: {\n              classes: {\n                icon: classes.icon,\n                root: classes.selectRoot\n              }\n            },\n            MenuProps: {\n              anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'left'\n              },\n              transformOrigin: {\n                vertical: 'top',\n                horizontal: 'left'\n              },\n              getContentAnchorEl: null\n            },\n            children: dropDownDates.map((element, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              className: classes.rightSubHeading,\n              value: index,\n              children: element.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RepEarningsContainer, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RepEarningsWidget, \"COIxZQ+1++ygjgiNfVSwh3QKXZ8=\", true, function () {\n  return [useQuery];\n});\n\n_c = RepEarningsWidget;\nexport default RepEarningsWidget;\n\nvar _c;\n\n$RefreshReg$(_c, \"RepEarningsWidget\");","map":{"version":3,"sources":["/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/organisms/RepEarningsWidget/index.tsx"],"names":["MenuItem","FormControl","Grid","makeStyles","Select","Typography","React","useEffect","useState","_t_","CalendarIcon","COLORS","plTheme","properties","GetRepDashboardData","useQuery","ExpandMoreIcon","RepEarningsContainer","Loader","dates","RepEarningsWidget","activeQuarter","useStyles","subtitle","fontWeight","calendarIcon","width","height","item","mainDiv","marginTop","formControl","marginLeft","rightSubHeading","fontFamily","typography","fontSize","subtitle1","lineHeight","fontStyle","backgroundColor","GENERAL_WHITE","dropDown","icon","color","TEXT_HIGH_EMPHASIS","selectRoot","letterSpacing","quantityRoot","border","borderRadius","classes","finacialYearDate","Date","finacialYearStartDate","getDate","month","setMonth","getMonth","startDate","setStartDate","endDate","setEndDate","toISOString","selected","setSelected","thresholdValue","setThresholdValue","handleChange","event","target","value","dropDownDates","name","loading","error","data","refetch","variables","repDashboardInput","message","root","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","map","element","index"],"mappings":"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","sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport {\r\n  MenuItem,\r\n  FormControl,\r\n  Grid,\r\n  makeStyles,\r\n  Select,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { _t_ } from '../../../utils/translation/translation';\r\nimport CalendarIcon from '../../../assets/calendar.png';\r\nimport { COLORS, plTheme } from '../../../plTheme';\r\nimport { properties } from '../../../properties';\r\nimport { GetRepDashboardData } from '../../../gql/queries/repDashboard';\r\nimport { QueryResult, useQuery } from '@apollo/client';\r\nimport { repDashboardData as RepDashboardData } from '../../../gql/types';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport RepEarningsContainer from '../RepEarningsContainer';\r\nimport Loader from '../../atoms/Loader';\r\nimport { dates } from '../RepDashboard';\r\n\r\nconst RepEarningsWidget: React.FC<{ activeQuarter: number }> = ({\r\n  activeQuarter,\r\n}) => {\r\n  const useStyles = makeStyles({\r\n    subtitle: {\r\n      fontWeight: 300,\r\n    },\r\n    calendarIcon: {\r\n      width: 22,\r\n      height: 24,\r\n    },\r\n    item: {\r\n      // borderRadius: 4,\r\n      // border: '1px solid ' + COLORS.BORDER_PRIMARY,\r\n      // boxShadow: '0px 4px 20px ' + COLORS.BOX_SHADOW_CARDS,\r\n    },\r\n    mainDiv: {\r\n      marginTop: '0.73rem',\r\n    },\r\n    // formControl: {\r\n    //   width: '270px',\r\n    // },\r\n    formControl: {\r\n      marginLeft: 9,\r\n      width: '175px',\r\n    },\r\n    rightSubHeading: {\r\n      fontFamily: plTheme.typography.fontFamily,\r\n      fontSize: plTheme.typography.subtitle1.fontSize,\r\n      fontWeight: plTheme.typography.subtitle1.fontWeight,\r\n      lineHeight: plTheme.typography.subtitle1.lineHeight,\r\n      fontStyle: plTheme.typography.subtitle1.fontStyle,\r\n      backgroundColor: COLORS.GENERAL_WHITE,\r\n    },\r\n    dropDown: {\r\n      height: 40,\r\n    },\r\n    icon: {\r\n      color: COLORS.TEXT_HIGH_EMPHASIS,\r\n    },\r\n\r\n    selectRoot: {\r\n      fontSize: 14,\r\n      fontWeight: 500,\r\n      fontFamily: 'Rubik',\r\n      lineHeight: '24px',\r\n      letterSpacing: '0em',\r\n      '&:focus': {\r\n        backgroundColor: 'transparent',\r\n      },\r\n    },\r\n    quantityRoot: {\r\n      '& .MuiOutlinedInput-notchedOutline': {\r\n        border: '1px solid rgba(215, 223, 233, 0.4)',\r\n        borderRadius: '2px',\r\n      },\r\n      '& .Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n        border: '1px solid rgba(215, 223, 233, 0.4)',\r\n        borderRadius: '2px',\r\n      },\r\n      '&:hover .MuiOutlinedInput-notchedOutline': {\r\n        border: '1px solid rgba(215, 223, 233, 0.4)',\r\n        borderRadius: '2px',\r\n      },\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n  let finacialYearDate = new Date(properties.finacialYearStartDate);\r\n  const getDate = (month: number) => {\r\n    finacialYearDate = new Date(properties.finacialYearStartDate);\r\n    return new Date(\r\n      finacialYearDate.setMonth(finacialYearDate.getMonth() + month) - 1000,\r\n    );\r\n  };\r\n\r\n  const [startDate, setStartDate] = useState(properties.finacialYearStartDate);\r\n  const [endDate, setEndDate] = useState(getDate(12).toISOString());\r\n  const [selected, setSelected] = useState(6);\r\n  const [thresholdValue, setThresholdValue] = useState(1);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: any }>) => {\r\n    setSelected(event.target.value as number);\r\n    setStartDate(dropDownDates[event.target.value as number].startDate);\r\n    setEndDate(dropDownDates[event.target.value as number].endDate);\r\n    setThresholdValue(dropDownDates[event.target.value as number].value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSelected(activeQuarter);\r\n    setStartDate(dropDownDates[activeQuarter].startDate);\r\n    setEndDate(dropDownDates[activeQuarter].endDate);\r\n  }, [activeQuarter]);\r\n\r\n  const dropDownDates = [\r\n    {\r\n      name: 'ANNUAL (YTD)',\r\n      startDate: dates[0].startDate,\r\n      endDate: dates[0].endDate,\r\n      value: 1,\r\n    },\r\n    {\r\n      name: 'QUARTERLY (Q1)',\r\n      startDate: dates[1].startDate,\r\n      endDate: dates[1].endDate,\r\n      value: 4,\r\n    },\r\n    {\r\n      name: 'QUARTERLY (Q2)',\r\n      startDate: dates[2].startDate,\r\n      endDate: dates[2].endDate,\r\n      value: 4,\r\n    },\r\n    {\r\n      name: 'QUARTERLY (Q3)',\r\n      startDate: dates[3].startDate,\r\n      endDate: dates[3].endDate,\r\n      value: 4,\r\n    },\r\n    {\r\n      name: 'QUARTERLY (Q4)',\r\n      startDate: dates[4].startDate,\r\n      endDate: dates[4].endDate,\r\n      value: 4,\r\n    },\r\n    {\r\n      name: 'SEMI ANNUAL (H1)',\r\n      startDate: dates[5].startDate,\r\n      endDate: dates[5].endDate,\r\n      value: 2,\r\n    },\r\n    {\r\n      name: 'SEMI ANNUAL (H2)',\r\n      startDate: dates[6].startDate,\r\n      endDate: dates[6].endDate,\r\n      value: 2,\r\n    },\r\n  ];\r\n  const {\r\n    loading,\r\n    error,\r\n    data,\r\n    refetch,\r\n  }: QueryResult<RepDashboardData> = useQuery(GetRepDashboardData, {\r\n    variables: {\r\n      repDashboardInput: {\r\n        startDate: startDate,\r\n        endDate: endDate,\r\n        thresholdValue: thresholdValue,\r\n      },\r\n    },\r\n  });\r\n  if (loading) {\r\n    return (\r\n      <>\r\n        <Loader />\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (error) return <>`Error! ${error.message}` </>;\r\n\r\n  return (\r\n    <>\r\n      {' '}\r\n      <Typography variant=\"h2\" color=\"textPrimary\">\r\n        {_t_('My Earnings')}\r\n      </Typography>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-end\"\r\n        style={{ marginTop: '0.29rem' }}\r\n      >\r\n        <Grid item style={{ marginTop: '2%' }}>\r\n          <img src={CalendarIcon} className={classes.calendarIcon} />\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            className={classes.formControl}\r\n            classes={{\r\n              root: classes.quantityRoot,\r\n            }}\r\n          >\r\n            <Select\r\n              disabled={false}\r\n              IconComponent={ExpandMoreIcon}\r\n              className={`${classes.dropDown} ${classes.rightSubHeading}`}\r\n              value={selected}\r\n              onChange={handleChange}\r\n              inputProps={{\r\n                classes: {\r\n                  icon: classes.icon,\r\n                  root: classes.selectRoot,\r\n                },\r\n              }}\r\n              MenuProps={{\r\n                anchorOrigin: {\r\n                  vertical: 'bottom',\r\n                  horizontal: 'left',\r\n                },\r\n                transformOrigin: {\r\n                  vertical: 'top',\r\n                  horizontal: 'left',\r\n                },\r\n                getContentAnchorEl: null,\r\n              }}\r\n            >\r\n              {dropDownDates.map((element, index) => (\r\n                <MenuItem\r\n                  className={classes.rightSubHeading}\r\n                  value={index}\r\n                  key={index}\r\n                >\r\n                  {element.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      <RepEarningsContainer data={data} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RepEarningsWidget;\r\n"]},"metadata":{},"sourceType":"module"}