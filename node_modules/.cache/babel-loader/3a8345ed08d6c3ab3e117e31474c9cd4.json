{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Current/peoplelens_ui/src/components/molecules/RepProductPortfolio/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport WidgetCard from '../../atoms/WidgetCard';\nimport { useGlobalStyles } from '../../../plStyles';\nimport { COLORS, plTheme } from '../../../plTheme';\nimport { _t_ } from '../../../utils/translation/translation';\nimport { _n_ } from '../../../utils/numerals/numerals';\nimport { useWindowSize } from '../../../utils/hooks/useWindowSize';\nimport PortfolioPieChart from '../PortfolioPieChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RepProductPortfolio = ({\n  salesClosed,\n  portfolioPresented,\n  data,\n  previousYearData,\n  previousYearSalesClosed,\n  isInReport,\n  lens\n}) => {\n  _s();\n\n  const [width] = useWindowSize();\n  const useStyles = makeStyles({\n    subElement: {\n      marginTop: 14,\n      fontWeight: plTheme.typography.h5.fontWeight,\n      color: COLORS.TEXT_HIGH_EMPHASIS\n    },\n    internalSubElement: {\n      color: COLORS.TEXT_HIGH_EMPHASIS\n    },\n    pieElement: {\n      marginTop: width < 1500 ? '11%' : '10%'\n    },\n    subElement1: {\n      marginTop: '1%',\n      marginBottom: 6.82,\n      fontWeight: plTheme.typography.h5.fontWeight\n    },\n    root: {\n      height: 396\n    },\n    yyDiv: {\n      // marginTop: '1rem',\n      height: 37\n    }\n  });\n  const classes = useStyles();\n  const globalClasses = useGlobalStyles();\n  const [chartData, setChartData] = useState([]);\n  const [previousChartData, setPreviousChartData] = useState([]);\n  useEffect(() => {\n    const chartColors = [COLORS.MAIN_BLUE_PRESSED, COLORS.MAIN_HUE_2, COLORS.MAIN_BLUE_HOVER];\n\n    const loadData = () => {\n      if (!data) {\n        return;\n      }\n\n      const tempData = [];\n      let percentageOccupied = 0;\n\n      for (let i = 0; i < (data === null || data === void 0 ? void 0 : data.length); i++) {\n        var _data$i, _data$i2, _data$i2$product;\n\n        const obj = {\n          name: '',\n          color: '',\n          y: 0\n        };\n        const totalAmount = (_data$i = data[i]) === null || _data$i === void 0 ? void 0 : _data$i.totalAmount;\n        const itemPercentage = totalAmount && salesClosed && totalAmount / salesClosed * 100;\n        const productname = (_data$i2 = data[i]) === null || _data$i2 === void 0 ? void 0 : (_data$i2$product = _data$i2.product) === null || _data$i2$product === void 0 ? void 0 : _data$i2$product.name;\n        obj.name = productname ? productname : 'Product' + (i + 1).toString();\n        obj.y = totalAmount ? totalAmount : 0;\n        obj.color = chartColors[i];\n\n        if (itemPercentage) {\n          percentageOccupied += itemPercentage;\n        }\n\n        tempData.push(obj);\n      }\n\n      if (tempData && Math.round(percentageOccupied) < 100) {\n        tempData[3].y = 100 - percentageOccupied;\n      } else {\n        tempData.splice(3, 1);\n      }\n\n      setChartData(tempData);\n    };\n\n    data && loadData();\n  }, [data, salesClosed]);\n  useEffect(() => {\n    const loadData2 = () => {\n      if (!previousYearData) {\n        return;\n      }\n\n      const tempData = [];\n\n      for (let i = 0; i < (previousYearData === null || previousYearData === void 0 ? void 0 : previousYearData.length); i++) {\n        var _previousYearData$i, _previousYearData$i2, _previousYearData$i2$;\n\n        const obj = {\n          name: '',\n          y: 0\n        };\n        const totalAmount = (_previousYearData$i = previousYearData[i]) === null || _previousYearData$i === void 0 ? void 0 : _previousYearData$i.totalAmount;\n        const productname = (_previousYearData$i2 = previousYearData[i]) === null || _previousYearData$i2 === void 0 ? void 0 : (_previousYearData$i2$ = _previousYearData$i2.product) === null || _previousYearData$i2$ === void 0 ? void 0 : _previousYearData$i2$.name;\n        obj.name = productname ? productname : 'Product' + (i + 1).toString();\n        obj.y = totalAmount ? totalAmount : 0;\n        tempData.push(obj);\n      }\n\n      setPreviousChartData(tempData);\n    };\n\n    previousYearData && loadData2();\n  }, [previousYearData, previousYearSalesClosed]);\n  return /*#__PURE__*/_jsxDEV(WidgetCard, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      direction: \"row\",\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          flex: 30\n        },\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              padding: '16px 0px 0px 16px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: globalClasses.body1WidgetTitle,\n              children: _t_('PRODUCT PORTFOLIO')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              padding: '0px 0px 0px 16px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"row\",\n              justify: \"flex-start\",\n              alignItems: \"center\",\n              spacing: 2,\n              className: classes.yyDiv,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  className: `${globalClasses.body1Light}`,\n                  children: lens == 'SDR' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: _t_('Bookings (Sourced)')\n                  }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [\" \", _t_('OVERALL SALES')]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h3\",\n                  className: classes.internalSubElement,\n                  style: {\n                    marginBottom: '3px'\n                  },\n                  children: [\"$\", salesClosed && _n_(salesClosed, '0,0.0a')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), lens == 'SDR' ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: `${globalClasses.body1Light} `,\n                children: _t_('(Y/Y growth)')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this)\n            }, void 0, false), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: `${globalClasses.body1WidgetTitle} ${classes.subElement}`,\n                children: _t_('PORTFOLIO PRESENTED')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                className: classes.internalSubElement,\n                children: [portfolioPresented && Math.trunc(portfolioPresented * 10) / 10, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          flex: 70\n        },\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.pieElement,\n          children: /*#__PURE__*/_jsxDEV(PortfolioPieChart, {\n            currentData: chartData,\n            previousData: previousChartData,\n            large: true,\n            isReport: isInReport\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RepProductPortfolio, \"RIUNYI2jfI6OLd1/rBn0nmQJGlQ=\", true, function () {\n  return [useWindowSize, useGlobalStyles];\n});\n\n_c = RepProductPortfolio;\nexport default RepProductPortfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"RepProductPortfolio\");","map":{"version":3,"sources":["/home/komal/Documents/Current/peoplelens_ui/src/components/molecules/RepProductPortfolio/index.tsx"],"names":["Grid","makeStyles","Typography","React","useEffect","useState","WidgetCard","useGlobalStyles","COLORS","plTheme","_t_","_n_","useWindowSize","PortfolioPieChart","RepProductPortfolio","salesClosed","portfolioPresented","data","previousYearData","previousYearSalesClosed","isInReport","lens","width","useStyles","subElement","marginTop","fontWeight","typography","h5","color","TEXT_HIGH_EMPHASIS","internalSubElement","pieElement","subElement1","marginBottom","root","height","yyDiv","classes","globalClasses","chartData","setChartData","previousChartData","setPreviousChartData","chartColors","MAIN_BLUE_PRESSED","MAIN_HUE_2","MAIN_BLUE_HOVER","loadData","tempData","percentageOccupied","i","length","obj","name","y","totalAmount","itemPercentage","productname","product","toString","push","Math","round","splice","loadData2","flex","padding","body1WidgetTitle","body1Light","trunc"],"mappings":"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","sourcesContent":["import { Grid, makeStyles, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport WidgetCard from '../../atoms/WidgetCard';\nimport { useGlobalStyles } from '../../../plStyles';\nimport { COLORS, plTheme } from '../../../plTheme';\n\nimport { _t_ } from '../../../utils/translation/translation';\nimport { _n_ } from '../../../utils/numerals/numerals';\nimport PieChart from '../../atoms/PieChart';\nimport { getDashboardData_getDashboardData_salesOutcome_topProductContributors as DashboardTopProductContributors } from '../../../gql/types';\nimport { useWindowSize } from '../../../utils/hooks/useWindowSize';\nimport PortfolioPieChart from '../PortfolioPieChart';\n\ninterface RepProductPortfolioProps {\n  salesClosed?: number | null;\n  portfolioPresented?: number | null;\n  data?: (DashboardTopProductContributors | null)[] | null;\n  previousYearData?: (DashboardTopProductContributors | null)[] | null;\n  previousYearSalesClosed?: number | null;\n  isInReport?: boolean;\n  lens?: string;\n}\n\ninterface InitData {\n  name: string;\n  color: string;\n  y: number;\n}\n\ninterface InitData2 {\n  name: string;\n  y: number;\n}\n\nconst RepProductPortfolio: React.FC<RepProductPortfolioProps> = ({\n  salesClosed,\n  portfolioPresented,\n  data,\n  previousYearData,\n  previousYearSalesClosed,\n  isInReport,\n  lens,\n}: RepProductPortfolioProps) => {\n  const [width] = useWindowSize();\n  const useStyles = makeStyles({\n    subElement: {\n      marginTop: 14,\n      fontWeight: plTheme.typography.h5.fontWeight,\n      color: COLORS.TEXT_HIGH_EMPHASIS,\n    },\n    internalSubElement: {\n      color: COLORS.TEXT_HIGH_EMPHASIS,\n    },\n    pieElement: {\n      marginTop: width < 1500 ? '11%' : '10%',\n    },\n    subElement1: {\n      marginTop: '1%',\n      marginBottom: 6.82,\n      fontWeight: plTheme.typography.h5.fontWeight,\n    },\n    root: {\n      height: 396,\n    },\n    yyDiv: {\n      // marginTop: '1rem',\n      height: 37,\n    },\n  });\n\n  const classes = useStyles();\n  const globalClasses = useGlobalStyles();\n  const [chartData, setChartData] = useState<InitData[]>([]);\n  const [previousChartData, setPreviousChartData] = useState<InitData2[]>([]);\n\n  useEffect(() => {\n    const chartColors = [\n      COLORS.MAIN_BLUE_PRESSED,\n      COLORS.MAIN_HUE_2,\n      COLORS.MAIN_BLUE_HOVER,\n    ];\n    const loadData = () => {\n      if (!data) {\n        return;\n      }\n      const tempData: InitData[] = [];\n\n      let percentageOccupied = 0;\n      for (let i = 0; i < data?.length; i++) {\n        const obj: InitData = {\n          name: '',\n          color: '',\n          y: 0,\n        };\n        const totalAmount = data[i]?.totalAmount;\n        const itemPercentage =\n          totalAmount && salesClosed && (totalAmount / salesClosed) * 100;\n        const productname = data[i]?.product?.name;\n        obj.name = productname ? productname : 'Product' + (i + 1).toString();\n        obj.y = totalAmount ? totalAmount : 0;\n        obj.color = chartColors[i];\n        if (itemPercentage) {\n          percentageOccupied += itemPercentage;\n        }\n        tempData.push(obj);\n      }\n      if (tempData && Math.round(percentageOccupied) < 100) {\n        tempData[3].y = 100 - percentageOccupied;\n      } else {\n        tempData.splice(3, 1);\n      }\n\n      setChartData(tempData);\n    };\n\n    data && loadData();\n  }, [data, salesClosed]);\n\n  useEffect(() => {\n    const loadData2 = () => {\n      if (!previousYearData) {\n        return;\n      }\n      const tempData: InitData2[] = [];\n      for (let i = 0; i < previousYearData?.length; i++) {\n        const obj: InitData2 = {\n          name: '',\n          y: 0,\n        };\n        const totalAmount = previousYearData[i]?.totalAmount;\n        const productname = previousYearData[i]?.product?.name;\n        obj.name = productname ? productname : 'Product' + (i + 1).toString();\n        obj.y = totalAmount ? totalAmount : 0;\n        tempData.push(obj);\n      }\n      setPreviousChartData(tempData);\n    };\n\n    previousYearData && loadData2();\n  }, [previousYearData, previousYearSalesClosed]);\n\n  return (\n    <WidgetCard>\n      <Grid item container direction=\"row\" className={classes.root}>\n        <Grid item style={{ flex: 30 }} xs={4}>\n          <Grid container direction=\"column\">\n            <Grid item style={{ padding: '16px 0px 0px 16px' }}>\n              <Typography className={globalClasses.body1WidgetTitle}>\n                {_t_('PRODUCT PORTFOLIO')}\n              </Typography>\n            </Grid>\n            <Grid item style={{ padding: '0px 0px 0px 16px' }}>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"flex-start\"\n                alignItems=\"center\"\n                spacing={2}\n                className={classes.yyDiv}\n              >\n                <Grid item>\n                  <Typography className={`${globalClasses.body1Light}`}>\n                    {lens == 'SDR' ? (\n                      <>{_t_('Bookings (Sourced)')}</>\n                    ) : (\n                      <> {_t_('OVERALL SALES')}</>\n                    )}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Typography\n                    variant=\"h3\"\n                    className={classes.internalSubElement}\n                    style={{ marginBottom: '3px' }}\n                  >\n                    ${salesClosed && _n_(salesClosed, '0,0.0a')}\n                  </Typography>\n                </Grid>\n              </Grid>\n              {lens == 'SDR' ? (\n                <></>\n              ) : (\n                <>\n                  <Typography className={`${globalClasses.body1Light} `}>\n                    {_t_('(Y/Y growth)')}\n                  </Typography>\n                </>\n              )}\n\n              <Grid item>\n                <Typography\n                  className={`${globalClasses.body1WidgetTitle} ${classes.subElement}`}\n                >\n                  {_t_('PORTFOLIO PRESENTED')}\n                </Typography>\n                <Typography variant=\"h3\" className={classes.internalSubElement}>\n                  {portfolioPresented &&\n                    Math.trunc(portfolioPresented * 10) / 10}\n                  %\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item style={{ flex: 70 }} xs={8}>\n          <Grid item className={classes.pieElement}>\n            {/* <PieChart\n              chartData={chartData}\n              previousChartData={previousChartData}\n            /> */}\n            <PortfolioPieChart\n              currentData={chartData}\n              previousData={previousChartData}\n              large\n              isReport={isInReport}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    </WidgetCard>\n  );\n};\n\nexport default RepProductPortfolio;\n"]},"metadata":{},"sourceType":"module"}