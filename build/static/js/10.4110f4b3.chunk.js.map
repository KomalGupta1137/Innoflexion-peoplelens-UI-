{"version":3,"sources":["assets/Manager_Round.png","assets/Rep.png","components/pages/settings/OutcomeScales.tsx","components/pages/settings/SettingsPage.tsx"],"names":["OutcomeScales","onClose","useState","loading","setLoading","min","max","salesClosed","setSalesClosed","dealsClosed","setDealsClosed","dealsSize","setDealsSize","quotaAttainment","setQuotaAttainment","winRate","setWinRate","salesCycle","setSalesCycle","classes","makeStyles","outcomesHead","color","COLORS","TEXT_HIGH_EMPHASIS","height","heading","fontFamily","fontSize","fontWeight","heading1","elements","fontStyle","barTitle","width","paddingTop","title","marginLeft","whiteSpace","overflow","textOverflow","container","padding","backgroundColor","overflowX","borderRadius","marginRight","marginTop","maxHeight","GREY_4","buttonFont","textTransform","useStyles","saveUserSettings","a","fetch","process","method","headers","body","JSON","stringify","data","outcome","getSalesOutcomeScale","fetchResponse","json","forEach","element","minimum","maximum","useEffect","Loader","Grid","direction","justify","item","Typography","variant","style","transform","textAlign","className","src","close","alt","onClick","display","flexDirection","justifyContent","marginBottom","alignItems","Tooltip","margin","placement","arrow","Icon","component","InfoOutlinedIcon","TextField","size","onChange","e","parseInt","target","value","type","background","defaultValue","inputProps","Button","containedSizeLarge","_t_","ReactGA","pageview","window","location","pathname","root","HOMEPAGE_BACKGROUND","contentData","reduceMargin","hideMargin","SettingsPage","setLoader","React","fullName","setFullName","jobTitle","setJobTitle","department","setDepartment","email","setEmail","phoneNo","setPhoneNo","notification","setNotificationValue","calendar","setCalendarValue","timeline","setTimelineValue","overview","setOverview","leaderboard","setLeaderboard","people","setPeople","reports","setReports","customer","setCustomer","open","setOpen","handleClose","picture","useAuth0","user","token","localStorage","getItem","decodedToken","jwtDecode","persona","designation","contentAlignment","buttonStyles","hideWhenPrint","tabAlignment","paddingLeft","border","plTheme","typography","subtitle2","h2","lineHeight","subtitle1","h3","GENERAL_WHITE","position","top","left","saveName","name","previousValue","getUserSettings","userId","jsonData","first_name","trim","last_name","setDefaultSalesOutcomeScale","handleChange","setFn","CssBaseline","Header","avatar","spacing","boxSizing","boxShadow","borderLeft","Avatar","Rep","text","onSave","editButtonProps","showEditButton","borderRight","FormControl","quantityRoot","Select","dropDown","rightSubHeading","disableUnderline","icon","selectRoot","MenuProps","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","selected","FormGroup","FormControlLabel","label","control","Checkbox","checked","getContentAnchorEl","filter","visibility","Sidebar","Dialog","paper","dialog","fullWidth","alignContent","maxWidth","DialogContent"],"mappings":"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","file":"static/js/10.4110f4b3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Manager_Round.a01aa9bd.png\";","export default __webpack_public_path__ + \"static/media/Rep.90863ddf.png\";","/* eslint-disable @typescript-eslint/no-unsafe-return */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport {\n  Button,\n  Grid,\n  Icon,\n  makeStyles,\n  TextField,\n  Tooltip,\n  Typography,\n} from '@material-ui/core';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport React, { useEffect, useState } from 'react';\nimport { useGlobalStyles } from '../../../plStyles';\nimport { COLORS } from '../../../plTheme';\nimport { _t_ } from '../../../utils/translation/translation';\nimport Loader from '../../atoms/Loader';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport close from '../../../../src/assets/close.png';\n\ninterface OutcomeScalesProps {\n  onClose?: any;\n}\n\nconst OutcomeScales: React.FC<OutcomeScalesProps> = ({\n  onClose,\n}: OutcomeScalesProps) => {\n  const [nudges, setNudges] = useState<any[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [salesClosed, setSalesClosed] = useState<any>({ min: 400, max: 1500 });\n  const [dealsClosed, setDealsClosed] = useState<any>({ min: 1, max: 20 });\n  const [dealsSize, setDealsSize] = useState<any>({ min: 10, max: 250 });\n  const [quotaAttainment, setQuotaAttainment] = useState<any>({\n    min: 5,\n    max: 150,\n  });\n  const [winRate, setWinRate] = useState<any>({ min: 10, max: 40 });\n  const [salesCycle, setSalesCycle] = useState<any>({ min: 30, max: 365 });\n\n  const useStyles = makeStyles({\n    outcomesHead: {\n      color: COLORS.TEXT_HIGH_EMPHASIS,\n      //   paddingTop: 30,\n      height: 62,\n    },\n    heading: {\n      fontFamily: 'Rubik',\n      fontSize: 16,\n      fontWeight: 300,\n    },\n    heading1: {\n      fontFamily: 'Rubik',\n      fontSize: 16,\n      fontWeight: 500,\n    },\n    elements: {\n      fontFamily: 'Rubik',\n      fontStyle: 'normal',\n      fontWeight: 300,\n      fontSize: 14,\n    },\n    barTitle: {\n      width: '100%',\n      paddingTop: '2%',\n    },\n    title: {\n      marginLeft: 8,\n      width: '100%',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      fontFamily: 'Rubik',\n      fontStyle: 'normal',\n      fontWeight: 400,\n      fontSize: 24,\n    },\n    container: {\n      padding: 20,\n      backgroundColor: 'white',\n      height: 576,\n      overflowX: 'scroll',\n      '&::-webkit-scrollbar': {\n        width: 6,\n        borderRadius: 10,\n        marginRight: '10px',\n      },\n      '&::-webkit-scrollbar-track': {\n        borderRadius: '10px',\n        marginTop: '10px',\n      },\n      '&::-webkit-scrollbar-thumb': {\n        maxHeight: 30,\n        backgroundColor: COLORS.GREY_4,\n        borderRadius: '10px',\n      },\n    },\n    buttonFont: {\n      fontFamily: 'Rubik',\n      fontWeight: 500,\n      fontSize: 14,\n      textTransform: 'none',\n      height: 40,\n      width: 154,\n    },\n  });\n\n  const classes = useStyles();\n\n  const saveUserSettings = async () => {\n    setLoading(true);\n    await fetch(\n      `${process.env.REACT_APP_API_BASE || ''}/api/setSalesOutcomeScale`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          data: [\n            {\n              outcome: 'DealsClosed',\n              min: dealsClosed.min,\n              max: dealsClosed.max,\n            },\n            { outcome: 'DealSize', min: dealsSize.min, max: dealsSize.max },\n            {\n              outcome: 'QuotaAttainment',\n              min: quotaAttainment.min,\n              max: quotaAttainment.max,\n            },\n            { outcome: 'WinRate', min: winRate.min, max: winRate.max },\n            { outcome: 'SalesCycle', min: salesCycle.min, max: salesCycle.max },\n            {\n              outcome: 'SalesClosed',\n              min: salesClosed.min,\n              max: salesClosed.max,\n            },\n          ],\n        }),\n      },\n    );\n    // const jsonData = await fetchResponse.json();\n    setLoading(false);\n  };\n\n  const getSalesOutcomeScale = async () => {\n    setLoading(true);\n    const fetchResponse = await fetch(\n      `${process.env.REACT_APP_API_BASE || ''}/api/getSalesOutcomeScale`,\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      },\n    );\n    const jsonData = await fetchResponse.json();\n    jsonData.forEach((element: any) => {\n      if (element.outcome == 'SalesClosed')\n        setSalesClosed({ min: element.minimum, max: element.maximum });\n      else if (element.outcome == 'DealSize')\n        setDealsSize({ min: element.minimum, max: element.maximum });\n      else if (element.outcome == 'QuotaAttainment')\n        setQuotaAttainment({ min: element.minimum, max: element.maximum });\n      else if (element.outcome == 'WinRate')\n        setWinRate({ min: element.minimum, max: element.maximum });\n      else if (element.outcome == 'SalesCycle')\n        setSalesCycle({ min: element.minimum, max: element.maximum });\n      else if (element.outcome == 'DealsClosed')\n        setDealsClosed({ min: element.minimum, max: element.maximum });\n    });\n    setLoading(false);\n  };\n\n  const setsalesClosedMin = (e: any) => {\n    salesClosed.min = parseInt(e.target.value);\n  };\n  const setsalesClosedMax = (e: any) => {\n    salesClosed.max = parseInt(e.target.value);\n  };\n  const setDealsClosedMin = (e: any) => {\n    dealsClosed.min = parseInt(e.target.value);\n  };\n  const setDealsClosedMax = (e: any) => {\n    dealsClosed.max = parseInt(e.target.value);\n  };\n  const setDealSizeMin = (e: any) => {\n    dealsSize.min = parseInt(e.target.value);\n  };\n  const setDealSizeMax = (e: any) => {\n    dealsSize.max = parseInt(e.target.value);\n  };\n  const setQAMin = (e: any) => {\n    quotaAttainment.min = parseInt(e.target.value);\n  };\n  const setQAMax = (e: any) => {\n    quotaAttainment.max = parseInt(e.target.value);\n  };\n  const setWRMin = (e: any) => {\n    winRate.min = parseInt(e.target.value);\n  };\n  const setWRMax = (e: any) => {\n    winRate.max = parseInt(e.target.value);\n  };\n  const setSCMin = (e: any) => {\n    salesCycle.min = parseInt(e.target.value);\n  };\n  const setSCMax = (e: any) => {\n    salesCycle.max = parseInt(e.target.value);\n  };\n\n  useEffect(() => {\n    void getSalesOutcomeScale();\n  }, []);\n\n  const imageClick = () => {\n    onClose();\n  };\n\n  if (loading) {\n    return (\n      <>\n        <Loader />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Grid container direction=\"column\">\n        <Grid container justify=\"space-between\">\n          <Grid item>\n            <Typography\n              variant=\"h2\"\n              style={{\n                transform: 'translateY(25%)',\n                textAlign: 'center',\n                marginLeft: 125,\n              }}\n              className={classes.outcomesHead}\n            >\n              Report: Sales Outcome Scale\n            </Typography>\n          </Grid>\n          <Grid item style={{ marginTop: 20 }}>\n            <img\n              src={close}\n              alt=\"close\"\n              style={{ width: 23, height: 23 }}\n              onClick={() => imageClick()}\n            />\n          </Grid>\n        </Grid>\n        <Grid className={classes.container}>\n          <Grid item style={{ width: '95%', padding: '2%' }}>\n            <Grid\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                width: '100%',\n              }}\n            >\n              <Grid className={`${classes.heading1}`}>Sales Outcome</Grid>\n              <Grid\n                className={`${classes.heading1}`}\n                style={{ marginLeft: -6 }}\n              ></Grid>\n              <Grid className={`${classes.heading1}`}>Min</Grid>\n              <Grid\n                className={`${classes.heading1}`}\n                style={{ marginRight: -4 }}\n              >\n                Max\n              </Grid>\n            </Grid>\n            <Grid\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-between',\n                width: '104%',\n                height: 350,\n                marginTop: 25,\n                marginBottom: 25,\n              }}\n            >\n              <Grid\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  height: 40,\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                }}\n              >\n                <Grid className={`${classes.heading}`} style={{ width: 200 }}>\n                  1. Sales Closed ($ 000)\n                </Grid>\n                <Grid\n                  className={`${classes.heading}`}\n                  style={{ marginLeft: -70, width: 20 }}\n                >\n                  <Tooltip\n                    title={\n                      <p\n                        style={{\n                          fontSize: 10,\n                          margin: 0,\n                          fontWeight: 'normal',\n                        }}\n                      >\n                        For individuals, the summation amount of all\n                        Opportunities that have been marked “Closed Won” with a\n                        Close Date in a given time interval where that\n                        individual is the current opportunity owner. At a team\n                        level, the average or total, per rep on that team.\n                      </p>\n                    }\n                    placement=\"top\"\n                    arrow\n                  >\n                    <Icon\n                      component={InfoOutlinedIcon}\n                      style={{ color: '#65789B' }}\n                    />\n                  </Tooltip>\n                </Grid>\n                <Grid\n                  className={`${classes.heading}`}\n                  style={{ width: 60, textAlign: 'center' }}\n                >\n                  <TextField\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onChange={setsalesClosedMin}\n                    type=\"text\"\n                    style={{\n                      width: 72,\n                      textAlign: 'center',\n                      background: 'rgba(246, 246, 246, 1)',\n                    }}\n                    defaultValue={salesClosed.min}\n                    inputProps={{\n                      style: {\n                        textAlign: 'center',\n                        marginTop: 3,\n                        fontSize: 'medium',\n                      },\n                    }}\n                  />\n                </Grid>\n                <Grid className={`${classes.heading}`} style={{ width: 63 }}>\n                  <TextField\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onChange={setsalesClosedMax}\n                    type=\"text\"\n                    style={{\n                      width: 72,\n                      textAlign: 'center',\n                      background: 'rgba(246, 246, 246, 1)',\n                    }}\n                    defaultValue={salesClosed.max}\n                    inputProps={{\n                      style: {\n                        textAlign: 'center',\n                        marginTop: 3,\n                        fontSize: 'medium',\n                      },\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              <Grid\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  height: 40,\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                }}\n              >\n                <Grid className={`${classes.heading}`} style={{ width: 200 }}>\n                  2. Deals Closed\n                </Grid>\n                <Grid\n                  className={`${classes.heading}`}\n                  style={{ marginLeft: -70, width: 20 }}\n                >\n                  <Tooltip\n                    title={\n                      <p\n                        style={{\n                          fontSize: 10,\n                          margin: 0,\n                          fontWeight: 'normal',\n                        }}\n                      >\n                        For individuals, the number of all Opportunities that\n                        have been marked “Closed Won” with a Close Date in a\n                        given time interval where that individual is the current\n                        opportunity owner. At a team level, the total, per rep\n                        on that team.\n                      </p>\n                    }\n                    placement=\"top\"\n                    arrow\n                  >\n                    <Icon\n                      component={InfoOutlinedIcon}\n                      style={{ color: '#65789B' }}\n                    />\n                  </Tooltip>\n                </Grid>\n                <Grid\n                  className={`${classes.heading}`}\n                  style={{ width: 60, textAlign: 'center', fontSize: 'medium' }}\n                >\n                  <TextField\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onChange={setDealsClosedMin}\n                    type=\"text\"\n                    style={{\n                      width: 72,\n                      textAlign: 'center',\n                      background: 'rgba(246, 246, 246, 1)',\n                    }}\n                    defaultValue={dealsClosed.min}\n                    inputProps={{\n                      style: {\n                        textAlign: 'center',\n                        marginTop: 3,\n                        fontSize: 'medium',\n                      },\n                    }}\n                  />\n                </Grid>\n                <Grid className={`${classes.heading}`} style={{ width: 63 }}>\n                  <TextField\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onChange={setDealsClosedMax}\n                    type=\"text\"\n                    style={{\n                      width: 72,\n                      textAlign: 'center',\n                      background: 'rgba(246, 246, 246, 1)',\n                    }}\n                    defaultValue={dealsClosed.max}\n                    inputProps={{\n                      style: {\n                        textAlign: 'center',\n                        marginTop: 3,\n                        fontSize: 'medium',\n                      },\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              <Grid\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  height: 40,\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                }}\n              >\n                <Grid className={`${classes.heading}`} style={{ width: 200 }}>\n                  3. Deal Size ($ 000)\n                </Grid>\n                <Grid\n                  className={`${classes.heading}`}\n                  style={{ marginLeft: -70, width: 20 }}\n                >\n                  <Tooltip\n                    title={\n                      <p\n                        style={{\n                          fontSize: 10,\n                          margin: 0,\n                          fontWeight: 'normal',\n                        }}\n                      >\n                        For individuals, the average of bookings of per\n                        Opportunitiy that have been marked “Closed Won” with a\n                        Close Date in a given time interval where that\n                        individual is the current opportunity owner. At a team\n                        level, the average, per rep on that team.\n                      </p>\n                    }\n                    placement=\"top\"\n                    arrow\n                  >\n                    <Icon\n                      component={InfoOutlinedIcon}\n                      style={{ color: '#65789B' }}\n                    />\n                  </Tooltip>\n                </Grid>\n                <Grid\n                  className={`${classes.heading}`}\n                  style={{ width: 60, textAlign: 'center' }}\n                >\n                  <TextField\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onChange={setDealSizeMin}\n                    type=\"text\"\n                    style={{\n                      width: 72,\n                      textAlign: 'center',\n                      background: 'rgba(246, 246, 246, 1)',\n                    }}\n                    defaultValue={dealsSize.min}\n                    inputProps={{\n                      style: {\n                        textAlign: 'center',\n                        marginTop: 3,\n                        fontSize: 'medium',\n                      },\n                    }}\n                  />\n                </Grid>\n                <Grid className={`${classes.heading}`} style={{ width: 63 }}>\n                  <TextField\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onChange={setDealSizeMax}\n                    type=\"text\"\n                    style={{\n                      width: 72,\n                      textAlign: 'center',\n                      background: 'rgba(246, 246, 246, 1)',\n                    }}\n                    defaultValue={dealsSize.max}\n                    inputProps={{\n                      style: {\n                        textAlign: 'center',\n                        marginTop: 3,\n                        fontSize: 'medium',\n                      },\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              <Grid\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  height: 40,\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                }}\n              >\n                <Grid className={`${classes.heading}`} style={{ width: 200 }}>\n                  4. Quota Attainment (%)\n                </Grid>\n                <Grid\n                  className={`${classes.heading}`}\n                  style={{ marginLeft: -70, width: 20 }}\n                >\n                  <Tooltip\n                    title={\n                      <p\n                        style={{\n                          fontSize: 10,\n                          margin: 0,\n                          fontWeight: 'normal',\n                        }}\n                      >\n                        For individuals measures a their sales closed, as a\n                        percentage of their quota for that period. It is a\n                        measure of how close they were to reaching their goal\n                        for a given time interval.\n                      </p>\n                    }\n                    placement=\"top\"\n                    arrow\n                  >\n                    <Icon\n                      component={InfoOutlinedIcon}\n                      style={{ color: '#65789B' }}\n                    />\n                  </Tooltip>\n                </Grid>\n                <Grid\n                  className={`${classes.heading}`}\n                  style={{ width: 60, textAlign: 'center' }}\n                >\n                  <TextField\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onChange={setQAMin}\n                    type=\"text\"\n                    style={{\n                      width: 72,\n                      textAlign: 'center',\n                      background: 'rgba(246, 246, 246, 1)',\n                    }}\n                    defaultValue={quotaAttainment.min}\n                    inputProps={{\n                      style: {\n                        textAlign: 'center',\n                        marginTop: 3,\n                        fontSize: 'medium',\n                      },\n                    }}\n                  />\n                </Grid>\n                <Grid className={`${classes.heading}`} style={{ width: 63 }}>\n                  <TextField\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onChange={setQAMax}\n                    type=\"text\"\n                    style={{\n                      width: 72,\n                      textAlign: 'center',\n                      background: 'rgba(246, 246, 246, 1)',\n                    }}\n                    defaultValue={quotaAttainment.max}\n                    inputProps={{\n                      style: {\n                        textAlign: 'center',\n                        marginTop: 3,\n                        fontSize: 'medium',\n                      },\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              <Grid\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  height: 40,\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                }}\n              >\n                <Grid className={`${classes.heading}`} style={{ width: 200 }}>\n                  5. Win Rate (%)\n                </Grid>\n                <Grid\n                  className={`${classes.heading}`}\n                  style={{ marginLeft: -70, width: 20 }}\n                >\n                  <Tooltip\n                    title={\n                      <p\n                        style={{\n                          fontSize: 10,\n                          margin: 0,\n                          fontWeight: 'normal',\n                        }}\n                      >\n                        It is the percentage of total new business opportunities\n                        closed that were won in the given time period. It is\n                        calculated by dividing the number of opportunities\n                        closed won in a given period over the total number of\n                        opportunities closed won and closed lost during that\n                        period.\n                      </p>\n                    }\n                    placement=\"top\"\n                    arrow\n                  >\n                    <Icon\n                      component={InfoOutlinedIcon}\n                      style={{ color: '#65789B' }}\n                    />\n                  </Tooltip>\n                </Grid>\n                <Grid\n                  className={`${classes.heading}`}\n                  style={{ width: 60, textAlign: 'center' }}\n                >\n                  <TextField\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onChange={setWRMin}\n                    type=\"text\"\n                    style={{\n                      width: 72,\n                      textAlign: 'center',\n                      background: 'rgba(246, 246, 246, 1)',\n                    }}\n                    defaultValue={winRate.min}\n                    inputProps={{\n                      style: {\n                        textAlign: 'center',\n                        marginTop: 3,\n                        fontSize: 'medium',\n                      },\n                    }}\n                  />\n                </Grid>\n                <Grid className={`${classes.heading}`} style={{ width: 63 }}>\n                  <TextField\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onChange={setWRMax}\n                    type=\"text\"\n                    style={{\n                      width: 72,\n                      textAlign: 'center',\n                      background: 'rgba(246, 246, 246, 1)',\n                    }}\n                    defaultValue={winRate.max}\n                    inputProps={{\n                      style: {\n                        textAlign: 'center',\n                        marginTop: 3,\n                        fontSize: 'medium',\n                      },\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              <Grid\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  height: 40,\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                }}\n              >\n                <Grid className={`${classes.heading}`} style={{ width: 200 }}>\n                  6. Sales Cycle (Days)\n                </Grid>\n                <Grid\n                  className={`${classes.heading}`}\n                  style={{ marginLeft: -70, width: 20 }}\n                >\n                  <Tooltip\n                    title={\n                      <p\n                        style={{\n                          fontSize: 10,\n                          margin: 0,\n                          fontWeight: 'normal',\n                        }}\n                      >\n                        It is measured by the average number of days from an\n                        opportunity's creation to Closed Won.\n                      </p>\n                    }\n                    placement=\"top\"\n                    arrow\n                  >\n                    <Icon\n                      component={InfoOutlinedIcon}\n                      style={{ color: '#65789B' }}\n                    />\n                  </Tooltip>\n                </Grid>\n                <Grid\n                  className={`${classes.heading}`}\n                  style={{ width: 60, textAlign: 'center' }}\n                >\n                  <TextField\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onChange={setSCMin}\n                    type=\"text\"\n                    style={{\n                      width: 72,\n                      textAlign: 'center',\n                      background: 'rgba(246, 246, 246, 1)',\n                    }}\n                    defaultValue={salesCycle.min}\n                    inputProps={{\n                      style: {\n                        textAlign: 'center',\n                        marginTop: 3,\n                        fontSize: 'medium',\n                      },\n                    }}\n                  />\n                </Grid>\n                <Grid className={`${classes.heading}`} style={{ width: 63 }}>\n                  <TextField\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onChange={setSCMax}\n                    type=\"text\"\n                    style={{\n                      width: 72,\n                      textAlign: 'center',\n                      background: 'rgba(246, 246, 246, 1)',\n                    }}\n                    defaultValue={salesCycle.max}\n                    inputProps={{\n                      style: {\n                        textAlign: 'center',\n                        marginTop: 3,\n                        fontSize: 'medium',\n                      },\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid\n            item\n            style={{\n              marginTop: 12,\n              textAlign: 'center',\n            }}\n          >\n            <Button\n              size=\"large\"\n              color=\"primary\"\n              variant=\"contained\"\n              style={{\n                width: 249,\n                height: 46,\n                fontSize: 20,\n              }}\n              classes={{ containedSizeLarge: classes.buttonFont }}\n              onClick={() => saveUserSettings()}\n            >\n              {_t_('Save Changes')}\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default OutcomeScales;\n","/* eslint-disable @typescript-eslint/restrict-plus-operands */\n/* eslint-disable @typescript-eslint/restrict-template-expressions */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { useAuth0 } from '@auth0/auth0-react';\nimport {\n  Avatar,\n  Button,\n  Checkbox,\n  CssBaseline,\n  Dialog,\n  DialogContent,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  Grid,\n  makeStyles,\n  MenuItem,\n  Select,\n  Typography,\n} from '@material-ui/core';\nimport jwtDecode from 'jwt-decode';\nimport React, { useEffect, useState } from 'react';\nimport { EditText, onSaveProps } from 'react-edit-text';\nimport 'react-edit-text/dist/index.css';\nimport ReactGA from 'react-ga';\nimport avatar from '../../../assets/Manager_Round.png';\nimport Rep from '../../../assets/Rep.png';\nimport { COLORS, plTheme } from '../../../plTheme';\nimport { _t_ } from '../../../utils/translation/translation';\nimport Loader from '../../atoms/Loader';\nimport Header from '../../organisms/Header';\nimport Sidebar from '../../organisms/Sidebar';\nimport '../settings/styles.css';\nimport OutcomeScales from './OutcomeScales';\n\nReactGA.pageview(window.location.pathname);\n\nmakeStyles(() => ({\n  root: {\n    backgroundColor: COLORS.HOMEPAGE_BACKGROUND,\n  },\n  contentData: {\n    width: '100%',\n    marginLeft: '80px',\n    marginRight: '40px',\n  },\n  reduceMargin: {},\n  hideMargin: {\n    marginTop: '4rem',\n  },\n  [`@media print`]: {\n    reduceMargin: {\n      marginLeft: '0%',\n    },\n    hideMargin: {\n      marginTop: 0,\n    },\n  },\n}));\n\ninterface DecodedTokenProps {\n  user: UserProps;\n}\n\ninterface UserProps {\n  designation: string | null;\n  persona: string | null;\n}\n\nconst SettingsPage: React.FC = () => {\n  const [loading, setLoader] = useState<boolean>(false);\n  const [fullName, setFullName] = React.useState('');\n  const [jobTitle, setJobTitle] = React.useState('');\n  const [department, setDepartment] = React.useState('Global Sales');\n  const [email, setEmail] = React.useState('');\n  const [phoneNo, setPhoneNo] = React.useState('+1-541-754-3010');\n  const [notification, setNotificationValue] = React.useState('Email');\n  const [calendar, setCalendarValue] = React.useState('Google Calendar');\n  const [timeline, setTimelineValue] = React.useState('Current - QTD');\n  const [overview, setOverview] = React.useState(true);\n  const [leaderboard, setLeaderboard] = React.useState(true);\n  const [people, setPeople] = React.useState(true);\n  const [reports, setReports] = React.useState(true);\n  const [customer, setCustomer] = React.useState(true);\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const { user } = useAuth0();\n  const { picture } = user;\n  const token = localStorage.getItem('accessToken');\n  const decodedToken: DecodedTokenProps | null | '' = token && jwtDecode(token);\n  const persona: string | null =\n    decodedToken && decodedToken.user && decodedToken?.user?.persona;\n  const designation: string | null =\n    decodedToken && decodedToken.user && decodedToken?.user?.designation;\n  const useStyles = makeStyles(() => ({\n    root: {\n      backgroundColor: COLORS.HOMEPAGE_BACKGROUND,\n    },\n    contentAlignment: {\n      padding: '2%',\n      backgroundColor: COLORS.HOMEPAGE_BACKGROUND,\n      width: 'calc(100% + 211px)',\n      //   height: height - 49,\n    },\n    buttonStyles: {\n      marginRight: '16px',\n      width: '68.08px',\n    },\n    hideWhenPrint: {},\n    [`@media print`]: {\n      contentAlignment: {\n        padding: 0,\n      },\n      hideWhenPrint: {\n        display: 'none',\n      },\n      tabAlignment: {\n        paddingLeft: '0%',\n      },\n      reduceMargin: {\n        marginLeft: '0%',\n      },\n      hideMargin: {\n        marginTop: 0,\n      },\n    },\n    tabAlignment: {\n      paddingLeft: '1%',\n    },\n    contentData: {\n      width: '100%',\n      marginLeft: '80px',\n      marginRight: '40px',\n    },\n    reduceMargin: {},\n    hideMargin: {\n      marginTop: '4rem',\n    },\n    text: {\n      marginTop: 10,\n      marginBottom: 0,\n      textAlign: 'center',\n      fontFamily: 'Rubik',\n      fontWeight: 300,\n      fontSize: 16,\n      //   lineHeight: 24,\n      color: 'rgb(24, 77, 211)',\n    },\n    value: {\n      textAlign: 'center',\n      marginTop: 5,\n      fontFamily: 'Rubik',\n      fontStyle: 'normal',\n      fontWeight: 400,\n      fontSize: 15,\n      color: '#171F46',\n    },\n    heading: {\n      display: 'flex',\n      flexDirection: 'column',\n      fontSize: 30,\n      fontWeight: 500,\n      fontFamily: 'Rubik',\n    },\n    quantityRoot: {\n      '& .MuiOutlinedInput-notchedOutline': {\n        border: '1px solid rgba(215, 223, 233, 0.4)',\n        borderRadius: '2px',\n      },\n      '& .Mui-focused .MuiOutlinedInput-notchedOutline': {\n        border: '1px solid rgba(215, 223, 233, 0.4)',\n        borderRadius: '2px',\n      },\n      '&:hover .MuiOutlinedInput-notchedOutline': {\n        border: '1px solid rgba(215, 223, 233, 0.4)',\n        borderRadius: '2px',\n      },\n    },\n    rightSubHeading: {\n      fontFamily: plTheme.typography.fontFamily,\n      fontSize: plTheme.typography.subtitle2.fontSize,\n      fontWeight: plTheme.typography.h2.fontWeight,\n      lineHeight: plTheme.typography.subtitle1.lineHeight,\n      fontStyle: plTheme.typography.h3.fontStyle,\n      backgroundColor: COLORS.GENERAL_WHITE,\n    },\n    dropDown: {\n      height: 44,\n    },\n    selectRoot: {\n      '&:focus': {\n        backgroundColor: 'transparent',\n      },\n    },\n    icon: {\n      color: COLORS.TEXT_HIGH_EMPHASIS,\n    },\n    buttonFont: {\n      fontFamily: 'Rubik',\n      fontWeight: 500,\n      fontSize: 14,\n      textTransform: 'none',\n      height: 40,\n      width: 154,\n    },\n    dialog: {\n      position: 'absolute',\n      // width: 700,\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      width: '625px',\n      height: 605,\n      // backgroundColor: 'rgba(246, 246, 246, 1)',\n    },\n  }));\n  const classes = useStyles();\n\n  function saveName({ name, value, previousValue }: onSaveProps) {}\n\n  const getUserSettings = async () => {\n    setLoader(true);\n    const fetchResponse = await fetch(\n      `${process.env.REACT_APP_API_BASE || ''}/api/getUserSetting`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          userId: localStorage.getItem('userId'),\n        }),\n      },\n    );\n    const jsonData = await fetchResponse.json();\n    if (jsonData != null) {\n      setFullName(jsonData.first_name.trim() + ' ' + jsonData.last_name.trim());\n      setJobTitle(jsonData.designation.trim());\n      // setDepartment(jsonData.department);\n      setEmail(jsonData.email.trim());\n      setNotificationValue(jsonData.notification);\n      setCalendarValue(jsonData.calendar);\n      setTimelineValue(jsonData.timeline);\n      setOverview(jsonData.overview);\n      setLeaderboard(jsonData.leaderboard);\n      setReports(jsonData.reports);\n      setPeople(jsonData.people);\n      setCustomer(jsonData.customer);\n    }\n    setLoader(false);\n  };\n\n  const saveUserSettings = async () => {\n    setLoader(true);\n    const fetchResponse = await fetch(\n      `${process.env.REACT_APP_API_BASE || ''}/api/updateUserSetting`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          userId: localStorage.getItem('userId'),\n          fullName: fullName,\n          jobTitle: jobTitle,\n          department: department,\n          email: email,\n          phoneNo: phoneNo,\n          notification: notification,\n          calendar: calendar,\n          timeline: timeline,\n          overview: overview,\n          leaderboard: leaderboard,\n          reports: reports,\n          people: people,\n          customer: customer,\n        }),\n      },\n    );\n    // const jsonData = await fetchResponse.json();\n    setLoader(false);\n  };\n\n  const setDefaultSalesOutcomeScale = async () => {\n    setLoader(true);\n    const fetchResponse = await fetch(\n      `${process.env.REACT_APP_API_BASE || ''}/api/setDefaultSalesOutcomeScale`,\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      },\n    );\n    setLoader(false);\n  };\n\n  const setOverviewChange = (e: any) => {\n    setOverview(e.target.checked);\n  };\n\n  const setLeaderboardChange = (e: any) => {\n    setLeaderboard(e.target.checked);\n  };\n\n  const setPeopleChange = (e: any) => {\n    setPeople(e.target.checked);\n  };\n\n  const setReportsChange = (e: any) => {\n    setReports(e.target.checked);\n  };\n\n  const setCustomerChange = (e: any) => {\n    setCustomer(e.target.checked);\n  };\n\n  const setNotifications = (e: any) => {\n    setNotificationValue(e.target.value);\n  };\n\n  const setTimeline = (e: any) => {\n    setTimelineValue(e.target.value);\n  };\n\n  const setCalendar = (e: any) => {\n    setCalendarValue(e.target.value);\n  };\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    setFn: (arg0: any) => void,\n  ) => {\n    setFn(e.target.value);\n  };\n\n  useEffect(() => {\n    void getUserSettings();\n  }, []);\n\n  if (loading) {\n    return (\n      <>\n        <Loader />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Grid>\n        <Grid container direction=\"column\" className={classes.root}>\n          <CssBaseline />\n          <Header\n            avatar={picture}\n            title=\"peoplelens.ai\"\n            persona={persona}\n            designation={designation}\n          />\n          <Grid item className={classes.hideMargin}>\n            <Grid container direction=\"row\">\n              <Grid\n                item\n                className={`${classes.reduceMargin} ${classes.contentData}`}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  spacing={6}\n                  className={`${classes.contentAlignment}`}\n                >\n                  <Grid item className={`${classes.hideWhenPrint}`}>\n                    <Grid container justify=\"space-between\">\n                      <Grid item>\n                        <Typography variant=\"h1\">Settings</Typography>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid\n                    style={{\n                      display: 'flex',\n                      flexDirection: 'row',\n                      boxSizing: 'border-box',\n                      borderRadius: '5px',\n                      boxShadow: '5px 5px 5px rgba(0, 0, 0, 0.1)',\n                      width: '1650px',\n                      margin: '10mm auto',\n                    }}\n                  >\n                    <Grid\n                      style={{\n                        height: '600px',\n                        background: 'rgba(215, 223, 233, 0.4)',\n                        width: '35%',\n                        borderLeft: '1px solid rgba(215, 223, 233, 0.4)',\n                        borderRadius: '10px 0px 0px',\n                        display: 'flex',\n                        flexDirection: 'column',\n                      }}\n                    >\n                      <Grid\n                        style={{\n                          margin: '10px',\n                          marginBottom: 24,\n                          textAlign: 'center',\n                        }}\n                      >\n                        <Avatar\n                          style={{\n                            fontSize: '110px',\n                            width: 168,\n                            height: 160,\n                            marginLeft: 194,\n                            marginTop: 24,\n                          }}\n                          src={persona == 'LEADER' ? avatar : Rep}\n                          // children={fullName.charAt(0)}\n                        />\n                      </Grid>\n                      <Grid\n                        style={{\n                          display: 'flex',\n                          flexDirection: 'row',\n                          justifyContent: 'space-around',\n                        }}\n                      >\n                        <Grid style={{ display: 'flex', width: '55%' }}>\n                          <p\n                            className={`${classes.text}`}\n                            style={{ width: '35%', textAlign: 'left' }}\n                          >\n                            Full Name\n                          </p>\n                          <EditText\n                            name=\"fullName\"\n                            value={fullName}\n                            onChange={(e) => handleChange(e, setFullName)}\n                            onSave={saveName}\n                            editButtonProps={{\n                              style: {\n                                marginLeft: '5px',\n                                width: 16,\n                                background: 'rgb(234 237 241 / 0%)',\n                              },\n                            }}\n                            showEditButton\n                          />\n                        </Grid>\n                      </Grid>\n                      <Grid\n                        style={{\n                          display: 'flex',\n                          flexDirection: 'row',\n                          justifyContent: 'space-around',\n                        }}\n                      >\n                        <Grid style={{ display: 'flex', width: '55%' }}>\n                          <p\n                            className={`${classes.text}`}\n                            style={{ width: '35%', textAlign: 'left' }}\n                          >\n                            Job Title\n                          </p>\n                          <EditText\n                            name=\"fullName\"\n                            value={jobTitle}\n                            onChange={(e) => handleChange(e, setJobTitle)}\n                            onSave={saveName}\n                            editButtonProps={{\n                              style: {\n                                marginLeft: '5px',\n                                width: 16,\n                                background: 'rgb(234 237 241 / 0%)',\n                              },\n                            }}\n                            showEditButton\n                          />\n                        </Grid>\n                      </Grid>\n                      <Grid\n                        style={{\n                          display: 'flex',\n                          flexDirection: 'row',\n                          justifyContent: 'space-around',\n                        }}\n                      >\n                        <Grid style={{ display: 'flex', width: '55%' }}>\n                          <p\n                            className={`${classes.text}`}\n                            style={{ width: '35%', textAlign: 'left' }}\n                          >\n                            Department\n                          </p>\n                          <EditText\n                            name=\"fullName\"\n                            value={department}\n                            onChange={(e) => handleChange(e, setDepartment)}\n                            onSave={saveName}\n                            editButtonProps={{\n                              style: {\n                                marginLeft: '5px',\n                                width: 16,\n                                background: 'rgb(234 237 241 / 0%)',\n                              },\n                            }}\n                            showEditButton\n                          />\n                        </Grid>\n                      </Grid>\n                      <p\n                        style={{\n                          fontFamily: 'Rubik',\n                          fontWeight: 500,\n                          fontSize: 24,\n                          color: '#171F46',\n                          // textAlign: 'center',\n                          marginLeft: 128,\n                        }}\n                      >\n                        Contact Info\n                      </p>\n                      <Grid\n                        style={{\n                          display: 'flex',\n                          flexDirection: 'row',\n                          justifyContent: 'space-around',\n                        }}\n                      >\n                        <Grid style={{ display: 'flex', width: '55%' }}>\n                          <p\n                            className={`${classes.text}`}\n                            style={{ width: '35%', textAlign: 'left' }}\n                          >\n                            Email\n                          </p>\n                          <p\n                            style={{\n                              textAlign: 'left',\n                              width: '51%',\n                              marginTop: 7,\n                              marginLeft: 20,\n                              fontFamily: 'Rubik',\n                              fontStyle: 'normal',\n                              fontWeight: 400,\n                              fontSize: 15,\n                            }}\n                          >\n                            {email}\n                          </p>\n                        </Grid>\n                      </Grid>\n                      <Grid\n                        style={{\n                          display: 'flex',\n                          flexDirection: 'row',\n                          justifyContent: 'space-around',\n                        }}\n                      >\n                        <Grid style={{ display: 'flex', width: '55%' }}>\n                          <p\n                            className={`${classes.text}`}\n                            style={{ width: '35%', textAlign: 'left' }}\n                          >\n                            Phone No.\n                          </p>\n                          <EditText\n                            name=\"phoneNo\"\n                            value={phoneNo}\n                            onChange={(e) => handleChange(e, setPhoneNo)}\n                            onSave={saveName}\n                            editButtonProps={{\n                              style: {\n                                marginLeft: '5px',\n                                width: 16,\n                                background: 'rgb(234 237 241 / 0%)',\n                              },\n                            }}\n                            showEditButton\n                          />\n                        </Grid>\n                      </Grid>\n                      {/* <Grid\n                        style={{\n                          display: 'flex',\n                          flexDirection: 'row',\n                          justifyContent: 'space-evenly',\n                        }}\n                      >\n                        <Grid style={{ width: 250 }}>\n                          <p className={`${classes.text}`}>Email</p>\n                          <p style={{ textAlign: 'center' }}>{email}</p>\n                        </Grid>\n                        <Grid style={{ display: 'flex', width: '55%' }}>\n                          <p\n                            className={`${classes.text}`}\n                            style={{ width: '35%' }}\n                          >\n                            Phone No.\n                          </p>\n                          <EditText\n                            name=\"fullName\"\n                            value={phoneNo}\n                            onChange={(e) => handleChange(e, setPhoneNo)}\n                            onSave={saveName}\n                            editButtonProps={{\n                              style: {\n                                marginLeft: '5px',\n                                width: 16,\n                                background: 'rgb(234 237 241 / 0%)',\n                              },\n                            }}\n                            showEditButton\n                          />\n                          <p className={`${classes.value}`}></p>\n                        </Grid>\n                      </Grid> */}\n                    </Grid>\n                    <Grid\n                      style={{\n                        height: '600px',\n                        background: 'white',\n                        width: '65%',\n                        borderRight: '1px solid white',\n                        borderRadius: '0px 10px 10px 0px',\n                      }}\n                    >\n                      <Grid\n                        style={{\n                          display: 'flex',\n                          flexDirection: 'row',\n                          justifyContent: 'space-between',\n                          width: '85%',\n                          margin: '50px auto',\n                        }}\n                      >\n                        <Grid className={`${classes.heading}`}>\n                          Preferences\n                        </Grid>\n                        <Grid\n                          className={`${classes.heading}`}\n                          style={{ width: 332 }}\n                        >\n                          Permissions -{' '}\n                          {persona == 'LEADER' ? 'Manager' : 'Rep'}\n                        </Grid>\n                      </Grid>\n                      <Grid\n                        style={{\n                          height: 300,\n                          width: 780,\n                          marginLeft: 65,\n                          display: 'flex',\n                          flexDirection: 'column',\n                        }}\n                      >\n                        <Grid\n                          style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            height: 40,\n                            alignItems: 'center',\n                            marginBottom: 40,\n                            justifyContent: 'space-between',\n                          }}\n                        >\n                          <Grid\n                            style={{\n                              fontFamily: 'Rubik',\n                              fontStyle: 'normal',\n                              fontWeight: 400,\n                              fontSize: 16,\n                              lineHeight: 40,\n                              width: 150,\n                            }}\n                          >\n                            Notifications\n                          </Grid>\n                          <Grid>\n                            <FormControl\n                              variant=\"outlined\"\n                              classes={{ root: classes.quantityRoot }}\n                              style={{ width: 216.86, height: 39.93 }}\n                            >\n                              <Select\n                                onChange={setNotifications}\n                                value={notification}\n                                className={`${classes.dropDown} ${classes.rightSubHeading}`}\n                                disableUnderline={false}\n                                inputProps={{\n                                  classes: {\n                                    icon: classes.icon,\n                                    root: classes.selectRoot,\n                                  },\n                                }}\n                                MenuProps={{\n                                  anchorOrigin: {\n                                    vertical: 'bottom',\n                                    horizontal: 'left',\n                                  },\n                                  transformOrigin: {\n                                    vertical: 'top',\n                                    horizontal: 'left',\n                                  },\n                                }}\n                              >\n                                <MenuItem\n                                  className={classes.rightSubHeading}\n                                  value={'Slack'}\n                                  selected={true}\n                                >\n                                  Slack\n                                </MenuItem>\n                                <MenuItem\n                                  className={classes.rightSubHeading}\n                                  value={'Email'}\n                                >\n                                  Email\n                                </MenuItem>\n                                <MenuItem\n                                  className={classes.rightSubHeading}\n                                  value={'Text'}\n                                >\n                                  Text\n                                </MenuItem>\n                              </Select>\n                            </FormControl>\n                          </Grid>\n                          <Grid>\n                            <FormGroup>\n                              <FormControlLabel\n                                style={{ width: 160 }}\n                                label=\"Overview\"\n                                control={\n                                  <Checkbox\n                                    color=\"primary\"\n                                    checked={overview}\n                                    onChange={setOverviewChange}\n                                  />\n                                }\n                              />\n                            </FormGroup>\n                          </Grid>\n                        </Grid>\n                        <Grid\n                          style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            height: 40,\n                            alignItems: 'center',\n                            marginBottom: 40,\n                            justifyContent: 'space-between',\n                          }}\n                        >\n                          <Grid\n                            style={{\n                              fontFamily: 'Rubik',\n                              fontStyle: 'normal',\n                              fontWeight: 400,\n                              fontSize: 16,\n                              lineHeight: 40,\n                              width: 150,\n                            }}\n                          >\n                            Calendar\n                          </Grid>\n                          <Grid>\n                            <FormControl\n                              variant=\"outlined\"\n                              classes={{ root: classes.quantityRoot }}\n                              style={{ width: 216.86, height: 39.93 }}\n                            >\n                              <Select\n                                onChange={setCalendar}\n                                value={calendar}\n                                className={`${classes.dropDown} ${classes.rightSubHeading}`}\n                                disableUnderline={false}\n                                inputProps={{\n                                  classes: {\n                                    icon: classes.icon,\n                                    root: classes.selectRoot,\n                                  },\n                                }}\n                                MenuProps={{\n                                  anchorOrigin: {\n                                    vertical: 'bottom',\n                                    horizontal: 'left',\n                                  },\n                                  transformOrigin: {\n                                    vertical: 'top',\n                                    horizontal: 'left',\n                                  },\n                                  getContentAnchorEl: null,\n                                }}\n                              >\n                                <MenuItem\n                                  className={classes.rightSubHeading}\n                                  value={'Google Calendar'}\n                                  selected={true}\n                                >\n                                  Google Calendar\n                                </MenuItem>\n                                <MenuItem\n                                  className={classes.rightSubHeading}\n                                  value={'O365 - Calendar'}\n                                >\n                                  O365 - Calendar\n                                </MenuItem>\n                              </Select>\n                            </FormControl>\n                          </Grid>\n                          {persona == 'LEADER' ? (\n                            <Grid>\n                              <FormGroup>\n                                <FormControlLabel\n                                  style={{ width: 160 }}\n                                  label=\"Leaderboard\"\n                                  control={\n                                    <Checkbox\n                                      color=\"primary\"\n                                      checked={leaderboard}\n                                      onChange={setLeaderboardChange}\n                                    />\n                                  }\n                                />\n                              </FormGroup>\n                            </Grid>\n                          ) : (\n                            <>\n                              <Grid>\n                                <FormGroup>\n                                  <FormControlLabel\n                                    style={{ width: 160 }}\n                                    label=\"People\"\n                                    control={\n                                      <Checkbox\n                                        color=\"primary\"\n                                        checked={people}\n                                        onChange={setPeopleChange}\n                                      />\n                                    }\n                                  />\n                                </FormGroup>\n                              </Grid>\n                            </>\n                          )}\n                        </Grid>\n                        <Grid\n                          style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            height: 40,\n                            alignItems: 'center',\n                            marginBottom: 40,\n                            justifyContent: 'space-between',\n                          }}\n                        >\n                          <Grid\n                            style={{\n                              fontFamily: 'Rubik',\n                              fontStyle: 'normal',\n                              fontWeight: 400,\n                              fontSize: 16,\n                              lineHeight: 40,\n                              width: 150,\n                            }}\n                          >\n                            Timeline\n                          </Grid>\n                          <Grid>\n                            <FormControl\n                              variant=\"outlined\"\n                              classes={{ root: classes.quantityRoot }}\n                              style={{ width: 216.86, height: 39.93 }}\n                            >\n                              <Select\n                                onChange={setTimeline}\n                                value={timeline}\n                                className={`${classes.dropDown} ${classes.rightSubHeading}`}\n                                disableUnderline={false}\n                                inputProps={{\n                                  classes: {\n                                    icon: classes.icon,\n                                    root: classes.selectRoot,\n                                  },\n                                }}\n                                MenuProps={{\n                                  anchorOrigin: {\n                                    vertical: 'bottom',\n                                    horizontal: 'left',\n                                  },\n                                  transformOrigin: {\n                                    vertical: 'top',\n                                    horizontal: 'left',\n                                  },\n                                  getContentAnchorEl: null,\n                                }}\n                              >\n                                <MenuItem\n                                  className={classes.rightSubHeading}\n                                  value={'Current - QTD'}\n                                  selected={true}\n                                >\n                                  Current - QTD\n                                </MenuItem>\n                                <MenuItem\n                                  className={classes.rightSubHeading}\n                                  value={'Historical - Last Completed Qtr'}\n                                >\n                                  Historical - Last Completed Qtr\n                                </MenuItem>\n                              </Select>\n                            </FormControl>\n                          </Grid>\n                          {persona == 'LEADER' ? (\n                            <Grid>\n                              <FormGroup>\n                                <FormControlLabel\n                                  style={{ width: 160 }}\n                                  label=\"Reports\"\n                                  control={\n                                    <Checkbox\n                                      color=\"primary\"\n                                      checked={reports}\n                                      onChange={setReportsChange}\n                                    />\n                                  }\n                                />\n                              </FormGroup>\n                            </Grid>\n                          ) : (\n                            <Grid>\n                              <FormGroup>\n                                <FormControlLabel\n                                  style={{ width: 160 }}\n                                  label=\"Customer\"\n                                  control={\n                                    <Checkbox\n                                      color=\"primary\"\n                                      checked={customer}\n                                      onChange={setCustomerChange}\n                                    />\n                                  }\n                                />\n                              </FormGroup>\n                            </Grid>\n                          )}\n                        </Grid>\n                        {persona === 'LEADER' ? (\n                          <Grid\n                            style={{\n                              display: 'flex',\n                              flexDirection: 'row',\n                              height: 40,\n                              alignItems: 'center',\n                              marginBottom: 40,\n                              justifyContent: 'space-between',\n                            }}\n                          >\n                            <Grid\n                              style={{\n                                fontFamily: 'Rubik',\n                                fontStyle: 'normal',\n                                fontWeight: 400,\n                                fontSize: 16,\n                                // lineHeight: 40,\n                                width: 145,\n                              }}\n                            >\n                              {'Report: Scale'}\n                            </Grid>\n                            <Grid>\n                              <Button\n                                size=\"large\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                style={{\n                                  width: 108,\n                                  height: 27,\n                                  fontSize: 12,\n                                  fontFamily: 'Rubik',\n                                  fontStyle: 'normal',\n                                  fontWeight: 400,\n                                  background: '#FFFFFF',\n                                  border: '1px solid rgba(215, 223, 233, 0.4)',\n                                  borderRadius: 4,\n                                  color: 'Black',\n                                  filter:\n                                    'drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25))',\n                                }}\n                                classes={{\n                                  containedSizeLarge: classes.buttonFont,\n                                }}\n                                onClick={() => setDefaultSalesOutcomeScale()}\n                              >\n                                {_t_('Set Default')}\n                              </Button>\n                              <Button\n                                size=\"large\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                style={{\n                                  width: 106,\n                                  height: 27,\n                                  fontSize: 12,\n                                  fontFamily: 'Rubik',\n                                  fontStyle: 'normal',\n                                  fontWeight: 400,\n                                  marginLeft: 10,\n                                  filter:\n                                    'drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25))',\n                                }}\n                                classes={{\n                                  containedSizeLarge: classes.buttonFont,\n                                }}\n                                onClick={() => handleClickOpen()}\n                              >\n                                {_t_('Configure')}\n                              </Button>\n                            </Grid>\n                            <Grid>\n                              <FormGroup style={{ visibility: 'hidden' }}>\n                                <FormControlLabel\n                                  style={{ width: 150 }}\n                                  label=\"\"\n                                  control={<Checkbox color=\"primary\" />}\n                                />\n                              </FormGroup>\n                            </Grid>\n                          </Grid>\n                        ) : (\n                          <></>\n                        )}\n\n                        <Grid\n                          item\n                          style={{\n                            margin: 'auto',\n                            marginTop: persona === 'LEADER' ? 50 : 145,\n                            marginRight: 210,\n                          }}\n                        >\n                          <Button\n                            size=\"large\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            style={{\n                              width: 249,\n                              height: 46,\n                              fontSize: 20,\n                            }}\n                            classes={{ containedSizeLarge: classes.buttonFont }}\n                            onClick={() => saveUserSettings()}\n                          >\n                            {_t_('Save Changes')}\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item className={`${classes.hideWhenPrint}`}>\n                    <Sidebar />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Dialog\n        classes={{\n          paper: classes.dialog,\n        }}\n        open={open}\n        onClose={handleClose}\n        fullWidth\n        style={{\n          height: '100%',\n          justifyContent: 'center',\n          alignItems: 'center',\n          overflow: 'hidden',\n          alignContent: 'center',\n        }}\n        maxWidth=\"lg\"\n      >\n        <DialogContent\n          style={{\n            paddingTop: 0,\n            overflow: 'hidden',\n          }}\n        >\n          <OutcomeScales onClose={handleClose} />\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n\nexport default SettingsPage;\n"],"sourceRoot":""}