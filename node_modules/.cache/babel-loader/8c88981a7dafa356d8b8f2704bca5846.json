{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport clsx from 'clsx';\nimport { useForkRef } from '@mui/material/utils';\nimport { unstable_useControlled as useControlled } from '@mui/utils';\nimport { PickersYear } from './PickersYear';\nimport { useUtils, useNow, useDefaultDates } from '../internals/hooks/useUtils';\nimport { WrapperVariantContext } from '../internals/components/wrappers/WrapperVariantContext';\nimport { getYearPickerUtilityClass } from './yearPickerClasses';\nimport { parseNonNullablePickerDate } from '../internals/utils/date-utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getYearPickerUtilityClass, classes);\n};\n\nfunction useYearPickerDefaultizedProps(props, name) {\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  return _extends({\n    disablePast: false,\n    disableFuture: false\n  }, themeProps, {\n    minDate: parseNonNullablePickerDate(utils, themeProps.minDate, defaultDates.minDate),\n    maxDate: parseNonNullablePickerDate(utils, themeProps.maxDate, defaultDates.maxDate)\n  });\n}\n\nconst YearPickerRoot = styled('div', {\n  name: 'MuiYearPicker',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  overflowY: 'auto',\n  height: '100%',\n  padding: '0 4px',\n  maxHeight: '304px'\n});\nexport const YearPicker = /*#__PURE__*/React.forwardRef(function YearPicker(inProps, ref) {\n  const now = useNow();\n  const theme = useTheme();\n  const utils = useUtils();\n  const props = useYearPickerDefaultizedProps(inProps, 'MuiYearPicker');\n  const {\n    autoFocus,\n    className,\n    date,\n    disabled,\n    disableFuture,\n    disablePast,\n    maxDate,\n    minDate,\n    onChange,\n    readOnly,\n    shouldDisableYear,\n    disableHighlightToday,\n    onYearFocus,\n    hasFocus,\n    onFocusedViewChange\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const selectedDateOrStartOfYear = React.useMemo(() => date != null ? date : utils.startOfYear(now), [now, utils, date]);\n  const currentYear = React.useMemo(() => {\n    if (date != null) {\n      return utils.getYear(date);\n    }\n\n    if (disableHighlightToday) {\n      return null;\n    }\n\n    return utils.getYear(now);\n  }, [now, date, utils, disableHighlightToday]);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  const selectedYearRef = React.useRef(null);\n  const [focusedYear, setFocusedYear] = React.useState(() => currentYear || utils.getYear(now));\n  const [internalHasFocus, setInternalHasFocus] = useControlled({\n    name: 'YearPicker',\n    state: 'hasFocus',\n    controlled: hasFocus,\n    default: autoFocus\n  });\n  const changeHasFocus = React.useCallback(newHasFocus => {\n    setInternalHasFocus(newHasFocus);\n\n    if (onFocusedViewChange) {\n      onFocusedViewChange(newHasFocus);\n    }\n  }, [setInternalHasFocus, onFocusedViewChange]);\n  const isYearDisabled = React.useCallback(dateToValidate => {\n    if (disablePast && utils.isBeforeYear(dateToValidate, now)) {\n      return true;\n    }\n\n    if (disableFuture && utils.isAfterYear(dateToValidate, now)) {\n      return true;\n    }\n\n    if (minDate && utils.isBeforeYear(dateToValidate, minDate)) {\n      return true;\n    }\n\n    if (maxDate && utils.isAfterYear(dateToValidate, maxDate)) {\n      return true;\n    }\n\n    if (shouldDisableYear && shouldDisableYear(dateToValidate)) {\n      return true;\n    }\n\n    return false;\n  }, [disableFuture, disablePast, maxDate, minDate, now, shouldDisableYear, utils]);\n\n  const handleYearSelection = (event, year, isFinish = 'finish') => {\n    if (readOnly) {\n      return;\n    }\n\n    const newDate = utils.setYear(selectedDateOrStartOfYear, year);\n    onChange(newDate, isFinish);\n  };\n\n  const focusYear = React.useCallback(year => {\n    if (!isYearDisabled(utils.setYear(selectedDateOrStartOfYear, year))) {\n      setFocusedYear(year);\n      changeHasFocus(true);\n      onYearFocus == null ? void 0 : onYearFocus(year);\n    }\n  }, [isYearDisabled, utils, selectedDateOrStartOfYear, changeHasFocus, onYearFocus]);\n  React.useEffect(() => {\n    setFocusedYear(prevFocusedYear => currentYear !== null && prevFocusedYear !== currentYear ? currentYear : prevFocusedYear);\n  }, [currentYear]);\n  const yearsInRow = wrapperVariant === 'desktop' ? 4 : 3;\n  const handleKeyDown = React.useCallback((event, year) => {\n    switch (event.key) {\n      case 'ArrowUp':\n        focusYear(year - yearsInRow);\n        event.preventDefault();\n        break;\n\n      case 'ArrowDown':\n        focusYear(year + yearsInRow);\n        event.preventDefault();\n        break;\n\n      case 'ArrowLeft':\n        focusYear(year + (theme.direction === 'ltr' ? -1 : 1));\n        event.preventDefault();\n        break;\n\n      case 'ArrowRight':\n        focusYear(year + (theme.direction === 'ltr' ? 1 : -1));\n        event.preventDefault();\n        break;\n\n      default:\n        break;\n    }\n  }, [focusYear, theme.direction, yearsInRow]);\n  const handleFocus = React.useCallback((event, year) => {\n    focusYear(year);\n  }, [focusYear]);\n  const handleBlur = React.useCallback((event, year) => {\n    if (focusedYear === year) {\n      changeHasFocus(false);\n    }\n  }, [focusedYear, changeHasFocus]);\n  const nowYear = utils.getYear(now);\n  const scrollerRef = React.useRef(null);\n  const handleRef = useForkRef(ref, scrollerRef);\n  React.useEffect(() => {\n    if (autoFocus || scrollerRef.current === null) {\n      return;\n    }\n\n    const tabbableButton = scrollerRef.current.querySelector('[tabindex=\"0\"]');\n\n    if (!tabbableButton) {\n      return;\n    } // Taken from useScroll in x-data-grid, but vertically centered\n\n\n    const offsetHeight = tabbableButton.offsetHeight;\n    const offsetTop = tabbableButton.offsetTop;\n    const clientHeight = scrollerRef.current.clientHeight;\n    const scrollTop = scrollerRef.current.scrollTop;\n    const elementBottom = offsetTop + offsetHeight;\n\n    if (offsetHeight > clientHeight || offsetTop < scrollTop) {\n      // Button already visible\n      return;\n    }\n\n    scrollerRef.current.scrollTop = elementBottom - clientHeight / 2 - offsetHeight / 2;\n  }, [autoFocus]);\n  return /*#__PURE__*/_jsx(YearPickerRoot, {\n    ref: handleRef,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    children: utils.getYearRange(minDate, maxDate).map(year => {\n      const yearNumber = utils.getYear(year);\n      const selected = yearNumber === currentYear;\n      return /*#__PURE__*/_jsx(PickersYear, {\n        selected: selected,\n        value: yearNumber,\n        onClick: handleYearSelection,\n        onKeyDown: handleKeyDown,\n        autoFocus: internalHasFocus && yearNumber === focusedYear,\n        ref: selected ? selectedYearRef : undefined,\n        disabled: disabled || isYearDisabled(year),\n        tabIndex: yearNumber === focusedYear ? 0 : -1,\n        onFocus: handleFocus,\n        onBlur: handleBlur,\n        \"aria-current\": nowYear === yearNumber ? 'date' : undefined,\n        children: utils.format(year, 'year')\n      }, utils.format(year, 'year'));\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? YearPicker.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  autoFocus: PropTypes.bool,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  date: PropTypes.any,\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true` future days are disabled.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n\n  /**\n   * If `true` past days are disabled.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n  hasFocus: PropTypes.bool,\n\n  /**\n   * Maximal selectable date. @DateIOType\n   */\n  maxDate: PropTypes.any,\n\n  /**\n   * Minimal selectable date. @DateIOType\n   */\n  minDate: PropTypes.any,\n  onChange: PropTypes.func.isRequired,\n  onFocusedDayChange: PropTypes.func,\n  onFocusedViewChange: PropTypes.func,\n  onYearFocus: PropTypes.func,\n  readOnly: PropTypes.bool,\n\n  /**\n   * Disable specific years dynamically.\n   * Works like `shouldDisableDate` but for year selection view @DateIOType.\n   * @template TDate\n   * @param {TDate} year The year to test.\n   * @returns {boolean} Returns `true` if the year should be disabled.\n   */\n  shouldDisableYear: PropTypes.func\n} : void 0;","map":{"version":3,"sources":["/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/node_modules/@mui/x-date-pickers/YearPicker/YearPicker.js"],"names":["_extends","React","PropTypes","useTheme","styled","useThemeProps","unstable_composeClasses","composeClasses","clsx","useForkRef","unstable_useControlled","useControlled","PickersYear","useUtils","useNow","useDefaultDates","WrapperVariantContext","getYearPickerUtilityClass","parseNonNullablePickerDate","jsx","_jsx","useUtilityClasses","ownerState","classes","slots","root","useYearPickerDefaultizedProps","props","name","utils","defaultDates","themeProps","disablePast","disableFuture","minDate","maxDate","YearPickerRoot","slot","overridesResolver","styles","display","flexDirection","flexWrap","overflowY","height","padding","maxHeight","YearPicker","forwardRef","inProps","ref","now","theme","autoFocus","className","date","disabled","onChange","readOnly","shouldDisableYear","disableHighlightToday","onYearFocus","hasFocus","onFocusedViewChange","selectedDateOrStartOfYear","useMemo","startOfYear","currentYear","getYear","wrapperVariant","useContext","selectedYearRef","useRef","focusedYear","setFocusedYear","useState","internalHasFocus","setInternalHasFocus","state","controlled","default","changeHasFocus","useCallback","newHasFocus","isYearDisabled","dateToValidate","isBeforeYear","isAfterYear","handleYearSelection","event","year","isFinish","newDate","setYear","focusYear","useEffect","prevFocusedYear","yearsInRow","handleKeyDown","key","preventDefault","direction","handleFocus","handleBlur","nowYear","scrollerRef","handleRef","current","tabbableButton","querySelector","offsetHeight","offsetTop","clientHeight","scrollTop","elementBottom","children","getYearRange","map","yearNumber","selected","value","onClick","onKeyDown","undefined","tabIndex","onFocus","onBlur","format","process","env","NODE_ENV","propTypes","bool","object","string","any","func","isRequired","onFocusedDayChange"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport clsx from 'clsx';\nimport { useForkRef } from '@mui/material/utils';\nimport { unstable_useControlled as useControlled } from '@mui/utils';\nimport { PickersYear } from './PickersYear';\nimport { useUtils, useNow, useDefaultDates } from '../internals/hooks/useUtils';\nimport { WrapperVariantContext } from '../internals/components/wrappers/WrapperVariantContext';\nimport { getYearPickerUtilityClass } from './yearPickerClasses';\nimport { parseNonNullablePickerDate } from '../internals/utils/date-utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getYearPickerUtilityClass, classes);\n};\n\nfunction useYearPickerDefaultizedProps(props, name) {\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  return _extends({\n    disablePast: false,\n    disableFuture: false\n  }, themeProps, {\n    minDate: parseNonNullablePickerDate(utils, themeProps.minDate, defaultDates.minDate),\n    maxDate: parseNonNullablePickerDate(utils, themeProps.maxDate, defaultDates.maxDate)\n  });\n}\n\nconst YearPickerRoot = styled('div', {\n  name: 'MuiYearPicker',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  overflowY: 'auto',\n  height: '100%',\n  padding: '0 4px',\n  maxHeight: '304px'\n});\nexport const YearPicker = /*#__PURE__*/React.forwardRef(function YearPicker(inProps, ref) {\n  const now = useNow();\n  const theme = useTheme();\n  const utils = useUtils();\n  const props = useYearPickerDefaultizedProps(inProps, 'MuiYearPicker');\n  const {\n    autoFocus,\n    className,\n    date,\n    disabled,\n    disableFuture,\n    disablePast,\n    maxDate,\n    minDate,\n    onChange,\n    readOnly,\n    shouldDisableYear,\n    disableHighlightToday,\n    onYearFocus,\n    hasFocus,\n    onFocusedViewChange\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const selectedDateOrStartOfYear = React.useMemo(() => date != null ? date : utils.startOfYear(now), [now, utils, date]);\n  const currentYear = React.useMemo(() => {\n    if (date != null) {\n      return utils.getYear(date);\n    }\n\n    if (disableHighlightToday) {\n      return null;\n    }\n\n    return utils.getYear(now);\n  }, [now, date, utils, disableHighlightToday]);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  const selectedYearRef = React.useRef(null);\n  const [focusedYear, setFocusedYear] = React.useState(() => currentYear || utils.getYear(now));\n  const [internalHasFocus, setInternalHasFocus] = useControlled({\n    name: 'YearPicker',\n    state: 'hasFocus',\n    controlled: hasFocus,\n    default: autoFocus\n  });\n  const changeHasFocus = React.useCallback(newHasFocus => {\n    setInternalHasFocus(newHasFocus);\n\n    if (onFocusedViewChange) {\n      onFocusedViewChange(newHasFocus);\n    }\n  }, [setInternalHasFocus, onFocusedViewChange]);\n  const isYearDisabled = React.useCallback(dateToValidate => {\n    if (disablePast && utils.isBeforeYear(dateToValidate, now)) {\n      return true;\n    }\n\n    if (disableFuture && utils.isAfterYear(dateToValidate, now)) {\n      return true;\n    }\n\n    if (minDate && utils.isBeforeYear(dateToValidate, minDate)) {\n      return true;\n    }\n\n    if (maxDate && utils.isAfterYear(dateToValidate, maxDate)) {\n      return true;\n    }\n\n    if (shouldDisableYear && shouldDisableYear(dateToValidate)) {\n      return true;\n    }\n\n    return false;\n  }, [disableFuture, disablePast, maxDate, minDate, now, shouldDisableYear, utils]);\n\n  const handleYearSelection = (event, year, isFinish = 'finish') => {\n    if (readOnly) {\n      return;\n    }\n\n    const newDate = utils.setYear(selectedDateOrStartOfYear, year);\n    onChange(newDate, isFinish);\n  };\n\n  const focusYear = React.useCallback(year => {\n    if (!isYearDisabled(utils.setYear(selectedDateOrStartOfYear, year))) {\n      setFocusedYear(year);\n      changeHasFocus(true);\n      onYearFocus == null ? void 0 : onYearFocus(year);\n    }\n  }, [isYearDisabled, utils, selectedDateOrStartOfYear, changeHasFocus, onYearFocus]);\n  React.useEffect(() => {\n    setFocusedYear(prevFocusedYear => currentYear !== null && prevFocusedYear !== currentYear ? currentYear : prevFocusedYear);\n  }, [currentYear]);\n  const yearsInRow = wrapperVariant === 'desktop' ? 4 : 3;\n  const handleKeyDown = React.useCallback((event, year) => {\n    switch (event.key) {\n      case 'ArrowUp':\n        focusYear(year - yearsInRow);\n        event.preventDefault();\n        break;\n\n      case 'ArrowDown':\n        focusYear(year + yearsInRow);\n        event.preventDefault();\n        break;\n\n      case 'ArrowLeft':\n        focusYear(year + (theme.direction === 'ltr' ? -1 : 1));\n        event.preventDefault();\n        break;\n\n      case 'ArrowRight':\n        focusYear(year + (theme.direction === 'ltr' ? 1 : -1));\n        event.preventDefault();\n        break;\n\n      default:\n        break;\n    }\n  }, [focusYear, theme.direction, yearsInRow]);\n  const handleFocus = React.useCallback((event, year) => {\n    focusYear(year);\n  }, [focusYear]);\n  const handleBlur = React.useCallback((event, year) => {\n    if (focusedYear === year) {\n      changeHasFocus(false);\n    }\n  }, [focusedYear, changeHasFocus]);\n  const nowYear = utils.getYear(now);\n  const scrollerRef = React.useRef(null);\n  const handleRef = useForkRef(ref, scrollerRef);\n  React.useEffect(() => {\n    if (autoFocus || scrollerRef.current === null) {\n      return;\n    }\n\n    const tabbableButton = scrollerRef.current.querySelector('[tabindex=\"0\"]');\n\n    if (!tabbableButton) {\n      return;\n    } // Taken from useScroll in x-data-grid, but vertically centered\n\n\n    const offsetHeight = tabbableButton.offsetHeight;\n    const offsetTop = tabbableButton.offsetTop;\n    const clientHeight = scrollerRef.current.clientHeight;\n    const scrollTop = scrollerRef.current.scrollTop;\n    const elementBottom = offsetTop + offsetHeight;\n\n    if (offsetHeight > clientHeight || offsetTop < scrollTop) {\n      // Button already visible\n      return;\n    }\n\n    scrollerRef.current.scrollTop = elementBottom - clientHeight / 2 - offsetHeight / 2;\n  }, [autoFocus]);\n  return /*#__PURE__*/_jsx(YearPickerRoot, {\n    ref: handleRef,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    children: utils.getYearRange(minDate, maxDate).map(year => {\n      const yearNumber = utils.getYear(year);\n      const selected = yearNumber === currentYear;\n      return /*#__PURE__*/_jsx(PickersYear, {\n        selected: selected,\n        value: yearNumber,\n        onClick: handleYearSelection,\n        onKeyDown: handleKeyDown,\n        autoFocus: internalHasFocus && yearNumber === focusedYear,\n        ref: selected ? selectedYearRef : undefined,\n        disabled: disabled || isYearDisabled(year),\n        tabIndex: yearNumber === focusedYear ? 0 : -1,\n        onFocus: handleFocus,\n        onBlur: handleBlur,\n        \"aria-current\": nowYear === yearNumber ? 'date' : undefined,\n        children: utils.format(year, 'year')\n      }, utils.format(year, 'year'));\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? YearPicker.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  autoFocus: PropTypes.bool,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  date: PropTypes.any,\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true` future days are disabled.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n\n  /**\n   * If `true` past days are disabled.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n  hasFocus: PropTypes.bool,\n\n  /**\n   * Maximal selectable date. @DateIOType\n   */\n  maxDate: PropTypes.any,\n\n  /**\n   * Minimal selectable date. @DateIOType\n   */\n  minDate: PropTypes.any,\n  onChange: PropTypes.func.isRequired,\n  onFocusedDayChange: PropTypes.func,\n  onFocusedViewChange: PropTypes.func,\n  onYearFocus: PropTypes.func,\n  readOnly: PropTypes.bool,\n\n  /**\n   * Disable specific years dynamically.\n   * Works like `shouldDisableDate` but for year selection view @DateIOType.\n   * @template TDate\n   * @param {TDate} year The year to test.\n   * @returns {boolean} Returns `true` if the year should be disabled.\n   */\n  shouldDisableYear: PropTypes.func\n} : void 0;"]},"metadata":{},"sourceType":"module"}