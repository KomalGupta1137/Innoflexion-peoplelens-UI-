{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Current/peoplelens_ui/src/components/organisms/PerformanceSummary/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useGlobalStyles } from '../../../plStyles';\nimport { COLORS } from '../../../plTheme';\nimport { _t_ } from '../../../utils/translation/translation';\nimport WidgetCard from '../../atoms/WidgetCard';\nimport SummaryStat from '../../molecules/SummaryStat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PerformanceSummary = ({\n  okrPerformance\n}) => {\n  _s();\n\n  const useStyles = makeStyles({\n    root: {\n      padding: 16,\n      height: 560\n    },\n    mainDiv: {\n      //  marginTop: '1.6rem',\n      borderBottom: '0.125rem solid ' + COLORS.BORDER_PRIMARY,\n      paddingBottom: '0.2rem'\n    },\n    rating: {\n      fontWeight: 500,\n      color: COLORS.PL_PRIMARY,\n      margin: '0.4rem 0'\n    },\n    value: {\n      backgroundColor: COLORS.HOMEPAGE_BACKGROUND,\n      lineHeight: '28px',\n      padding: '0 16px',\n      width: 92\n    },\n    insideDiv: {\n      marginTop: '1.2rem',\n      background: '#D9D9D9',\n      opacity: 0.6,\n      padding: 13\n    },\n    stats: {\n      marginTop: '0.4rem'\n    }\n  });\n  const classes = useStyles();\n  const globalClasses = useGlobalStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(WidgetCard, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: globalClasses.body1WidgetTitle,\n          style: {\n            paddingBottom: 2.5\n          },\n          children: _t_('Summary - Performance Review')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textPrimary\",\n          className: `${globalClasses.body1Light} ${classes.rating}`,\n          children: [\"Rating: Exceeds Expectation (\", okrPerformance === null || okrPerformance === void 0 ? void 0 : okrPerformance.rating, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), (okrPerformance === null || okrPerformance === void 0 ? void 0 : okrPerformance.competency) && (okrPerformance === null || okrPerformance === void 0 ? void 0 : okrPerformance.competency.map((element, id) => {\n          var _element$values, _element$values2;\n\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: id === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: 13\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"row\",\n                justify: \"flex-start\",\n                alignItems: \"center\",\n                className: classes.mainDiv,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  style: {\n                    flex: 50\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    className: globalClasses.h5Bold,\n                    color: \"textPrimary\",\n                    children: element === null || element === void 0 ? void 0 : element.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 25\n                  }, this)\n                }, 'Competency1', false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  style: {\n                    flex: 25\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    className: globalClasses.h5Bold,\n                    color: \"textPrimary\",\n                    children: \"Manager Score\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 25\n                  }, this)\n                }, 'ManagerScore', false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  style: {\n                    flex: 25\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    className: globalClasses.h5Bold,\n                    color: \"textPrimary\",\n                    children: \"Self Score\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 25\n                  }, this)\n                }, 'selfScore', false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 23\n                }, this)]\n              }, element === null || element === void 0 ? void 0 : element.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"column\",\n                spacing: 2,\n                className: classes.stats,\n                children: element && element.values && ((_element$values = element.values) === null || _element$values === void 0 ? void 0 : _element$values.map((innerElement, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(SummaryStat, {\n                    title: String(index + 1) + '. ' + String(innerElement === null || innerElement === void 0 ? void 0 : innerElement.title),\n                    managerScore: innerElement === null || innerElement === void 0 ? void 0 : innerElement.managerScore,\n                    selfScore: innerElement === null || innerElement === void 0 ? void 0 : innerElement.selfScore,\n                    demoMode: false\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 29\n                  }, this)\n                }, innerElement === null || innerElement === void 0 ? void 0 : innerElement.title, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 27\n                }, this)))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.insideDiv,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textPrimary\",\n                className: globalClasses.h5Bold,\n                children: element === null || element === void 0 ? void 0 : element.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"column\",\n                spacing: 2,\n                className: classes.stats,\n                children: element === null || element === void 0 ? void 0 : (_element$values2 = element.values) === null || _element$values2 === void 0 ? void 0 : _element$values2.map((innerElement, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(SummaryStat, {\n                    title: String(index + 1) + '. ' + String(innerElement === null || innerElement === void 0 ? void 0 : innerElement.title),\n                    managerScore: innerElement === null || innerElement === void 0 ? void 0 : innerElement.managerScore,\n                    selfScore: innerElement === null || innerElement === void 0 ? void 0 : innerElement.selfScore,\n                    demoMode: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 27\n                  }, this)\n                }, 'dvelopmentneeds' + String(index), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 25\n                }, this))\n              }, 'developmentneedss', false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)\n          }, void 0, false);\n        }))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(PerformanceSummary, \"+MxyZrEJ6fwBdqLdd4iSUSEX3hM=\", true, function () {\n  return [useGlobalStyles];\n});\n\n_c = PerformanceSummary;\nexport default PerformanceSummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"PerformanceSummary\");","map":{"version":3,"sources":["/home/komal/Documents/Current/peoplelens_ui/src/components/organisms/PerformanceSummary/index.tsx"],"names":["Grid","makeStyles","Typography","React","useGlobalStyles","COLORS","_t_","WidgetCard","SummaryStat","PerformanceSummary","okrPerformance","useStyles","root","padding","height","mainDiv","borderBottom","BORDER_PRIMARY","paddingBottom","rating","fontWeight","color","PL_PRIMARY","margin","value","backgroundColor","HOMEPAGE_BACKGROUND","lineHeight","width","insideDiv","marginTop","background","opacity","stats","classes","globalClasses","body1WidgetTitle","body1Light","competency","map","element","id","flex","h5Bold","name","values","innerElement","index","String","title","managerScore","selfScore"],"mappings":"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","sourcesContent":["import { Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useGlobalStyles } from '../../../plStyles';\r\nimport { COLORS } from '../../../plTheme';\r\nimport { _t_ } from '../../../utils/translation/translation';\r\nimport WidgetCard from '../../atoms/WidgetCard';\r\nimport OKRStat from '../../molecules/OKRStat';\r\nimport SummaryStat from '../../molecules/SummaryStat';\r\nimport { RepDashboardData_RepDashboardData_okrSummary as summaryData } from '../../../gql/types';\r\ninterface PerformanceSummaryProps {\r\n  okrPerformance: summaryData | null | undefined;\r\n}\r\n\r\nconst PerformanceSummary: React.FC<PerformanceSummaryProps> = ({\r\n  okrPerformance,\r\n}: PerformanceSummaryProps) => {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      padding: 16,\r\n      height: 560,\r\n    },\r\n    mainDiv: {\r\n      //  marginTop: '1.6rem',\r\n      borderBottom: '0.125rem solid ' + COLORS.BORDER_PRIMARY,\r\n      paddingBottom: '0.2rem',\r\n    },\r\n    rating: {\r\n      fontWeight: 500,\r\n      color: COLORS.PL_PRIMARY,\r\n      margin: '0.4rem 0',\r\n    },\r\n    value: {\r\n      backgroundColor: COLORS.HOMEPAGE_BACKGROUND,\r\n      lineHeight: '28px',\r\n      padding: '0 16px',\r\n      width: 92,\r\n    },\r\n    insideDiv: {\r\n      marginTop: '1.2rem',\r\n      background: '#D9D9D9',\r\n      opacity: 0.6,\r\n      padding: 13\r\n    },\r\n    stats: {\r\n      marginTop: '0.4rem',\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const globalClasses = useGlobalStyles();\r\n  return (\r\n    <>\r\n      <WidgetCard>\r\n        <Grid className={classes.root}>\r\n          <Typography\r\n            className={globalClasses.body1WidgetTitle}\r\n            style={{ paddingBottom: 2.5 }}\r\n          >\r\n            {_t_('Summary - Performance Review')}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            className={`${globalClasses.body1Light} ${classes.rating}`}\r\n          >\r\n            Rating: Exceeds Expectation ({okrPerformance?.rating})\r\n          </Typography>\r\n          {okrPerformance?.competency &&\r\n            okrPerformance?.competency.map((element, id) => (\r\n              <>\r\n                {id === 0 ? (\r\n                  <div style={{ padding: 13 }}>\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"flex-start\"\r\n                      alignItems=\"center\"\r\n                      className={classes.mainDiv}\r\n                      key={element?.name}\r\n                    >\r\n                      <Grid item style={{ flex: 50 }} key={'Competency1'}>\r\n                        <Typography\r\n                          className={globalClasses.h5Bold}\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {element?.name}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item style={{ flex: 25 }} key={'ManagerScore'}>\r\n                        <Typography\r\n                          className={globalClasses.h5Bold}\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          Manager Score\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item style={{ flex: 25 }} key={'selfScore'}>\r\n                        <Typography\r\n                          className={globalClasses.h5Bold}\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          Self Score\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid\r\n                      container\r\n                      direction=\"column\"\r\n                      spacing={2}\r\n                      className={classes.stats}\r\n                    >\r\n                      {element &&\r\n                        element.values &&\r\n                        element.values?.map((innerElement, index) => (\r\n                          <Grid item key={innerElement?.title}>\r\n                            <SummaryStat\r\n                              title={\r\n                                String(index + 1) +\r\n                                '. ' +\r\n                                String(innerElement?.title)\r\n                              }\r\n                              managerScore={innerElement?.managerScore}\r\n                              selfScore={innerElement?.selfScore}\r\n                            demoMode={false}\r\n                            />\r\n                          </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                  </div>\r\n                ) : (\r\n                  <div className={classes.insideDiv}>\r\n                    <Typography\r\n                      color=\"textPrimary\"\r\n                      className={globalClasses.h5Bold}\r\n                    >\r\n                      {element?.name}\r\n                    </Typography>\r\n                    <Grid\r\n                      container\r\n                      direction=\"column\"\r\n                      spacing={2}\r\n                      className={classes.stats}\r\n                      key={'developmentneedss'}\r\n                    >\r\n                      {element?.values?.map((innerElement, index) => (\r\n                        <Grid item key={'dvelopmentneeds' + String(index)}>\r\n                          <SummaryStat\r\n                            title={\r\n                              String(index + 1) +\r\n                              '. ' +\r\n                              String(innerElement?.title)\r\n                            }\r\n                            managerScore={innerElement?.managerScore}\r\n                            selfScore={innerElement?.selfScore}\r\n                            demoMode={true}\r\n                          />\r\n                        </Grid>\r\n                      ))}\r\n                    </Grid>\r\n                  </div>\r\n                )}\r\n              </>\r\n            ))}\r\n        </Grid>\r\n      </WidgetCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PerformanceSummary;\r\n"]},"metadata":{},"sourceType":"module"}