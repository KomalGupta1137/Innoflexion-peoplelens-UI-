{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/molecules/AttritionRate/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Grid, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { COLORS } from '../../../plTheme';\nimport { _t_ } from '../../../utils/translation/translation';\nimport { _n_ } from '../../../utils/numerals/numerals';\nimport { useGlobalStyles } from '../../../plStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AttritionRate = ({\n  currVal,\n  prevVal\n}) => {\n  _s();\n\n  const isPositive = currVal !== null && currVal !== undefined && prevVal !== null && prevVal !== undefined && prevVal - currVal >= 0 ? true : false;\n  const useStyles = makeStyles({\n    root: {\n      height: '100%',\n      // padding: matches ? '20px 0px 0px 14px' : '20px 0px 0px 14px',\n      padding: '20px 0px 0px 14px' // width: matches ? 110 : 190,\n\n    },\n    heading: {\n      color: COLORS.TEXT_LOW_EMPHASIS,\n      textTransform: 'uppercase'\n    },\n    currValue: {\n      color: COLORS.TEXT_HIGH_EMPHASIS,\n      marginTop: 30,\n      marginBottom: 14,\n      fontWeight: 400\n    },\n    prevValue: {\n      color: isPositive ? COLORS.GENERAL_CHART_GREEN : COLORS.ARROW_PRIMARY_COLOR,\n      marginTop: 40,\n      marginBottom: 14,\n      fontWeight: 400\n    },\n    arrow: {\n      fontSize: 20,\n      color: isPositive ? '#2DCA73' : '#FF0B37'\n    },\n    arrowGrid: {\n      marginTop: 30,\n      marginLeft: 12,\n      // matches ? 5 : 12,\n      transform: 'translateY(8px)'\n    },\n    titleDiv: {\n      width: 120\n    }\n  });\n  const classes = useStyles();\n\n  const currRate = currVal !== null && currVal !== undefined && _n_(currVal, '0.0');\n\n  const diffRate = currVal !== null && currVal !== undefined && prevVal !== null && prevVal !== undefined && _n_(Math.abs(currVal - prevVal), '0.0');\n\n  const diff = currVal !== null && currVal !== undefined && prevVal !== null && prevVal !== undefined && _n_(Math.abs(currVal - prevVal), '0.0');\n\n  const globalClasses = useGlobalStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      flexWrap: \"wrap\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        alignItems: \"flex-start\",\n        className: classes.root,\n        \"data-testid\": \"attritionRate\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.titleDiv,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: globalClasses.body1WidgetTitle,\n            children: _t_('Attrition Rate')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h1\",\n              className: classes.currValue,\n              \"data-testid\": \"Attrition_currentRate\",\n              children: [currRate, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            className: classes.arrowGrid,\n            children: Number(diff) > 0 && (isPositive ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.arrow,\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.arrow,\n              children: \"\\u25B4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.prevValue,\n              \"data-testid\": \"Attrition_diffRate\",\n              children: [diffRate, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AttritionRate, \"+MxyZrEJ6fwBdqLdd4iSUSEX3hM=\", true, function () {\n  return [useGlobalStyles];\n});\n\n_c = AttritionRate;\nexport default AttritionRate;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttritionRate\");","map":{"version":3,"sources":["/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/molecules/AttritionRate/index.tsx"],"names":["Box","Grid","makeStyles","Typography","React","COLORS","_t_","_n_","useGlobalStyles","AttritionRate","currVal","prevVal","isPositive","undefined","useStyles","root","height","padding","heading","color","TEXT_LOW_EMPHASIS","textTransform","currValue","TEXT_HIGH_EMPHASIS","marginTop","marginBottom","fontWeight","prevValue","GENERAL_CHART_GREEN","ARROW_PRIMARY_COLOR","arrow","fontSize","arrowGrid","marginLeft","transform","titleDiv","width","classes","currRate","diffRate","Math","abs","diff","globalClasses","body1WidgetTitle","Number"],"mappings":"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","sourcesContent":["import { Box, Grid, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { COLORS } from '../../../plTheme';\nimport { _t_ } from '../../../utils/translation/translation';\nimport { _n_ } from '../../../utils/numerals/numerals';\nimport { useGlobalStyles } from '../../../plStyles';\n\nexport interface AttritionRateProps {\n  currVal?: number | null;\n  prevVal?: number | null;\n}\n\nconst AttritionRate: React.FC<AttritionRateProps> = ({\n  currVal,\n  prevVal,\n}: AttritionRateProps) => {\n  const isPositive =\n    currVal !== null &&\n    currVal !== undefined &&\n    prevVal !== null &&\n    prevVal !== undefined &&\n    prevVal - currVal >= 0\n      ? true\n      : false;\n\n  const useStyles = makeStyles({\n    root: {\n      height: '100%',\n      // padding: matches ? '20px 0px 0px 14px' : '20px 0px 0px 14px',\n      padding: '20px 0px 0px 14px',\n      // width: matches ? 110 : 190,\n    },\n    heading: {\n      color: COLORS.TEXT_LOW_EMPHASIS,\n      textTransform: 'uppercase',\n    },\n    currValue: {\n      color: COLORS.TEXT_HIGH_EMPHASIS,\n      marginTop: 30,\n      marginBottom: 14,\n      fontWeight: 400,\n    },\n    prevValue: {\n      color: isPositive\n        ? COLORS.GENERAL_CHART_GREEN\n        : COLORS.ARROW_PRIMARY_COLOR,\n      marginTop: 40,\n      marginBottom: 14,\n      fontWeight: 400,\n    },\n    arrow: {\n      fontSize: 20,\n      color: isPositive ? '#2DCA73' : '#FF0B37',\n    },\n    arrowGrid: {\n      marginTop: 30,\n      marginLeft: 12, // matches ? 5 : 12,\n      transform: 'translateY(8px)',\n    },\n    titleDiv: {\n      width: 120,\n    },\n  });\n\n  const classes = useStyles();\n\n  const currRate =\n    currVal !== null && currVal !== undefined && _n_(currVal, '0.0');\n\n  const diffRate =\n    currVal !== null &&\n    currVal !== undefined &&\n    prevVal !== null &&\n    prevVal !== undefined &&\n    _n_(Math.abs(currVal - prevVal), '0.0');\n\n  const diff =\n    currVal !== null &&\n    currVal !== undefined &&\n    prevVal !== null &&\n    prevVal !== undefined &&\n    _n_(Math.abs(currVal - prevVal), '0.0');\n\n  const globalClasses = useGlobalStyles();\n  return (\n    <>\n      <Box flexWrap=\"wrap\">\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"flex-start\"\n          className={classes.root}\n          data-testid=\"attritionRate\"\n        >\n          <Grid item className={classes.titleDiv}>\n            <Typography className={globalClasses.body1WidgetTitle}>\n              {_t_('Attrition Rate')}\n            </Typography>\n          </Grid>\n          <Grid item container spacing={2}>\n            <Grid item>\n              <Typography\n                variant=\"h1\"\n                className={classes.currValue}\n                data-testid=\"Attrition_currentRate\"\n              >\n                {currRate}%\n              </Typography>\n            </Grid>\n            <Grid item className={classes.arrowGrid}>\n              {Number(diff) > 0 &&\n                (isPositive ? (\n                  <span className={classes.arrow}>&#9660;</span>\n                ) : (\n                  <span className={classes.arrow}>&#9652;</span>\n                ))}\n            </Grid>\n            <Grid item>\n              <Typography\n                variant=\"h5\"\n                className={classes.prevValue}\n                data-testid=\"Attrition_diffRate\"\n              >\n                {diffRate}%\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </>\n  );\n};\n\nexport default AttritionRate;\n"]},"metadata":{},"sourceType":"module"}