{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Current/peoplelens_ui/src/components/molecules/TimeAllocation/index.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable prettier/prettier */\n\n/* eslint-disable @typescript-eslint/restrict-plus-operands */\n\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n/* eslint-disable @typescript-eslint/no-unnecessary-type-assertion */\n\n/* eslint-disable camelcase */\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport React, { useEffect } from 'react';\nimport { useGlobalStyles } from '../../../plStyles';\nimport { COLORS, plTheme } from '../../../plTheme';\nimport WidgetCard from '../../atoms/WidgetCard';\nimport { sortBy } from 'lodash-es';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TimeAllocation = ({\n  startDate,\n  endDate,\n  height,\n  week\n}) => {\n  _s();\n\n  const [chartData, setChartData] = React.useState([]);\n  const [, setIncomingData] = React.useState([]);\n  const [data, setData] = React.useState([]);\n\n  const getTimeAllocation = async () => {\n    const fetchResponse = await fetch(`${process.env.REACT_APP_API_BASE || ''}/api/getTimeAllocation`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        tenantId: localStorage.getItem('tenantId'),\n        userId: localStorage.getItem('userId'),\n        startDate: new Date(new Date(startDate).setUTCHours(0, 0, 0, 0)).toUTCString(),\n        endDate: new Date(new Date(endDate).setUTCHours(23, 59, 59, 999)).toUTCString(),\n        week: week\n      })\n    });\n    const jsonData = await fetchResponse.json();\n    setData(jsonData);\n  };\n\n  useEffect(() => {\n    void getTimeAllocation();\n  }, [startDate, endDate]);\n  useEffect(() => {\n    if (data) {\n      setIncomingData(data);\n    }\n  }, [data]);\n  useEffect(() => {\n    let productMeetings = null;\n    let customerMeetings = null;\n    let total = null;\n    let internalTeamMeetings = null;\n    let productPercentage = null;\n    let customerPercentage = null;\n    let teamMeetingsPercentage = null;\n    let othersPercentage = null;\n\n    if (data != null) {\n      productMeetings = data === null || data === void 0 ? void 0 : data.productMeetings;\n      total = data === null || data === void 0 ? void 0 : data.total;\n      customerMeetings = data === null || data === void 0 ? void 0 : data.customerMeetings;\n      internalTeamMeetings = data === null || data === void 0 ? void 0 : data.internalTeamMeetings;\n      productPercentage = productMeetings / total * 100;\n      customerPercentage = customerMeetings / total * 100;\n      teamMeetingsPercentage = internalTeamMeetings / total * 100;\n      othersPercentage = 100 - productPercentage - customerPercentage - teamMeetingsPercentage;\n    }\n\n    const tempChartData = [];\n    productPercentage !== 0 && tempChartData.push({\n      name: 'Product Team ',\n      y: productPercentage\n    });\n    teamMeetingsPercentage !== 0 && tempChartData.push({\n      name: 'Internal Team Meetings',\n      y: teamMeetingsPercentage\n    });\n    customerPercentage !== 0 && tempChartData.push({\n      name: 'Customers',\n      y: customerPercentage\n    });\n    othersPercentage !== 0 && tempChartData.push({\n      name: 'Others',\n      y: othersPercentage\n    });\n    const sortedTempData = sortBy(tempChartData, 'y').reverse();\n    setChartData(sortedTempData);\n  }, [data]);\n  const useStyles = makeStyles({\n    root: {\n      padding: 16,\n      height: height\n    },\n    chartDiv: {\n      marginTop: '0.2rem'\n    }\n  });\n  const classes = useStyles();\n  const globalClasses = useGlobalStyles();\n  const CHART_COLORS = [COLORS.MAIN_BLUE_PRESSED, COLORS.MAIN_HUE_2, COLORS.MAIN_BLUE_HOVER, COLORS.MAIN_HOVER_LIGHT];\n  const options = {\n    chart: {\n      type: 'pie',\n      plotBackgroundColor: null,\n      backgroundColor: 'transparent',\n      plotBorderWidth: null,\n      plotShadow: false,\n      height: 220,\n      events: function click() {\n        return;\n      },\n      style: {\n        fontFamily: plTheme.typography.fontFamily,\n        // \"Rubik\",\n        fontSize: '14px',\n        fontWeight: 300\n      },\n      marginRight: -30,\n      marginLeft: -60\n    },\n    title: null,\n    tooltip: {\n      backgroundColor: '#fff',\n      borderColor: '#F6F6F6',\n      borderWidth: 2,\n      borderRadius: 4,\n      shadow: false,\n      shape: 'rect',\n      enabled: true,\n      pointFormat: '<b>{series.name}</b>: <b>{point.percentage:.1f}%</b>',\n      useHTML: true,\n      followPointer: false,\n      formatter: function () {\n        // @ts-ignore\n        const name = // @ts-ignore\n        this && this.point && this.point.name ? // @ts-ignore\n        this.point.name.toString() : '';\n        const value = // @ts-ignore\n        this && this.point && this.point.y ? // @ts-ignore\n        this.point.y.toString() : ''; // @ts-ignore\n\n        let tooltip = ``;\n        tooltip += `<span  style=\"font-family: Rubik; font-size: 12px; text-transform: uppercase;\"> ` + name + `</span>`;\n        tooltip += `<br>`;\n        tooltip += '<span style=\"font-family: Rubik; font-size: 12px; font-weight: 500; text-transform: uppercase;\">' + Math.round(+value) + `% time</span>`;\n        return tooltip;\n      }\n    },\n    credits: {\n      enabled: false\n    },\n    accessibility: {\n      point: {\n        valueSuffix: '%'\n      }\n    },\n    plotOptions: {\n      pie: {\n        colors: CHART_COLORS,\n        allowPointSelect: false,\n        cursor: 'pointer',\n        shadow: false,\n        borderWidth: 0,\n        showInLegend: true,\n        states: {\n          hover: {\n            brightness: 0\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        point: {\n          events: {\n            legendItemClick: function () {\n              // this.slice(null);\n              return false;\n            }\n          }\n        },\n        series: {\n          select: {\n            enabled: false\n          },\n          events: {\n            legendItemClick: function () {\n              return false;\n            }\n          }\n        }\n      },\n      series: {\n        allowPointSelect: false,\n        states: {\n          inactive: {\n            opacity: 1\n          },\n          active: {\n            opacity: '100%',\n            borderColor: 'transparent'\n          },\n          hover: {\n            halo: {\n              opacity: 1,\n              attributes: {\n                fill: 'transparent',\n                'stroke-width': 0,\n                stroke: 'transparent'\n              }\n            }\n          }\n        }\n      }\n    },\n    legend: {\n      margin: 0,\n      fontSize: 12,\n      fontWeight: 300,\n      layout: 'vertical',\n      alignColumns: false,\n      align: 'right',\n      verticalAlign: 'middle',\n      itemMarginTop: 10,\n      // symbolHeight: ,\n      // symbolWidth: 24,\n      itemStyle: {\n        fontWeight: 300,\n        lineHeight: 16 // verticalAlign: 'top',\n\n      },\n      labelFormat: '<span style=\"font-family: Rubik; font-size: 16px;\">{name}</span>'\n    },\n    series: [{\n      innerSize: '65%',\n      name: 'Time Allocation',\n      dataSorting: {\n        enabled: true,\n        sortKey: 'y'\n      },\n      data: chartData\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(WidgetCard, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justify: \"flex-start\",\n          alignItems: \"flex-start\",\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: globalClasses.body1WidgetTitle,\n              children: \"Time Allocation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              color: \"textPrimary\",\n              children: [moment(startDate).utc().format('MMM D'), \" -\", ' ', moment(endDate).utc().format('MMM D')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: classes.chartDiv,\n          children: (data === null || data === void 0 ? void 0 : data.total) === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(HighchartsReact, {\n            highcharts: Highcharts,\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(TimeAllocation, \"EwRBcV/OElKmEJNEAY4ZDeEmcHo=\", true, function () {\n  return [useGlobalStyles];\n});\n\n_c = TimeAllocation;\nexport default TimeAllocation;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeAllocation\");","map":{"version":3,"sources":["/home/komal/Documents/Current/peoplelens_ui/src/components/molecules/TimeAllocation/index.tsx"],"names":["Grid","makeStyles","Typography","Highcharts","HighchartsReact","React","useEffect","useGlobalStyles","COLORS","plTheme","WidgetCard","sortBy","moment","TimeAllocation","startDate","endDate","height","week","chartData","setChartData","useState","setIncomingData","data","setData","getTimeAllocation","fetchResponse","fetch","process","env","REACT_APP_API_BASE","method","headers","body","JSON","stringify","tenantId","localStorage","getItem","userId","Date","setUTCHours","toUTCString","jsonData","json","productMeetings","customerMeetings","total","internalTeamMeetings","productPercentage","customerPercentage","teamMeetingsPercentage","othersPercentage","tempChartData","push","name","y","sortedTempData","reverse","useStyles","root","padding","chartDiv","marginTop","classes","globalClasses","CHART_COLORS","MAIN_BLUE_PRESSED","MAIN_HUE_2","MAIN_BLUE_HOVER","MAIN_HOVER_LIGHT","options","chart","type","plotBackgroundColor","backgroundColor","plotBorderWidth","plotShadow","events","click","style","fontFamily","typography","fontSize","fontWeight","marginRight","marginLeft","title","tooltip","borderColor","borderWidth","borderRadius","shadow","shape","enabled","pointFormat","useHTML","followPointer","formatter","point","toString","value","Math","round","credits","accessibility","valueSuffix","plotOptions","pie","colors","allowPointSelect","cursor","showInLegend","states","hover","brightness","dataLabels","legendItemClick","series","select","inactive","opacity","active","halo","attributes","fill","stroke","legend","margin","layout","alignColumns","align","verticalAlign","itemMarginTop","itemStyle","lineHeight","labelFormat","innerSize","dataSorting","sortKey","body1WidgetTitle","utc","format"],"mappings":"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","sourcesContent":["/* eslint-disable prettier/prettier */\r\n/* eslint-disable @typescript-eslint/restrict-plus-operands */\r\n/* eslint-disable @typescript-eslint/no-unsafe-call */\r\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\r\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\n/* eslint-disable @typescript-eslint/ban-ts-comment */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n/* eslint-disable @typescript-eslint/no-unnecessary-type-assertion */\r\n/* eslint-disable camelcase */\r\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport React, { useEffect } from 'react';\r\nimport { useGlobalStyles } from '../../../plStyles';\r\nimport { COLORS, plTheme } from '../../../plTheme';\r\nimport WidgetCard from '../../atoms/WidgetCard';\r\nimport { sortBy } from 'lodash-es';\r\nimport moment from 'moment';\r\n\r\ninterface TimeAllocationProps {\r\n  startDate: string;\r\n  endDate: string;\r\n  height: number;\r\n  week: number;\r\n}\r\n\r\nconst TimeAllocation: React.FC<TimeAllocationProps> = ({\r\n  startDate,\r\n  endDate,\r\n  height,\r\n  week,\r\n}: TimeAllocationProps) => {\r\n  const [chartData, setChartData] = React.useState<\r\n    { name: string; y: number | null }[]\r\n  >([]);\r\n\r\n  const [, setIncomingData] = React.useState<any>([]);\r\n  const [data, setData] = React.useState<any>([]);\r\n\r\n  const getTimeAllocation = async () => {\r\n    const fetchResponse = await fetch(\r\n      `${process.env.REACT_APP_API_BASE || ''}/api/getTimeAllocation`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          tenantId: localStorage.getItem('tenantId'),\r\n          userId: localStorage.getItem('userId'),\r\n          startDate: new Date(\r\n            new Date(startDate).setUTCHours(0, 0, 0, 0),\r\n          ).toUTCString(),\r\n          endDate: new Date(\r\n            new Date(endDate).setUTCHours(23, 59, 59, 999),\r\n          ).toUTCString(),\r\n          week: week,\r\n        }),\r\n      },\r\n    );\r\n    const jsonData = await fetchResponse.json();\r\n    setData(jsonData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    void getTimeAllocation();\r\n  }, [startDate, endDate]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIncomingData(data);\r\n    }\r\n  }, [data]);\r\n  useEffect(() => {\r\n    let productMeetings = null;\r\n    let customerMeetings = null;\r\n    let total = null;\r\n    let internalTeamMeetings = null;\r\n    let productPercentage = null;\r\n    let customerPercentage = null;\r\n    let teamMeetingsPercentage = null;\r\n    let othersPercentage = null;\r\n\r\n    if (data != null) {\r\n      productMeetings = data?.productMeetings as number;\r\n      total = data?.total as number;\r\n      customerMeetings = data?.customerMeetings as number;\r\n      internalTeamMeetings = data?.internalTeamMeetings as number;\r\n      productPercentage = ((productMeetings / total) * 100) as number;\r\n      customerPercentage = ((customerMeetings / total) * 100) as number;\r\n      teamMeetingsPercentage = ((internalTeamMeetings / total) * 100) as number;\r\n      othersPercentage = (100 -\r\n        productPercentage -\r\n        customerPercentage -\r\n        teamMeetingsPercentage) as number;\r\n    }\r\n\r\n    const tempChartData: { name: string; y: number | null }[] = [];\r\n    productPercentage !== 0 &&\r\n      tempChartData.push({\r\n        name: 'Product Team ',\r\n        y: productPercentage,\r\n      });\r\n    teamMeetingsPercentage !== 0 &&\r\n      tempChartData.push({\r\n        name: 'Internal Team Meetings',\r\n        y: teamMeetingsPercentage,\r\n      });\r\n    customerPercentage !== 0 &&\r\n      tempChartData.push({\r\n        name: 'Customers',\r\n        y: customerPercentage,\r\n      });\r\n    othersPercentage !== 0 &&\r\n      tempChartData.push({\r\n        name: 'Others',\r\n        y: othersPercentage,\r\n      });\r\n\r\n    const sortedTempData = sortBy(tempChartData, 'y').reverse();\r\n\r\n    setChartData(sortedTempData);\r\n  }, [data]);\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      padding: 16,\r\n      height: height,\r\n    },\r\n    chartDiv: {\r\n      marginTop: '0.2rem',\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  const globalClasses = useGlobalStyles();\r\n\r\n  const CHART_COLORS = [\r\n    COLORS.MAIN_BLUE_PRESSED,\r\n    COLORS.MAIN_HUE_2,\r\n    COLORS.MAIN_BLUE_HOVER,\r\n    COLORS.MAIN_HOVER_LIGHT,\r\n  ];\r\n\r\n  const options = {\r\n    chart: {\r\n      type: 'pie',\r\n      plotBackgroundColor: null,\r\n      backgroundColor: 'transparent',\r\n      plotBorderWidth: null,\r\n      plotShadow: false,\r\n      height: 220,\r\n      events: function click() {\r\n        return;\r\n      },\r\n      style: {\r\n        fontFamily: plTheme.typography.fontFamily, // \"Rubik\",\r\n        fontSize: '14px',\r\n        fontWeight: 300,\r\n      },\r\n      marginRight: -30,\r\n      marginLeft: -60,\r\n    },\r\n    title: null,\r\n    tooltip: {\r\n      backgroundColor: '#fff',\r\n      borderColor: '#F6F6F6',\r\n      borderWidth: 2,\r\n      borderRadius: 4,\r\n      shadow: false,\r\n      shape: 'rect',\r\n      enabled: true,\r\n      pointFormat: '<b>{series.name}</b>: <b>{point.percentage:.1f}%</b>',\r\n      useHTML: true,\r\n      followPointer: false,\r\n      formatter: function () {\r\n        // @ts-ignore\r\n        const name =\r\n          // @ts-ignore\r\n          this && this.point && this.point.name\r\n            ? // @ts-ignore\r\n              this.point.name.toString()\r\n            : '';\r\n\r\n        const value =\r\n          // @ts-ignore\r\n          this && this.point && this.point.y\r\n            ? // @ts-ignore\r\n              this.point.y.toString()\r\n            : '';\r\n\r\n        // @ts-ignore\r\n        let tooltip = ``;\r\n        tooltip +=\r\n          `<span  style=\"font-family: Rubik; font-size: 12px; text-transform: uppercase;\"> ` +\r\n          name +\r\n          `</span>`;\r\n\r\n        tooltip += `<br>`;\r\n        tooltip +=\r\n          '<span style=\"font-family: Rubik; font-size: 12px; font-weight: 500; text-transform: uppercase;\">' +\r\n          Math.round(+value) +\r\n          `% time</span>`;\r\n        return tooltip;\r\n      },\r\n    },\r\n    credits: {\r\n      enabled: false,\r\n    },\r\n    accessibility: {\r\n      point: {\r\n        valueSuffix: '%',\r\n      },\r\n    },\r\n    plotOptions: {\r\n      pie: {\r\n        colors: CHART_COLORS,\r\n        allowPointSelect: false,\r\n        cursor: 'pointer',\r\n        shadow: false,\r\n        borderWidth: 0,\r\n        showInLegend: true,\r\n        states: {\r\n          hover: {\r\n            brightness: 0,\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        point: {\r\n          events: {\r\n            legendItemClick: function () {\r\n              // this.slice(null);\r\n              return false;\r\n            },\r\n          },\r\n        },\r\n        series: {\r\n          select: {\r\n            enabled: false,\r\n          },\r\n          events: {\r\n            legendItemClick: function () {\r\n              return false;\r\n            },\r\n          },\r\n        },\r\n      },\r\n\r\n      series: {\r\n        allowPointSelect: false,\r\n        states: {\r\n          inactive: {\r\n            opacity: 1,\r\n          },\r\n          active: {\r\n            opacity: '100%',\r\n            borderColor: 'transparent',\r\n          },\r\n          hover: {\r\n            halo: {\r\n              opacity: 1,\r\n              attributes: {\r\n                fill: 'transparent',\r\n                'stroke-width': 0,\r\n                stroke: 'transparent',\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    legend: {\r\n      margin: 0,\r\n      fontSize: 12,\r\n      fontWeight: 300,\r\n      layout: 'vertical',\r\n      alignColumns: false,\r\n      align: 'right',\r\n      verticalAlign: 'middle',\r\n      itemMarginTop: 10,\r\n      // symbolHeight: ,\r\n      // symbolWidth: 24,\r\n      itemStyle: {\r\n        fontWeight: 300,\r\n        lineHeight: 16,\r\n        // verticalAlign: 'top',\r\n      },\r\n\r\n      labelFormat:\r\n        '<span style=\"font-family: Rubik; font-size: 16px;\">{name}</span>',\r\n    },\r\n    series: [\r\n      {\r\n        innerSize: '65%',\r\n        name: 'Time Allocation',\r\n        dataSorting: {\r\n          enabled: true,\r\n          sortKey: 'y',\r\n        },\r\n        data: chartData,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <>\r\n      <WidgetCard>\r\n        <Grid className={classes.root}>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n            spacing={3}\r\n          >\r\n            <Grid item>\r\n              <Typography className={globalClasses.body1WidgetTitle}>\r\n                Time Allocation\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"subtitle1\" color=\"textPrimary\">\r\n                {moment(startDate).utc().format('MMM D')} -{' '}\r\n                {moment(endDate).utc().format('MMM D')}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid className={classes.chartDiv}>\r\n            {data?.total === 0 ? (\r\n              <p>No data</p>\r\n            ) : (\r\n              <HighchartsReact highcharts={Highcharts} options={options} />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </WidgetCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TimeAllocation;\r\n"]},"metadata":{},"sourceType":"module"}