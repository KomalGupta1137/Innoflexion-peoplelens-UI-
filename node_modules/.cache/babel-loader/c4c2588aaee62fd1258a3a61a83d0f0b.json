{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Current/peoplelens_ui/src/components/organisms/RepActivityBenchmarks/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport WidgetCard from '../../atoms/WidgetCard';\nimport Progressbar from '../../molecules/Progressbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RepActivityBenchmarks = ({\n  benchmarks\n}) => {\n  _s();\n\n  const useStyles = makeStyles({\n    root: {\n      padding: 16,\n      height: 728 // background: '#D9D9D9'\n\n    },\n    leftHeading: {\n      marginTop: 15\n    }\n  });\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(WidgetCard, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justify: \"center\",\n        alignItems: \"center\",\n        className: classes.root,\n        children: benchmarks.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.leftHeading,\n          children: /*#__PURE__*/_jsxDEV(Progressbar, {\n            name: item.name,\n            value1: item.value,\n            value2: item.value,\n            benchmarkValue: item.benchmarkValue ? item.benchmarkValue : 0,\n            percentage: item.percentage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(RepActivityBenchmarks, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", true);\n\n_c = RepActivityBenchmarks;\nexport default RepActivityBenchmarks;\n\nvar _c;\n\n$RefreshReg$(_c, \"RepActivityBenchmarks\");","map":{"version":3,"sources":["/home/komal/Documents/Current/peoplelens_ui/src/components/organisms/RepActivityBenchmarks/index.tsx"],"names":["Grid","makeStyles","React","WidgetCard","Progressbar","RepActivityBenchmarks","benchmarks","useStyles","root","padding","height","leftHeading","marginTop","classes","map","item","index","name","value","benchmarkValue","percentage"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;;;AAWA,MAAMC,qBAA2D,GAAG,CAAC;AACnEC,EAAAA;AADmE,CAAD,KAElC;AAAA;;AAChC,QAAMC,SAAS,GAAGN,UAAU,CAAC;AAC3BO,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,MAAM,EAAE,GAFJ,CAGJ;;AAHI,KADqB;AAM3BC,IAAAA,WAAW,EAAE;AACXC,MAAAA,SAAS,EAAE;AADA;AANc,GAAD,CAA5B;AAWA,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,sBACE;AAAA,2BACE,QAAC,UAAD;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,OAAO,EAAC,QAHV;AAIE,QAAA,UAAU,EAAC,QAJb;AAKE,QAAA,SAAS,EAAEM,OAAO,CAACL,IALrB;AAAA,kBAOGF,UAAU,CAACQ,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBACd,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAuB,UAAA,SAAS,EAAEH,OAAO,CAACF,WAA1C;AAAA,iCACE,QAAC,WAAD;AACE,YAAA,IAAI,EAAEI,IAAI,CAACE,IADb;AAEE,YAAA,MAAM,EAAEF,IAAI,CAACG,KAFf;AAGE,YAAA,MAAM,EAAEH,IAAI,CAACG,KAHf;AAIE,YAAA,cAAc,EAAEH,IAAI,CAACI,cAAL,GAAsBJ,IAAI,CAACI,cAA3B,GAA4C,CAJ9D;AAKE,YAAA,UAAU,EAAEJ,IAAI,CAACK;AALnB;AAAA;AAAA;AAAA;AAAA;AADF,WAAgBJ,KAAhB;AAAA;AAAA;AAAA;AAAA,gBADD;AAPH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAyBD,CAxCD;;GAAMX,qB;;KAAAA,qB;AA0CN,eAAeA,qBAAf","sourcesContent":["import { Grid, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport WidgetCard from '../../atoms/WidgetCard';\r\nimport Progressbar from '../../molecules/Progressbar';\r\n\r\ninterface RepActivityBenchmarksProps {\r\n  benchmarks: {\r\n    name: string;\r\n    value: number;\r\n    percentage: number;\r\n    benchmarkValue: number | null | undefined;\r\n  }[];\r\n}\r\n\r\nconst RepActivityBenchmarks: React.FC<RepActivityBenchmarksProps> = ({\r\n  benchmarks,\r\n}: RepActivityBenchmarksProps) => {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      padding: 16,\r\n      height: 728,\r\n      // background: '#D9D9D9'\r\n    },\r\n    leftHeading: {\r\n      marginTop: 15,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <WidgetCard>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          className={classes.root}\r\n        >\r\n          {benchmarks.map((item, index: number) => (\r\n            <Grid item key={index} className={classes.leftHeading}>\r\n              <Progressbar\r\n                name={item.name}\r\n                value1={item.value}\r\n                value2={item.value}\r\n                benchmarkValue={item.benchmarkValue ? item.benchmarkValue : 0}\r\n                percentage={item.percentage}\r\n              />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </WidgetCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RepActivityBenchmarks;\r\n"]},"metadata":{},"sourceType":"module"}