{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/organisms/CustomerMeetings/index.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\n/* eslint-disable prettier/prettier */\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useGlobalStyles } from '../../../plStyles';\nimport { _t_ } from '../../../utils/translation/translation';\nimport WidgetCard from '../../atoms/WidgetCard';\nimport { COLORS } from '../../../plTheme';\nimport Loader from '../../atoms/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CustomerMeetings = ({\n  startDate,\n  endDate\n}) => {\n  _s();\n\n  const [newData, setNewData] = useState([]);\n  const [exsitingData, setExistingData] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  useEffect(() => {\n    void getMeetings();\n  }, [startDate, endDate]);\n\n  const getMeetings = async () => {\n    setLoading(true);\n    const fetchResponse = await fetch(`${process.env.REACT_APP_API_BASE || ''}/api/getMeetings`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        tenantId: localStorage.getItem('tenantId'),\n        userId: localStorage.getItem('userId'),\n        startDate: startDate,\n        endDate: endDate\n      })\n    });\n    const jsonData = await fetchResponse.json();\n    setNewData && setNewData(jsonData[0]);\n    setExistingData && setExistingData(jsonData[1]);\n    setLoading(false);\n  };\n\n  const useStyles = makeStyles({\n    root: {\n      height: 158,\n      paddingLeft: 16,\n      paddingTop: 16,\n      paddingBottom: 16,\n      flexDirection: 'row'\n    },\n    data: {\n      fontFamily: 'Rubik',\n      fontSize: 14,\n      fontWeight: 300,\n      color: COLORS.TEXT_HIGH_EMPHASIS,\n      lineHeight: '21px',\n      letterSpacing: '0em'\n    },\n    heading: {\n      fontFamily: 'Rubik',\n      fontSize: 16,\n      fontWeight: 500,\n      color: COLORS.TEXT_HIGH_EMPHASIS\n    },\n    meetingList: {\n      width: '100%',\n      paddingTop: '2%',\n      height: 109,\n      overflowY: 'scroll',\n      overflowX: 'hidden',\n      '&::-webkit-scrollbar': {\n        width: 6,\n        borderRadius: 10,\n        marginRight: '10px'\n      },\n      '&::-webkit-scrollbar-track': {\n        borderRadius: '10px' // marginTop: '10px',\n\n      },\n      '&::-webkit-scrollbar-thumb': {\n        minHeight: 40,\n        backgroundColor: '#CFD6DE',\n        borderRadius: '10px'\n      }\n    }\n  });\n  const classes = useStyles();\n  const globalClasses = useGlobalStyles();\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [' ', /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(WidgetCard, {\n        margin: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          className: classes.root,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: globalClasses.body1WidgetTitle,\n              children: _t_('Customer Meetings')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            className: classes.meetingList,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"row\",\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                style: {\n                  width: '75%',\n                  paddingBottom: '2%'\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.heading,\n                  children: _t_('NEW')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                style: {\n                  width: '24%',\n                  paddingBottom: '2%'\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.heading,\n                  children: _t_('Date')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: newData.length == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"No meetings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [newData.map((element, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"row\",\n                  style: {\n                    paddingTop: '2%'\n                  },\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    style: {\n                      width: '75%'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.data,\n                      children: [index + 1, '. ', \" \", element.subject]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    style: {\n                      width: '25%'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.data,\n                      children: _t_(new Date(element.date).toDateString().slice(4))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 23\n                }, this)), ' ']\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WidgetCard, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            className: classes.meetingList,\n            style: {\n              paddingTop: '4%',\n              height: 122\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"row\",\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                style: {\n                  width: '75%',\n                  paddingBottom: '2%'\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.heading,\n                  children: _t_('EXISTING')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                style: {\n                  width: '24%',\n                  paddingBottom: '2%'\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.heading,\n                  children: _t_('Date')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: exsitingData.length == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"No meetings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: exsitingData.map((element, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"row\",\n                  style: {\n                    paddingTop: '2%'\n                  },\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    style: {\n                      width: '75%'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.data,\n                      children: [index + 1, '. ', \" \", element.subject]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    style: {\n                      width: '25%'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.data,\n                      children: _t_(new Date(element.date).toDateString().slice(4))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CustomerMeetings, \"mPO4Ynjv/73ETTQr72P9nZIp6Sk=\", true, function () {\n  return [useGlobalStyles];\n});\n\n_c = CustomerMeetings;\nexport default CustomerMeetings;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerMeetings\");","map":{"version":3,"sources":["/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/organisms/CustomerMeetings/index.tsx"],"names":["Grid","makeStyles","Typography","React","useEffect","useState","useGlobalStyles","_t_","WidgetCard","COLORS","Loader","CustomerMeetings","startDate","endDate","newData","setNewData","exsitingData","setExistingData","isLoading","setLoading","getMeetings","fetchResponse","fetch","process","env","REACT_APP_API_BASE","method","headers","body","JSON","stringify","tenantId","localStorage","getItem","userId","jsonData","json","useStyles","root","height","paddingLeft","paddingTop","paddingBottom","flexDirection","data","fontFamily","fontSize","fontWeight","color","TEXT_HIGH_EMPHASIS","lineHeight","letterSpacing","heading","meetingList","width","overflowY","overflowX","borderRadius","marginRight","minHeight","backgroundColor","classes","globalClasses","body1WidgetTitle","length","map","element","index","subject","Date","date","toDateString","slice"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\n/* eslint-disable prettier/prettier */\r\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useGlobalStyles } from '../../../plStyles';\r\nimport { _t_ } from '../../../utils/translation/translation';\r\nimport WidgetCard from '../../atoms/WidgetCard';\r\nimport { COLORS } from '../../../plTheme';\r\nimport Loader from '../../atoms/Loader';\r\n\r\nexport interface CustomerMeetingsProps {\r\n  startDate?: string;\r\n  endDate?: string;\r\n}\r\n\r\nconst CustomerMeetings: React.FC<CustomerMeetingsProps> = ({\r\n  startDate,\r\n  endDate,\r\n}: CustomerMeetingsProps) => {\r\n  const [newData, setNewData] = useState<any>([]);\r\n  const [exsitingData, setExistingData] = useState<any>([]);\r\n  const [isLoading, setLoading] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    void getMeetings();\r\n  }, [startDate, endDate]);\r\n\r\n  const getMeetings = async () => {\r\n    setLoading(true);\r\n    const fetchResponse = await fetch(\r\n      `${process.env.REACT_APP_API_BASE || ''}/api/getMeetings`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          tenantId: localStorage.getItem('tenantId'),\r\n          userId: localStorage.getItem('userId'),\r\n          startDate: startDate,\r\n          endDate: endDate,\r\n        }),\r\n      },\r\n    );\r\n    const jsonData = await fetchResponse.json();\r\n    setNewData && setNewData(jsonData[0]);\r\n    setExistingData && setExistingData(jsonData[1]);\r\n    setLoading(false);\r\n  };\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      height: 158,\r\n      paddingLeft: 16,\r\n      paddingTop: 16,\r\n      paddingBottom: 16,\r\n      flexDirection: 'row',\r\n    },\r\n    data: {\r\n      fontFamily: 'Rubik',\r\n      fontSize: 14,\r\n      fontWeight: 300,\r\n      color: COLORS.TEXT_HIGH_EMPHASIS,\r\n      lineHeight: '21px',\r\n      letterSpacing: '0em',\r\n    },\r\n    heading: {\r\n      fontFamily: 'Rubik',\r\n      fontSize: 16,\r\n      fontWeight: 500,\r\n      color: COLORS.TEXT_HIGH_EMPHASIS,\r\n    },\r\n    meetingList: {\r\n      width: '100%',\r\n      paddingTop: '2%',\r\n      height: 109,\r\n      overflowY: 'scroll',\r\n      overflowX: 'hidden',\r\n      '&::-webkit-scrollbar': {\r\n        width: 6,\r\n        borderRadius: 10,\r\n        marginRight: '10px',\r\n      },\r\n      '&::-webkit-scrollbar-track': {\r\n        borderRadius: '10px',\r\n        // marginTop: '10px',\r\n      },\r\n      '&::-webkit-scrollbar-thumb': {\r\n        minHeight: 40,\r\n        backgroundColor: '#CFD6DE',\r\n        borderRadius: '10px',\r\n      },\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  const globalClasses = useGlobalStyles();\r\n  if (isLoading) {\r\n    return (\r\n      <>\r\n        <Loader />\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {' '}\r\n      <Grid container direction=\"row\">\r\n        <WidgetCard margin={true}>\r\n          <Grid container direction=\"column\" className={classes.root}>\r\n            <Grid item style={{ width: '100%' }}>\r\n              <Typography className={globalClasses.body1WidgetTitle}>\r\n                {_t_('Customer Meetings')}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item className={classes.meetingList}>\r\n              <Grid container direction=\"row\" spacing={2}>\r\n                <Grid item style={{ width: '75%', paddingBottom: '2%' }}>\r\n                  <Typography className={classes.heading}>\r\n                    {_t_('NEW')}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item style={{ width: '24%', paddingBottom: '2%' }}>\r\n                  <Typography className={classes.heading}>\r\n                    {_t_('Date')}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                {newData.length == 0 ? (\r\n                  <div>No meetings</div>\r\n                ) : (\r\n                  <>\r\n                    {newData.map((element: any, index: number) => (\r\n                      <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        key={index}\r\n                        style={{ paddingTop: '2%' }}\r\n                        spacing={2}\r\n                      >\r\n                        <Grid item style={{ width: '75%' }}>\r\n                          <Typography className={classes.data}>\r\n                            {index + 1}\r\n                            {'. '} {element.subject}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item style={{ width: '25%' }}>\r\n                          <Typography className={classes.data}>\r\n                            {_t_(\r\n                              new Date(element.date).toDateString().slice(4),\r\n                            )}\r\n                          </Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    ))}{' '}\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </WidgetCard>\r\n        <WidgetCard>\r\n          <Grid container direction=\"column\" className={classes.root}>\r\n            <Grid\r\n              item\r\n              className={classes.meetingList}\r\n              style={{ paddingTop: '4%', height: 122 }}\r\n            >\r\n              <Grid container direction=\"row\" spacing={2}>\r\n                <Grid item style={{ width: '75%', paddingBottom: '2%' }}>\r\n                  <Typography className={classes.heading}>\r\n                    {_t_('EXISTING')}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item style={{ width: '24%', paddingBottom: '2%' }}>\r\n                  <Typography className={classes.heading}>\r\n                    {_t_('Date')}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                {exsitingData.length == 0 ? (\r\n                  <div>No meetings</div>\r\n                ) : (\r\n                  <>\r\n                    {exsitingData.map((element: any, index: number) => (\r\n                      <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        key={index}\r\n                        style={{ paddingTop: '2%' }}\r\n                        spacing={2}\r\n                      >\r\n                        <Grid item style={{ width: '75%' }}>\r\n                          <Typography className={classes.data}>\r\n                            {index + 1}\r\n                            {'. '} {element.subject}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item style={{ width: '25%' }}>\r\n                          <Typography className={classes.data}>\r\n                            {_t_(\r\n                              new Date(element.date).toDateString().slice(4),\r\n                            )}\r\n                          </Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    ))}\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </WidgetCard>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerMeetings;\r\n"]},"metadata":{},"sourceType":"module"}