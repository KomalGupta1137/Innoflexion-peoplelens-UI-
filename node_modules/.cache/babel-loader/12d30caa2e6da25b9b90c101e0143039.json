{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/molecules/BasicTable/index.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\n/* eslint-disable @typescript-eslint/no-empty-function */\nimport React, { useEffect, useState } from 'react';\nimport { Icon, makeStyles, withStyles } from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { _t_ } from '../../../utils/translation/translation';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport moment from 'moment';\nimport { useQuery } from '@apollo/client';\nimport { GetRepDashboardData } from '../../../gql/queries/repDashboard';\nimport Loader from '../../atoms/Loader';\nimport { addWeeks, addYears } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BasicTable = ({\n  startDate,\n  endDate,\n  activeQuarter\n}) => {\n  _s();\n\n  var _data$RepDashboardDat;\n\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 150,\n      maxWidth: '100%'\n    },\n    tableRow: {\n      height: 30,\n      width: 20\n    }\n  });\n  const classes = useStyles();\n  const StyledTableRow = withStyles(theme => ({}))(TableRow);\n  const [sortOrder, setSortOrder] = useState(true);\n  const [sortOrder1, setSortOrder1] = useState(true);\n  const [isLoading, setLoading] = useState(false);\n  const [data1, setData] = useState([]);\n  const [error1, setError] = useState();\n  const [persona, setPersona] = useState('');\n  useEffect(() => {\n    const persona = localStorage.getItem('persona');\n    setPersona(persona);\n  }, [sortOrder]);\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(GetRepDashboardData, {\n    variables: {\n      repDashboardInput: {\n        startDate: startDate,\n        endDate: endDate,\n        thresholdValue: 1\n      }\n    }\n  }); // To be removed later\n\n  const getPipelineData = async () => {\n    setLoading(true);\n    await fetch(`${process.env.REACT_APP_API_BASE || ''}/api/getPipelineData`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        startDate: startDate,\n        endDate: endDate\n      })\n    }).then(async res => {\n      const jsonData = await res.json();\n      setData && setData(jsonData);\n      setLoading(false);\n    }).catch(err => setError(err));\n  };\n\n  const humanize = str => {\n    const frags = str.split('_');\n\n    for (let i = 0; i < frags.length; i++) {\n      frags[i] = frags[i].charAt(0).toUpperCase() + frags[i].slice(1);\n    }\n\n    return frags.join('');\n  };\n\n  useEffect(() => {\n    if (activeQuarter != 4) void refetch();\n  }, [refetch, startDate, endDate]); // To be removed later\n\n  useEffect(() => {\n    if (activeQuarter == 4) {\n      let stDate = new Date(startDate);\n      stDate = addYears(stDate, 1);\n      stDate = addWeeks(stDate, 4);\n      startDate = stDate.toISOString();\n      let enDate = new Date(endDate);\n      enDate = addYears(enDate, 1);\n      enDate = addWeeks(enDate, 4);\n      endDate = enDate.toISOString();\n      void getPipelineData();\n    }\n  }, [startDate, endDate]); // let rows = data?.RepDashboardData?.pipeline;\n\n  let rows = activeQuarter == 4 ? data1 : data === null || data === void 0 ? void 0 : (_data$RepDashboardDat = data.RepDashboardData) === null || _data$RepDashboardDat === void 0 ? void 0 : _data$RepDashboardDat.pipeline;\n  const [pipelineData, setPipelineData] = useState(rows);\n  useEffect(() => {\n    setPipelineData(rows);\n  }, [rows]);\n\n  if (isLoading || loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  if (error) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"`Error! $\", error.message, \"` \"]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              style: {\n                fontFamily: 'Rubik',\n                fontWeight: 500,\n                fontSize: 14,\n                minWidth: '12.36vw',\n                lineHeight: '24px',\n                letterSpacing: '0em',\n                borderSpacing: 0\n              },\n              children: _t_('Customer')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              style: {\n                fontFamily: 'Rubik',\n                fontWeight: 500,\n                fontSize: 14,\n                lineHeight: '24px',\n                letterSpacing: '0em',\n                minWidth: '0.9vw'\n              },\n              children: _t_('Relationship')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              style: {\n                fontFamily: 'Rubik',\n                fontWeight: 500,\n                fontSize: 14,\n                minWidth: '12.8vw',\n                lineHeight: '24px',\n                letterSpacing: '0em',\n                borderSpacing: 0\n              },\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: true,\n                direction: sortOrder ? 'desc' : 'asc',\n                onClick: () => {\n                  setSortOrder(!sortOrder);\n                  rows = rows && rows.slice().sort((a, b) => {\n                    return sortOrder ? (a === null || a === void 0 ? void 0 : a.opportunity) - (b === null || b === void 0 ? void 0 : b.opportunity) : (b === null || b === void 0 ? void 0 : b.opportunity) - (a === null || a === void 0 ? void 0 : a.oppurtunity);\n                  });\n                  setPipelineData(rows);\n                },\n                IconComponent: ArrowDropDownIcon,\n                style: {\n                  borderSpacing: 0\n                },\n                children: [_t_('Opportunity'), ' ($)']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              style: {\n                fontFamily: 'Rubik',\n                fontWeight: 500,\n                fontSize: 14,\n                lineHeight: '24px',\n                letterSpacing: '0em',\n                minWidth: '11.63vw'\n              },\n              children: persona == 'SDR' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: _t_('Contact')\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\" \", _t_('Decision Maker')]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              style: {\n                fontFamily: 'Rubik',\n                fontWeight: 500,\n                fontSize: 14,\n                lineHeight: '24px',\n                letterSpacing: '0em',\n                minWidth: '2vw'\n              },\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                \"aria-sort\": sortOrder1 ? 'ascending' : 'descending',\n                active: true,\n                direction: sortOrder1 ? 'desc' : 'asc',\n                onClick: () => {\n                  setSortOrder1(!sortOrder1);\n                  rows = rows && rows.slice().sort((a, b) => {\n                    const f = new Date(moment(a === null || a === void 0 ? void 0 : a.closedDate).utc().format('YYYY-MM-DD'));\n                    const s = new Date(moment(b === null || b === void 0 ? void 0 : b.closedDate).utc().format('YYYY-MM-DD'));\n                    return sortOrder1 ? f.getTime() - s.getTime() : s.getTime() - f.getTime();\n                  });\n                  setPipelineData(rows);\n                },\n                IconComponent: ArrowDropDownIcon,\n                style: {\n                  minWidth: '8.2vw'\n                },\n                children: _t_('Closing Date')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              size: \"medium\",\n              style: {\n                fontFamily: 'Rubik',\n                fontWeight: 500,\n                fontSize: 14,\n                lineHeight: '24px'\n              },\n              children: _t_('Stage')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              size: \"medium\",\n              style: {\n                fontFamily: 'Rubik',\n                fontWeight: 500,\n                fontSize: 14,\n                lineHeight: '24px',\n                minWidth: '10vw'\n              },\n              children: _t_('My Next Step')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              size: \"small\",\n              style: {\n                fontFamily: 'Rubik',\n                fontWeight: 500,\n                fontSize: 14,\n                lineHeight: '24px',\n                minWidth: '5vw'\n              },\n              children: _t_('Deal Info')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: pipelineData && pipelineData.map(row => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              style: {\n                fontFamily: 'Rubik',\n                fontWeight: 300,\n                fontSize: 14,\n                lineHeight: '20px'\n              },\n              children: _t_((row === null || row === void 0 ? void 0 : row.customer) ? row === null || row === void 0 ? void 0 : row.customer : '')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              style: {\n                fontFamily: 'Rubik',\n                fontWeight: 300,\n                fontSize: 14,\n                lineHeight: '20px'\n              },\n              children: _t_((row === null || row === void 0 ? void 0 : row.relationship) ? row === null || row === void 0 ? void 0 : row.relationship : '')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              style: {\n                fontFamily: 'Rubik',\n                fontWeight: 300,\n                fontSize: 14,\n                lineHeight: '20px'\n              },\n              children: [\"$\", _t_((row === null || row === void 0 ? void 0 : row.opportunity) ? row === null || row === void 0 ? void 0 : row.opportunity.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') : '')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              style: {\n                fontFamily: 'Rubik',\n                fontWeight: 300,\n                fontSize: 14,\n                lineHeight: '20px'\n              },\n              children: _t_((row === null || row === void 0 ? void 0 : row.decisionMaker) ? row === null || row === void 0 ? void 0 : row.decisionMaker : '')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              style: {\n                fontFamily: 'Rubik',\n                fontWeight: 300,\n                fontSize: 14,\n                lineHeight: '20px'\n              },\n              children: _t_((row === null || row === void 0 ? void 0 : row.closedDate) ? moment(row === null || row === void 0 ? void 0 : row.closedDate).utc().format('MMM DD YYYY') : '')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              style: {\n                fontFamily: 'Rubik',\n                fontWeight: 300,\n                fontSize: 14,\n                lineHeight: '20px'\n              },\n              children: _t_((row === null || row === void 0 ? void 0 : row.status) ? humanize(row === null || row === void 0 ? void 0 : row.status) : '')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              style: {\n                fontFamily: 'Rubik',\n                fontWeight: 300,\n                fontSize: 14,\n                lineHeight: '20px'\n              },\n              children: (row === null || row === void 0 ? void 0 : row.myNextStep) ? row === null || row === void 0 ? void 0 : row.myNextStep.toLocaleString() : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              style: {\n                fontFamily: 'Rubik',\n                fontWeight: 300,\n                fontSize: 14,\n                lineHeight: '20px',\n                letterSpacing: '0em',\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                component: InfoOutlinedIcon,\n                style: {\n                  color: '#65789B'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 19\n            }, this)]\n          }, row === null || row === void 0 ? void 0 : row.customer, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(BasicTable, \"p6cWS5tGBlWogAU0jNYWVqz75Rg=\", true, function () {\n  return [useQuery];\n});\n\n_c = BasicTable;\nexport default BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/molecules/BasicTable/index.tsx"],"names":["React","useEffect","useState","Icon","makeStyles","withStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TableSortLabel","ArrowDropDownIcon","_t_","InfoOutlinedIcon","moment","useQuery","GetRepDashboardData","Loader","addWeeks","addYears","BasicTable","startDate","endDate","activeQuarter","useStyles","table","minWidth","maxWidth","tableRow","height","width","classes","StyledTableRow","theme","sortOrder","setSortOrder","sortOrder1","setSortOrder1","isLoading","setLoading","data1","setData","error1","setError","persona","setPersona","localStorage","getItem","loading","error","data","refetch","variables","repDashboardInput","thresholdValue","getPipelineData","fetch","process","env","REACT_APP_API_BASE","method","headers","body","JSON","stringify","then","res","jsonData","json","catch","err","humanize","str","frags","split","i","length","charAt","toUpperCase","slice","join","stDate","Date","toISOString","enDate","rows","RepDashboardData","pipeline","pipelineData","setPipelineData","message","fontFamily","fontWeight","fontSize","lineHeight","letterSpacing","borderSpacing","sort","a","b","opportunity","oppurtunity","f","closedDate","utc","format","s","getTime","map","row","customer","relationship","toString","replace","decisionMaker","status","myNextStep","toLocaleString","textAlign","color"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable @typescript-eslint/no-empty-function */\nimport React, { useEffect, useState } from 'react';\nimport { Icon, makeStyles, withStyles } from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { _t_ } from '../../../utils/translation/translation';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport moment from 'moment';\nimport { QueryResult, useQuery } from '@apollo/client';\n\nimport { GetRepDashboardData } from '../../../gql/queries/repDashboard';\n\nimport { repDashboardData as RepDashboardData } from '../../../gql/types';\nimport Loader from '../../atoms/Loader';\nimport { addWeeks, addYears } from 'date-fns';\n\nexport interface BasicTableProps {\n  startDate?: string;\n  endDate?: string;\n  activeQuarter: number;\n}\n\nconst BasicTable: React.FC<BasicTableProps> = ({\n  startDate,\n  endDate,\n  activeQuarter,\n}: BasicTableProps) => {\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 150,\n      maxWidth: '100%',\n    },\n    tableRow: {\n      height: 30,\n      width: 20,\n    },\n  });\n  const classes = useStyles();\n  const StyledTableRow = withStyles((theme) => ({}))(TableRow);\n  const [sortOrder, setSortOrder] = useState(true);\n  const [sortOrder1, setSortOrder1] = useState(true);\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [data1, setData] = useState<any>([]);\n  const [error1, setError] = useState();\n  const [persona, setPersona] = useState('');\n\n  useEffect(() => {\n    const persona = localStorage.getItem('persona');\n    setPersona(persona!);\n  }, [sortOrder]);\n\n  const {\n    loading,\n    error,\n    data,\n    refetch,\n  }: QueryResult<RepDashboardData> = useQuery(GetRepDashboardData, {\n    variables: {\n      repDashboardInput: {\n        startDate: startDate,\n        endDate: endDate,\n        thresholdValue: 1,\n      },\n    },\n  });\n  // To be removed later\n  const getPipelineData = async () => {\n    setLoading(true);\n    await fetch(`${process.env.REACT_APP_API_BASE || ''}/api/getPipelineData`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        startDate: startDate,\n        endDate: endDate,\n      }),\n    })\n      .then(async (res) => {\n        const jsonData = await res.json();\n        setData && setData(jsonData);\n        setLoading(false);\n      })\n      .catch((err) => setError(err));\n  };\n\n  const humanize = (str: string) => {\n    const frags = str.split('_');\n    for (let i = 0; i < frags.length; i++) {\n      frags[i] = frags[i].charAt(0).toUpperCase() + frags[i].slice(1);\n    }\n    return frags.join('');\n  };\n\n  useEffect(() => {\n    if (activeQuarter != 4) void refetch();\n  }, [refetch, startDate, endDate]);\n\n  // To be removed later\n  useEffect(() => {\n    if (activeQuarter == 4) {\n      let stDate = new Date(startDate!);\n      stDate = addYears(stDate, 1);\n      stDate = addWeeks(stDate, 4);\n      startDate = stDate.toISOString();\n      let enDate = new Date(endDate!);\n      enDate = addYears(enDate, 1);\n      enDate = addWeeks(enDate, 4);\n      endDate = enDate.toISOString();\n      void getPipelineData();\n    }\n  }, [startDate, endDate]);\n\n  // let rows = data?.RepDashboardData?.pipeline;\n  let rows = activeQuarter == 4 ? data1 : data?.RepDashboardData?.pipeline;\n  const [pipelineData, setPipelineData] = useState(rows);\n  useEffect(() => {\n    setPipelineData(rows);\n  }, [rows]);\n\n  if (isLoading || loading) {\n    return (\n      <>\n        <Loader />\n      </>\n    );\n  }\n\n  if (error) return <>`Error! ${error.message}` </>;\n\n  return (\n    <>\n      <TableContainer>\n        <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell\n                align=\"left\"\n                style={{\n                  fontFamily: 'Rubik',\n                  fontWeight: 500,\n                  fontSize: 14,\n                  minWidth: '12.36vw',\n                  lineHeight: '24px',\n                  letterSpacing: '0em',\n                  borderSpacing: 0,\n                }}\n              >\n                {_t_('Customer')}\n              </TableCell>\n              <TableCell\n                align=\"left\"\n                style={{\n                  fontFamily: 'Rubik',\n                  fontWeight: 500,\n                  fontSize: 14,\n                  lineHeight: '24px',\n                  letterSpacing: '0em',\n                  minWidth: '0.9vw',\n                }}\n              >\n                {_t_('Relationship')}\n              </TableCell>\n              <TableCell\n                align=\"left\"\n                style={{\n                  fontFamily: 'Rubik',\n                  fontWeight: 500,\n                  fontSize: 14,\n                  minWidth: '12.8vw',\n                  lineHeight: '24px',\n                  letterSpacing: '0em',\n                  borderSpacing: 0,\n                }}\n              >\n                <TableSortLabel\n                  active={true}\n                  direction={sortOrder ? 'desc' : 'asc'}\n                  onClick={() => {\n                    setSortOrder(!sortOrder);\n                    rows =\n                      rows &&\n                      rows.slice().sort((a: any, b: any) => {\n                        return sortOrder\n                          ? a?.opportunity - b?.opportunity\n                          : b?.opportunity - a?.oppurtunity;\n                      });\n\n                    setPipelineData(rows);\n                  }}\n                  IconComponent={ArrowDropDownIcon}\n                  style={{ borderSpacing: 0 }}\n                >\n                  {_t_('Opportunity')}\n                  {' ($)'}\n                </TableSortLabel>\n              </TableCell>\n              <TableCell\n                align=\"left\"\n                style={{\n                  fontFamily: 'Rubik',\n                  fontWeight: 500,\n                  fontSize: 14,\n                  lineHeight: '24px',\n                  letterSpacing: '0em',\n                  minWidth: '11.63vw',\n                }}\n              >\n                {persona == 'SDR' ? (\n                  <>{_t_('Contact')}</>\n                ) : (\n                  <> {_t_('Decision Maker')}</>\n                )}\n              </TableCell>\n              <TableCell\n                align=\"left\"\n                style={{\n                  fontFamily: 'Rubik',\n                  fontWeight: 500,\n                  fontSize: 14,\n                  lineHeight: '24px',\n                  letterSpacing: '0em',\n                  minWidth: '2vw',\n                }}\n              >\n                <TableSortLabel\n                  aria-sort={sortOrder1 ? 'ascending' : 'descending'}\n                  active={true}\n                  direction={sortOrder1 ? 'desc' : 'asc'}\n                  onClick={() => {\n                    setSortOrder1(!sortOrder1);\n\n                    rows =\n                      rows &&\n                      rows.slice().sort((a: any, b: any) => {\n                        const f = new Date(\n                          moment(a?.closedDate).utc().format('YYYY-MM-DD'),\n                        );\n                        const s = new Date(\n                          moment(b?.closedDate).utc().format('YYYY-MM-DD'),\n                        );\n\n                        return sortOrder1\n                          ? f.getTime() - s.getTime()\n                          : s.getTime() - f.getTime();\n                      });\n\n                    setPipelineData(rows);\n                  }}\n                  IconComponent={ArrowDropDownIcon}\n                  style={{ minWidth: '8.2vw' }}\n                >\n                  {_t_('Closing Date')}\n                </TableSortLabel>\n              </TableCell>\n              <TableCell\n                align=\"left\"\n                size=\"medium\"\n                style={{\n                  fontFamily: 'Rubik',\n                  fontWeight: 500,\n                  fontSize: 14,\n                  lineHeight: '24px',\n                }}\n              >\n                {_t_('Stage')}\n              </TableCell>\n              <TableCell\n                align=\"left\"\n                size=\"medium\"\n                style={{\n                  fontFamily: 'Rubik',\n                  fontWeight: 500,\n                  fontSize: 14,\n                  lineHeight: '24px',\n                  minWidth: '10vw',\n                }}\n              >\n                {_t_('My Next Step')}\n              </TableCell>\n              <TableCell\n                align=\"left\"\n                size=\"small\"\n                style={{\n                  fontFamily: 'Rubik',\n                  fontWeight: 500,\n                  fontSize: 14,\n                  lineHeight: '24px',\n                  minWidth: '5vw',\n                }}\n              >\n                {_t_('Deal Info')}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {pipelineData &&\n              pipelineData.map((row: any) => (\n                <StyledTableRow key={row?.customer}>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{\n                      fontFamily: 'Rubik',\n                      fontWeight: 300,\n                      fontSize: 14,\n                      lineHeight: '20px',\n                    }}\n                  >\n                    {_t_(row?.customer ? row?.customer : '')}\n                  </TableCell>\n                  <TableCell\n                    align=\"left\"\n                    style={{\n                      fontFamily: 'Rubik',\n                      fontWeight: 300,\n                      fontSize: 14,\n                      lineHeight: '20px',\n                    }}\n                  >\n                    {_t_(row?.relationship ? row?.relationship : '')}\n                  </TableCell>\n                  <TableCell\n                    align=\"left\"\n                    style={{\n                      fontFamily: 'Rubik',\n                      fontWeight: 300,\n                      fontSize: 14,\n                      lineHeight: '20px',\n                    }}\n                  >\n                    $\n                    {_t_(\n                      row?.opportunity\n                        ? row?.opportunity\n                            .toString()\n                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                        : '',\n                    )}\n                  </TableCell>\n                  <TableCell\n                    align=\"left\"\n                    style={{\n                      fontFamily: 'Rubik',\n                      fontWeight: 300,\n                      fontSize: 14,\n                      lineHeight: '20px',\n                    }}\n                  >\n                    {_t_(row?.decisionMaker ? row?.decisionMaker : '')}\n                  </TableCell>\n                  <TableCell\n                    align=\"left\"\n                    style={{\n                      fontFamily: 'Rubik',\n                      fontWeight: 300,\n                      fontSize: 14,\n                      lineHeight: '20px',\n                    }}\n                  >\n                    {_t_(\n                      row?.closedDate\n                        ? moment(row?.closedDate).utc().format('MMM DD YYYY')\n                        : '',\n                    )}\n                  </TableCell>\n                  <TableCell\n                    align=\"left\"\n                    style={{\n                      fontFamily: 'Rubik',\n                      fontWeight: 300,\n                      fontSize: 14,\n                      lineHeight: '20px',\n                    }}\n                  >\n                    {_t_(row?.status ? humanize(row?.status) : '')}\n                  </TableCell>\n                  <TableCell\n                    align=\"left\"\n                    style={{\n                      fontFamily: 'Rubik',\n                      fontWeight: 300,\n                      fontSize: 14,\n                      lineHeight: '20px',\n                    }}\n                  >\n                    {row?.myNextStep ? row?.myNextStep.toLocaleString() : ''}\n                  </TableCell>\n                  <TableCell\n                    align=\"left\"\n                    style={{\n                      fontFamily: 'Rubik',\n                      fontWeight: 300,\n                      fontSize: 14,\n                      lineHeight: '20px',\n                      letterSpacing: '0em',\n                      textAlign: 'center',\n                    }}\n                  >\n                    <Icon\n                      component={InfoOutlinedIcon}\n                      style={{ color: '#65789B' }}\n                    />\n                  </TableCell>\n                </StyledTableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\n\nexport default BasicTable;\n"]},"metadata":{},"sourceType":"module"}