{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Current/peoplelens_ui/src/components/organisms/OkrPerformances/Index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, makeStyles } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { COLORS, plTheme } from '../../../plTheme';\nimport SalesOKR from '../SalesOKR';\nimport PerformanceSummary from '../PerformanceSummary';\nimport { useQuery } from '@apollo/client';\nimport Loader from '../../atoms/Loader';\nimport { GetSalesOKR } from '../../../gql/queries/salesOKR';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OkrPerformances = ({\n  startDate,\n  endDate\n}) => {\n  _s();\n\n  var _data2$RepDashboardDa, _data2$RepDashboardDa2;\n\n  const useStyles = makeStyles({\n    subtitle: {\n      marginTop: 13,\n      fontWeight: 300\n    },\n    calendarIcon: {\n      width: 22,\n      height: 24\n    },\n    item: {},\n    mainDiv: {\n      marginTop: '0.8rem'\n    },\n    heading: {\n      marginTop: 60\n    },\n    formControl: {\n      marginLeft: 9,\n      width: '175px'\n    },\n    rightSubHeading: {\n      fontFamily: plTheme.typography.fontFamily,\n      fontSize: plTheme.typography.subtitle1.fontSize,\n      fontWeight: plTheme.typography.subtitle1.fontWeight,\n      lineHeight: plTheme.typography.subtitle1.lineHeight,\n      fontStyle: plTheme.typography.subtitle1.fontStyle,\n      backgroundColor: COLORS.GENERAL_WHITE\n    },\n    dropDown: {\n      height: 40\n    },\n    icon: {\n      color: COLORS.TEXT_HIGH_EMPHASIS\n    },\n    selectRoot: {\n      fontSize: 14,\n      fontWeight: 500,\n      fontFamily: 'Rubik',\n      lineHeight: '24px',\n      letterSpacing: '0em',\n      '&:focus': {\n        backgroundColor: 'transparent'\n      }\n    },\n    quantityRoot: {\n      '& .MuiOutlinedInput-notchedOutline': {\n        border: '1px solid rgba(215, 223, 233, 0.4)',\n        borderRadius: '2px'\n      },\n      '& .Mui-focused .MuiOutlinedInput-notchedOutline': {\n        border: '1px solid rgba(215, 223, 233, 0.4)',\n        borderRadius: '2px'\n      },\n      '&:hover .MuiOutlinedInput-notchedOutline': {\n        border: '1px solid rgba(215, 223, 233, 0.4)',\n        borderRadius: '2px'\n      }\n    }\n  });\n  const dropDownDates = [{\n    name: 'SEMI ANNUAL (H1)',\n    startDate: startDate,\n    endDate: endDate,\n    value: 1\n  }, {\n    name: 'SEMI ANNUAL (H2)',\n    startDate: startDate,\n    endDate: endDate,\n    value: 2\n  }];\n  const classes = useStyles();\n  const {\n    loading: loading2,\n    error: error2,\n    data: data2,\n    refetch: refetch2\n  } = useQuery(GetSalesOKR, {\n    variables: {\n      repDashboardInput: {\n        startDate: startDate,\n        endDate: endDate\n      }\n    }\n  });\n  useEffect(() => {\n    void refetch2();\n  }, [refetch2]);\n  if (error2) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"`Error! $\", error2.message, \"` \"]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [' ', loading2 && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      className: classes.mainDiv,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.item,\n          style: {\n            height: 532\n          },\n          children: /*#__PURE__*/_jsxDEV(SalesOKR, {\n            salesokr: data2 === null || data2 === void 0 ? void 0 : (_data2$RepDashboardDa = data2.RepDashboardData) === null || _data2$RepDashboardDa === void 0 ? void 0 : _data2$RepDashboardDa.okrName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.item,\n          style: {\n            height: 532\n          },\n          children: /*#__PURE__*/_jsxDEV(PerformanceSummary, {\n            okrPerformance: data2 === null || data2 === void 0 ? void 0 : (_data2$RepDashboardDa2 = data2.RepDashboardData) === null || _data2$RepDashboardDa2 === void 0 ? void 0 : _data2$RepDashboardDa2.okrSummary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OkrPerformances, \"PzQ8LSE7oXHk/8igNABC2Hfac9c=\", true, function () {\n  return [useQuery];\n});\n\n_c = OkrPerformances;\nexport default OkrPerformances;\n\nvar _c;\n\n$RefreshReg$(_c, \"OkrPerformances\");","map":{"version":3,"sources":["/home/komal/Documents/Current/peoplelens_ui/src/components/organisms/OkrPerformances/Index.tsx"],"names":["Grid","makeStyles","React","useEffect","COLORS","plTheme","SalesOKR","PerformanceSummary","useQuery","Loader","GetSalesOKR","OkrPerformances","startDate","endDate","useStyles","subtitle","marginTop","fontWeight","calendarIcon","width","height","item","mainDiv","heading","formControl","marginLeft","rightSubHeading","fontFamily","typography","fontSize","subtitle1","lineHeight","fontStyle","backgroundColor","GENERAL_WHITE","dropDown","icon","color","TEXT_HIGH_EMPHASIS","selectRoot","letterSpacing","quantityRoot","border","borderRadius","dropDownDates","name","value","classes","loading","loading2","error","error2","data","data2","refetch","refetch2","variables","repDashboardInput","message","RepDashboardData","okrName","okrSummary"],"mappings":"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","sourcesContent":["import { Grid, makeStyles } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { _t_ } from '../../../utils/translation/translation';\nimport { COLORS, plTheme } from '../../../plTheme';\nimport SalesOKR from '../SalesOKR';\nimport PerformanceSummary from '../PerformanceSummary';\n\nimport { QueryResult, useQuery } from '@apollo/client';\nimport Loader from '../../atoms/Loader';\nimport { GetSalesOKR } from '../../../gql/queries/salesOKR';\nimport { RepDashboardData as DashboardData } from '../../../gql/types';\ninterface OkrPerformancesProps {\n  startDate: string;\n  endDate: string;\n}\nconst OkrPerformances: React.FC<OkrPerformancesProps> = ({\n  startDate,\n  endDate,\n}: OkrPerformancesProps) => {\n  const useStyles = makeStyles({\n    subtitle: {\n      marginTop: 13,\n      fontWeight: 300,\n    },\n    calendarIcon: {\n      width: 22,\n      height: 24,\n    },\n    item: {},\n    mainDiv: {\n      marginTop: '0.8rem',\n    },\n    heading: {\n      marginTop: 60,\n    },\n    formControl: {\n      marginLeft: 9,\n      width: '175px',\n    },\n    rightSubHeading: {\n      fontFamily: plTheme.typography.fontFamily,\n      fontSize: plTheme.typography.subtitle1.fontSize,\n      fontWeight: plTheme.typography.subtitle1.fontWeight,\n      lineHeight: plTheme.typography.subtitle1.lineHeight,\n      fontStyle: plTheme.typography.subtitle1.fontStyle,\n      backgroundColor: COLORS.GENERAL_WHITE,\n    },\n    dropDown: {\n      height: 40,\n    },\n    icon: {\n      color: COLORS.TEXT_HIGH_EMPHASIS,\n    },\n\n    selectRoot: {\n      fontSize: 14,\n      fontWeight: 500,\n      fontFamily: 'Rubik',\n      lineHeight: '24px',\n      letterSpacing: '0em',\n      '&:focus': {\n        backgroundColor: 'transparent',\n      },\n    },\n    quantityRoot: {\n      '& .MuiOutlinedInput-notchedOutline': {\n        border: '1px solid rgba(215, 223, 233, 0.4)',\n        borderRadius: '2px',\n      },\n      '& .Mui-focused .MuiOutlinedInput-notchedOutline': {\n        border: '1px solid rgba(215, 223, 233, 0.4)',\n        borderRadius: '2px',\n      },\n      '&:hover .MuiOutlinedInput-notchedOutline': {\n        border: '1px solid rgba(215, 223, 233, 0.4)',\n        borderRadius: '2px',\n      },\n    },\n  });\n\n  const dropDownDates = [\n    {\n      name: 'SEMI ANNUAL (H1)',\n      startDate: startDate,\n      endDate: endDate,\n      value: 1,\n    },\n    {\n      name: 'SEMI ANNUAL (H2)',\n      startDate: startDate,\n      endDate: endDate,\n      value: 2,\n    },\n  ];\n  const classes = useStyles();\n  const {\n    loading: loading2,\n    error: error2,\n    data: data2,\n    refetch: refetch2,\n  }: QueryResult<DashboardData> = useQuery(GetSalesOKR, {\n    variables: {\n      repDashboardInput: {\n        startDate: startDate,\n        endDate: endDate,\n      },\n    },\n  });\n  useEffect(() => {\n    void refetch2();\n  }, [refetch2]);\n\n  if (error2) return <>`Error! ${error2.message}` </>;\n\n  return (\n    <>\n      {' '}\n      {loading2 && <Loader />}\n      <Grid container direction=\"row\" className={classes.mainDiv} spacing={3}>\n        <Grid item xs={6}>\n          <div className={classes.item} style={{ height: 532 }}>\n            <SalesOKR salesokr={data2?.RepDashboardData?.okrName} />\n          </div>\n        </Grid>\n        <Grid item xs={6}>\n          <div className={classes.item} style={{ height: 532 }}>\n            <PerformanceSummary\n              okrPerformance={data2?.RepDashboardData?.okrSummary}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default OkrPerformances;\n"]},"metadata":{},"sourceType":"module"}