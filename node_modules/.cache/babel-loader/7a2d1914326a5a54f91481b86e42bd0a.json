{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/organisms/ManagerInsights/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Sankey from '../../molecules/SankeyChart/index';\nimport WidgetCard from '../../atoms/WidgetCard';\nimport { Grid, makeStyles, Typography, Button } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DeeperInsights from '../DeeperInsights/index';\nimport { useWindowSize } from '../../../utils/hooks/useWindowSize';\nimport { COLORS } from '../../../plTheme';\nimport { _t_ } from '../../../utils/translation/translation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ManagerInsights = ({\n  data\n}) => {\n  _s();\n\n  const [width] = useWindowSize();\n  const useStyles = makeStyles({\n    root: {\n      paddingLeft: 0\n    },\n    outCome: {\n      paddingRight: 200\n    },\n    Drivers: {\n      flexGrow: 1\n    },\n    headings: {\n      paddintTop: 7,\n      fontSize: 16\n    },\n    outcomesHead: {\n      color: COLORS.TEXT_HIGH_EMPHASIS,\n      paddingTop: 30,\n      paddingBottom: 20\n    },\n    outcomeDiv: {\n      padding: '25px 0px',\n      height: 641\n    },\n    optionsFont: {\n      fontFamily: 'Rubik',\n      fontSize: 12,\n      fontWeight: 400,\n      letterSpacing: '0em'\n    },\n    dialog: {\n      position: 'absolute',\n      top: '7vh',\n      left: width > 1500 ? 400 : 150,\n      width: 1025\n    },\n    buttonFont: {\n      fontFamily: 'Rubik',\n      fontWeight: 500,\n      fontSize: 14,\n      textTransform: 'none',\n      height: 40,\n      width: 154\n    },\n    DeeperInsights: {\n      paddingRight: 15\n    },\n    sankey: {\n      width: '90%',\n      height: 560\n    }\n  });\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      className: classes.outcomesHead,\n      children: _t_('Select outcome & drivers to view insights')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WidgetCard, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        className: classes.outcomeDiv,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                paddingLeft: 16\n              },\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  className: classes.outCome,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h2\",\n                    className: classes.headings,\n                    children: _t_('Outcome')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  className: classes.Drivers,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h2\",\n                    className: classes.headings,\n                    children: _t_('Drivers')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  className: classes.DeeperInsights,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    size: \"large\",\n                    onClick: handleClickOpen,\n                    classes: {\n                      containedPrimary: classes.buttonFont\n                    },\n                    children: _t_('Deeper insights')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                paddingTop: 25\n              },\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    direction: \"column\",\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  className: classes.sankey,\n                  children: /*#__PURE__*/_jsxDEV(Sankey, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      classes: {\n        paper: classes.dialog\n      },\n      open: open,\n      onClose: handleClose,\n      fullWidth: true,\n      style: {\n        height: 900,\n        justifyContent: 'center',\n        alignItems: 'center',\n        overflow: 'hidden',\n        alignContent: 'center'\n      },\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(DialogContent, {\n        style: {\n          overflow: 'hidden'\n        },\n        children: /*#__PURE__*/_jsxDEV(DeeperInsights, {\n          onclose: handleClose,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ManagerInsights, \"xuHLS5NYHIdVdiOqnc6RjeFVpvE=\", true, function () {\n  return [useWindowSize];\n});\n\n_c = ManagerInsights;\nexport default ManagerInsights;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManagerInsights\");","map":{"version":3,"sources":["/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/organisms/ManagerInsights/index.tsx"],"names":["React","Sankey","WidgetCard","Grid","makeStyles","Typography","Button","Dialog","DialogContent","DeeperInsights","useWindowSize","COLORS","_t_","ManagerInsights","data","width","useStyles","root","paddingLeft","outCome","paddingRight","Drivers","flexGrow","headings","paddintTop","fontSize","outcomesHead","color","TEXT_HIGH_EMPHASIS","paddingTop","paddingBottom","outcomeDiv","padding","height","optionsFont","fontFamily","fontWeight","letterSpacing","dialog","position","top","left","buttonFont","textTransform","sankey","classes","open","setOpen","useState","handleClickOpen","handleClose","containedPrimary","paper","justifyContent","alignItems","overflow","alignContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Sankey from '../../molecules/SankeyChart/index';\nimport WidgetCard from '../../atoms/WidgetCard';\nimport { Grid, makeStyles, Typography, Button } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DeeperInsights from '../DeeperInsights/index';\nimport { deeperInsight_deeperInsight as DashboardData } from '../../../gql/types';\nimport { useWindowSize } from '../../../utils/hooks/useWindowSize';\n\nimport { COLORS } from '../../../plTheme';\n\nimport { _t_ } from '../../../utils/translation/translation';\n\ninterface ManagerInsightsProps {\n  data: DashboardData | null | undefined;\n}\n\nconst ManagerInsights: React.FC<ManagerInsightsProps> = ({\n  data,\n}: ManagerInsightsProps) => {\n  const [width] = useWindowSize();\n  const useStyles = makeStyles({\n    root: {\n      paddingLeft: 0,\n    },\n    outCome: {\n      paddingRight: 200,\n    },\n    Drivers: {\n      flexGrow: 1,\n    },\n    headings: {\n      paddintTop: 7,\n      fontSize: 16,\n    },\n    outcomesHead: {\n      color: COLORS.TEXT_HIGH_EMPHASIS,\n      paddingTop: 30,\n      paddingBottom: 20,\n    },\n    outcomeDiv: {\n      padding: '25px 0px',\n      height: 641,\n    },\n    optionsFont: {\n      fontFamily: 'Rubik',\n      fontSize: 12,\n      fontWeight: 400,\n      letterSpacing: '0em',\n    },\n    dialog: {\n      position: 'absolute',\n      top: '7vh',\n      left: width > 1500 ? 400 : 150,\n      width: 1025,\n    },\n    buttonFont: {\n      fontFamily: 'Rubik',\n      fontWeight: 500,\n      fontSize: 14,\n      textTransform: 'none',\n      height: 40,\n      width: 154,\n    },\n    DeeperInsights: {\n      paddingRight: 15,\n    },\n    sankey: {\n      width: '90%',\n      height: 560,\n    },\n  });\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Typography variant=\"h2\" className={classes.outcomesHead}>\n        {_t_('Select outcome & drivers to view insights')}\n      </Typography>\n      <WidgetCard>\n        <Grid container direction=\"row\" className={classes.outcomeDiv}>\n          <Grid item xs={12} className={classes.root}>\n            <Grid container direction=\"column\">\n              <Grid item style={{ paddingLeft: 16 }}>\n                <Grid container direction=\"row\">\n                  <Grid item className={classes.outCome}>\n                    <Typography variant=\"h2\" className={classes.headings}>\n                      {_t_('Outcome')}\n                    </Typography>\n                  </Grid>\n                  <Grid item className={classes.Drivers}>\n                    <Typography variant=\"h2\" className={classes.headings}>\n                      {_t_('Drivers')}\n                    </Typography>\n                  </Grid>\n                  <Grid item className={classes.DeeperInsights}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      size=\"large\"\n                      onClick={handleClickOpen}\n                      classes={{ containedPrimary: classes.buttonFont }}\n                    >\n                      {_t_('Deeper insights')}\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item style={{ paddingTop: 25 }}>\n                <Grid container direction=\"row\">\n                  <Grid item>\n                    <Grid container direction=\"column\">\n                      <Grid item></Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item className={classes.sankey}>\n                    <Sankey />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </WidgetCard>\n      <Dialog\n        classes={{\n          paper: classes.dialog,\n        }}\n        open={open}\n        onClose={handleClose}\n        fullWidth\n        style={{\n          height: 900,\n          justifyContent: 'center',\n          alignItems: 'center',\n          overflow: 'hidden',\n          alignContent: 'center',\n        }}\n        maxWidth=\"lg\"\n      >\n        <DialogContent style={{ overflow: 'hidden' }}>\n          <DeeperInsights onclose={handleClose} data={data} />\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n\nexport default ManagerInsights;\n"]},"metadata":{},"sourceType":"module"}