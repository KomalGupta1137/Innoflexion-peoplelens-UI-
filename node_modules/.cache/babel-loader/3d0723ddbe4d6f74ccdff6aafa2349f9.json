{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/organisms/DeeperInsights/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Grid, makeStyles, Typography } from '@material-ui/core';\nimport { COLORS } from '../../../plTheme';\nimport LineGraph from '../../molecules/DepperInsightsGraph/index';\nimport close from '../../../../src/assets/close.png';\nimport { _t_ } from '../../../utils/translation/translation';\nimport WidgetCard from '../../atoms/WidgetCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    paddingLeft: 30,\n    padding: '1%',\n    background: '#D9D9D9',\n    opacity: 0.6\n  },\n  outcomesHead: {\n    color: COLORS.TEXT_HIGH_EMPHASIS,\n    paddingTop: 30,\n    paddingBottom: 20\n  },\n  outcomeDiv: {\n    paddingLeft: '5px '\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: '20px'\n  },\n  item: {\n    height: 605,\n    width: 'auto'\n  },\n  buttonFont: {\n    fontFamily: 'Rubik',\n    fontWeight: 500,\n    fontSize: 14,\n    textTransform: 'none'\n  },\n  GraphPadding: {\n    paddingRight: '50px'\n  },\n  GraphPadding1: {\n    paddingRight: '0px'\n  },\n  graphroot: {\n    height: 400,\n    width: 430,\n    padding: '0 12px'\n  }\n});\n\nconst DeeperInsights = ({\n  onclose,\n  data\n}) => {\n  _s();\n\n  var _data$graphData;\n\n  const classes = useStyles();\n\n  const imageClick = () => {\n    onclose();\n  };\n\n  const xaxisRange = [[1, 5], [40, 80], [10, 50], [10, 50], [10, 100]];\n  const yaxisRange = [[30, 60], [30, 60], [200, 550], [300, 550], [0, 60]];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.item,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justify: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                className: classes.title,\n                children: _t_('Deeper insights')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                paddingRight: '6rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: close,\n                alt: \"close\",\n                style: {\n                  width: 23,\n                  height: 23\n                },\n                onClick: () => imageClick()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            paddingTop: 20,\n            width: 1010\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            justify: \"space-between\",\n            style: {\n              height: '440px',\n              width: '915px',\n              overflow: 'auto'\n            },\n            children: data === null || data === void 0 ? void 0 : (_data$graphData = data.graphData) === null || _data$graphData === void 0 ? void 0 : _data$graphData.map((element, index) => {\n              var _data$graphData2;\n\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                className: index + 1 !== ((_data$graphData2 = data.graphData) === null || _data$graphData2 === void 0 ? void 0 : _data$graphData2.length) ? classes.GraphPadding : classes.GraphPadding1,\n                children: /*#__PURE__*/_jsxDEV(WidgetCard, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.graphroot,\n                    children: [/*#__PURE__*/_jsxDEV(LineGraph, {\n                      title1: (element === null || element === void 0 ? void 0 : element.title1) ? element.title1 : '',\n                      title2: (element === null || element === void 0 ? void 0 : element.title2) ? element.title2 : '',\n                      series: Object.assign([], element === null || element === void 0 ? void 0 : element.series),\n                      report: false,\n                      lineSeries: Object.assign([], element === null || element === void 0 ? void 0 : element.lineSeries),\n                      xaxisRange: xaxisRange[index],\n                      yaxisRange: yaxisRange[index]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        paddingTop: '2%'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            paddingTop: 26,\n            paddingBottom: 15\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            style: {\n              justifyContent: 'space-evenly',\n              width: 915\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                size: \"large\",\n                color: \"primary\",\n                variant: \"contained\",\n                style: {\n                  width: '300px',\n                  height: 40\n                },\n                classes: {\n                  containedSizeLarge: classes.buttonFont\n                },\n                children: _t_('Act')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                size: \"large\",\n                style: {\n                  width: '300px',\n                  height: 40\n                },\n                classes: {\n                  sizeLarge: classes.buttonFont\n                },\n                children: _t_('Do it later')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(DeeperInsights, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = DeeperInsights;\nexport default DeeperInsights;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeeperInsights\");","map":{"version":3,"sources":["/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/organisms/DeeperInsights/index.tsx"],"names":["React","Button","Grid","makeStyles","Typography","COLORS","LineGraph","close","_t_","WidgetCard","useStyles","root","paddingLeft","padding","background","opacity","outcomesHead","color","TEXT_HIGH_EMPHASIS","paddingTop","paddingBottom","outcomeDiv","title","fontWeight","fontSize","item","height","width","buttonFont","fontFamily","textTransform","GraphPadding","paddingRight","GraphPadding1","graphroot","DeeperInsights","onclose","data","classes","imageClick","xaxisRange","yaxisRange","overflow","graphData","map","element","index","length","title1","title2","Object","assign","series","lineSeries","justifyContent","containedSizeLarge","sizeLarge"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Grid, makeStyles, Typography } from '@material-ui/core';\nimport { COLORS } from '../../../plTheme';\nimport LineGraph from '../../molecules/DepperInsightsGraph/index';\nimport close from '../../../../src/assets/close.png';\nimport { _t_ } from '../../../utils/translation/translation';\nimport { deeperInsight_deeperInsight as DashboardData } from '../../../gql/types';\nimport WidgetCard from '../../atoms/WidgetCard';\n\ninterface DeeperInsightsProps {\n  onclose: any;\n  data: DashboardData | null | undefined;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    paddingLeft: 30,\n    padding: '1%',\n    background: '#D9D9D9',\n    opacity: 0.6,\n  },\n  outcomesHead: {\n    color: COLORS.TEXT_HIGH_EMPHASIS,\n    paddingTop: 30,\n    paddingBottom: 20,\n  },\n  outcomeDiv: {\n    paddingLeft: '5px ',\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: '20px',\n  },\n  item: {\n    height: 605,\n    width: 'auto',\n  },\n  buttonFont: {\n    fontFamily: 'Rubik',\n    fontWeight: 500,\n    fontSize: 14,\n    textTransform: 'none',\n  },\n  GraphPadding: {\n    paddingRight: '50px',\n  },\n  GraphPadding1: {\n    paddingRight: '0px',\n  },\n  graphroot: {\n    height: 400,\n    width: 430,\n    padding: '0 12px',\n  },\n});\n\nconst DeeperInsights: React.FC<DeeperInsightsProps> = ({\n  onclose,\n  data,\n}: DeeperInsightsProps) => {\n  const classes = useStyles();\n  const imageClick = () => {\n    onclose();\n  };\n  const xaxisRange = [\n    [1, 5],\n    [40, 80],\n    [10, 50],\n    [10, 50],\n    [10, 100],\n  ];\n  const yaxisRange = [\n    [30, 60],\n    [30, 60],\n    [200, 550],\n    [300, 550],\n    [0, 60],\n  ];\n  return (\n    <>\n      <div className={classes.item}>\n        <Grid container direction=\"column\" className={classes.root}>\n          <Grid item>\n            <Grid container direction=\"row\" justify=\"space-between\">\n              <Grid item>\n                <Typography variant=\"h3\" className={classes.title}>\n                  {_t_('Deeper insights')}\n                  {/* {' : '}\n                  {data?.graphData?.length} */}\n                </Typography>\n              </Grid>\n              <Grid item style={{ paddingRight: '6rem' }}>\n                <img\n                  src={close}\n                  alt=\"close\"\n                  style={{ width: 23, height: 23 }}\n                  onClick={() => imageClick()}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item style={{ paddingTop: 20, width: 1010 }}>\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"space-between\"\n              style={{ height: '440px', width: '915px', overflow: 'auto' }}\n            >\n              {data?.graphData?.map((element, index) => (\n                <Grid\n                  item\n                  className={\n                    index + 1 !== data.graphData?.length\n                      ? classes.GraphPadding\n                      : classes.GraphPadding1\n                  }\n                  key={index}\n                >\n                  <WidgetCard>\n                    <div className={classes.graphroot}>\n                      <LineGraph\n                        title1={element?.title1 ? element.title1 : ''}\n                        title2={element?.title2 ? element.title2 : ''}\n                        series={Object.assign([], element?.series)}\n                        report={false}\n                        lineSeries={Object.assign([], element?.lineSeries)}\n                        xaxisRange={xaxisRange[index]}\n                        yaxisRange={yaxisRange[index]}\n                      />\n                      <div style={{ paddingTop: '2%' }}></div>\n                    </div>\n                  </WidgetCard>\n                </Grid>\n              ))}\n            </Grid>\n          </Grid>\n          <Grid item style={{ paddingTop: 26, paddingBottom: 15 }}>\n            <Grid\n              container\n              direction=\"row\"\n              style={{ justifyContent: 'space-evenly', width: 915 }}\n            >\n              <Grid item>\n                <Button\n                  size=\"large\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  style={{ width: '300px', height: 40 }}\n                  classes={{ containedSizeLarge: classes.buttonFont }}\n                >\n                  {_t_('Act')}\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  size=\"large\"\n                  style={{ width: '300px', height: 40 }}\n                  classes={{ sizeLarge: classes.buttonFont }}\n                >\n                  {_t_('Do it later')}\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n};\n\nexport default DeeperInsights;\n"]},"metadata":{},"sourceType":"module"}