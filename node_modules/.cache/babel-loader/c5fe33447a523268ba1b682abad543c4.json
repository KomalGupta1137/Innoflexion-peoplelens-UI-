{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/molecules/BarAndLineGraph/index.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable @typescript-eslint/no-unsafe-return */\n\n/* eslint-disable @typescript-eslint/restrict-plus-operands */\n\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport React, { useEffect } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { COLORS } from '../../../plTheme';\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport { useGlobalStyles } from '../../../plStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n// const series1Data = [1.0, 1.0, 3.0, 2.0];\n// const series2Data = [3.0, 4.0, 3.0, 2.0];\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst BarAndLineGraph = ({\n  title1,\n  title2,\n  legend1,\n  legend2,\n  series1Data,\n  series2Data\n}) => {\n  _s();\n\n  const [chart1Data, setChart1Data] = React.useState(series1Data);\n  const [chart2Data, setChart2Data] = React.useState(series2Data);\n  const data1 = [{\n    y: 2,\n    description: '2'\n  }, {\n    y: 3,\n    description: '3'\n  }, {\n    y: 4,\n    description: '4'\n  }];\n  const data2 = [{\n    y: 2,\n    description: '2'\n  }, {\n    y: 3,\n    description: '3'\n  }, {\n    y: 4,\n    description: 'Lola'\n  }];\n  useEffect(() => {\n    setChart1Data(series1Data);\n    setChart2Data(series2Data);\n  }, [series1Data, series2Data]);\n  const options = {\n    exporting: {\n      enabled: false\n    },\n    credits: {\n      enabled: false\n    },\n    chart: {\n      type: 'column',\n      height: '70%',\n      width: '350'\n    },\n    tooltip: {\n      backgroundColor: COLORS.GENERAL_WHITE,\n      borderWidth: 1,\n      borderColor: 'RGBA(126, 133, 142, 0.2)',\n      shadow: false,\n      color: COLORS.GENERAL_WHITE,\n      shape: 'rect',\n      style: {\n        padding: 15,\n        fontFamily: 'Rubik',\n        fontWeight: 500,\n        // fontSize: 12,\n        color: COLORS.TEXT_HIGH_EMPHASIS,\n        fontSize: 13\n      }\n    },\n    title: {\n      text: null\n    },\n    subtitle: {\n      text: null\n    },\n    xAxis: {\n      type: 'category',\n      visible: false,\n      labels: {\n        enabled: false,\n        rotation: 0,\n        y: 35,\n        style: {\n          fontFamily: 'Mulish',\n          fontSize: '11px',\n          fontWeight: 600,\n          lineHeight: 15,\n          letterSpacing: 0.1,\n          color: COLORS.LEARNER_BAR_LABEL\n        }\n      }\n    },\n    yAxis: {\n      min: 0,\n      // max: 5,\n      visible: true,\n      labels: {\n        enabled: false\n      },\n      title: {\n        text: null\n      },\n      plotLines: [{\n        dashStyle: 'dash'\n      }],\n      gridLineColor: COLORS.LIGHT_GREY_50,\n      gridLineDashStyle: 'dash'\n    },\n    legend: {\n      enabled: true,\n      verticalAlign: 'top',\n      align: 'center',\n      symbolRadius: 0,\n      // x: -25,\n      squareSymbol: false,\n      itemStyle: {\n        fontFamily: 'Rubik',\n        fontSize: '12px',\n        fontWeight: 300,\n        lineHeight: 9.48,\n        letterSpacing: -0.13,\n        color: '#171F46'\n      }\n    },\n    labels: {\n      enabled: false\n    },\n    minorTickLength: 0,\n    tickLength: 0,\n    plotOptions: {\n      series: {\n        borderRadius: 3,\n        groupPadding: 0.5,\n        states: {\n          inactive: {\n            opacity: 1\n          },\n          active: {\n            opacity: 1\n          },\n          hover: {\n            enabled: false,\n            halo: null\n          }\n        }\n      },\n      column: {\n        pointWidth: 27\n      },\n      line: {\n        dashStyle: 'solid'\n      }\n    },\n    series: [{\n      name: legend1,\n      data: series1Data,\n      tooltip: {\n        headerFormat: '<span style=\"text-transform: uppercase; font-weight: 400;\">' + legend1 + '</span><br>',\n        pointFormat: '<span> {point.label:.1f }</span>',\n        backgroundColor: COLORS.GENERAL_WHITE,\n        borderWidth: 1,\n        borderColor: 'RGBA(126, 133, 142, 0.2)',\n        shadow: false,\n        color: COLORS.GENERAL_WHITE,\n        shape: 'rect',\n        style: {\n          padding: 15,\n          fontFamily: 'Rubik',\n          fontWeight: 500,\n          // fontSize: 12,\n          color: COLORS.TEXT_HIGH_EMPHASIS,\n          fontSize: 13\n        }\n      },\n      color: {\n        linearGradient: {\n          x1: 0,\n          x2: 0,\n          y1: 0,\n          y2: 1\n        },\n        stops: [[0, '#80CBF1'], [1, '#29B695']]\n      },\n      dataLabels: {\n        enabled: false\n      }\n    }, {\n      name: legend2,\n      type: 'line',\n      data: series2Data,\n      tooltip: {\n        headerFormat: '<span style=\"text-transform: uppercase; font-weight: 400;\">' + legend2 + '</span><br>',\n        pointFormat: '<span> {point.label:.1f }</span>',\n        backgroundColor: COLORS.GENERAL_WHITE,\n        borderWidth: 1,\n        borderColor: 'RGBA(126, 133, 142, 0.2)',\n        shadow: false,\n        color: COLORS.GENERAL_WHITE,\n        shape: 'rect',\n        style: {\n          padding: 15,\n          fontFamily: 'Rubik',\n          fontWeight: 500,\n          // fontSize: 12,\n          color: COLORS.TEXT_HIGH_EMPHASIS,\n          fontSize: 13\n        }\n      },\n      marker: {\n        fillColor: '#FFFFFF',\n        radius: 3.5,\n        lineWidth: 1,\n        lineColor: null\n      },\n      color: '#0055DC',\n      lineWidth: 1\n    }]\n  };\n  const globalClasses = useGlobalStyles();\n  const useStyles = makeStyles({\n    barTitle: {\n      width: '100%'\n    },\n    title: {\n      marginLeft: 8,\n      width: '100%',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    graph: {\n      marginLeft: 10\n    }\n  });\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"flex-start\",\n      alignItems: \"center\",\n      style: {\n        width: '100%'\n      },\n      spacing: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: classes.barTitle,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          color: \"textPrimary\",\n          align: \"center\",\n          className: `${globalClasses.h5Medium} ${classes.title}`,\n          children: title1 + ' vs. ' + title2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n          highcharts: Highcharts,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(BarAndLineGraph, \"jca+OwOZXwKn30+SxqJJQ6tjDKM=\", true, function () {\n  return [useGlobalStyles];\n});\n\n_c = BarAndLineGraph;\nexport default BarAndLineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarAndLineGraph\");","map":{"version":3,"sources":["/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/molecules/BarAndLineGraph/index.tsx"],"names":["React","useEffect","Highcharts","HighchartsReact","COLORS","Grid","makeStyles","Typography","useGlobalStyles","BarAndLineGraph","title1","title2","legend1","legend2","series1Data","series2Data","chart1Data","setChart1Data","useState","chart2Data","setChart2Data","data1","y","description","data2","options","exporting","enabled","credits","chart","type","height","width","tooltip","backgroundColor","GENERAL_WHITE","borderWidth","borderColor","shadow","color","shape","style","padding","fontFamily","fontWeight","TEXT_HIGH_EMPHASIS","fontSize","title","text","subtitle","xAxis","visible","labels","rotation","lineHeight","letterSpacing","LEARNER_BAR_LABEL","yAxis","min","plotLines","dashStyle","gridLineColor","LIGHT_GREY_50","gridLineDashStyle","legend","verticalAlign","align","symbolRadius","squareSymbol","itemStyle","minorTickLength","tickLength","plotOptions","series","borderRadius","groupPadding","states","inactive","opacity","active","hover","halo","column","pointWidth","line","name","data","headerFormat","pointFormat","linearGradient","x1","x2","y1","y2","stops","dataLabels","marker","fillColor","radius","lineWidth","lineColor","globalClasses","useStyles","barTitle","marginLeft","whiteSpace","overflow","textOverflow","graph","classes","h5Medium"],"mappings":";;;AAAA;;AACA;;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,UAA3B,QAA6C,mBAA7C;AACA,SAASC,eAAT,QAAgC,mBAAhC;;;;AAmBA;AACA;AAEA;AACA,MAAMC,eAA+C,GAAG,CAAC;AACvDC,EAAAA,MADuD;AAEvDC,EAAAA,MAFuD;AAGvDC,EAAAA,OAHuD;AAIvDC,EAAAA,OAJuD;AAKvDC,EAAAA,WALuD;AAMvDC,EAAAA;AANuD,CAAD,KAO5B;AAAA;;AAC1B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BjB,KAAK,CAACkB,QAAN,CAAeJ,WAAf,CAApC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BpB,KAAK,CAACkB,QAAN,CAAeH,WAAf,CAApC;AAEA,QAAMM,KAAK,GAAG,CACZ;AACEC,IAAAA,CAAC,EAAE,CADL;AAEEC,IAAAA,WAAW,EAAE;AAFf,GADY,EAKZ;AACED,IAAAA,CAAC,EAAE,CADL;AAEEC,IAAAA,WAAW,EAAE;AAFf,GALY,EASZ;AACED,IAAAA,CAAC,EAAE,CADL;AAEEC,IAAAA,WAAW,EAAE;AAFf,GATY,CAAd;AAeA,QAAMC,KAAK,GAAG,CACZ;AACEF,IAAAA,CAAC,EAAE,CADL;AAEEC,IAAAA,WAAW,EAAE;AAFf,GADY,EAKZ;AACED,IAAAA,CAAC,EAAE,CADL;AAEEC,IAAAA,WAAW,EAAE;AAFf,GALY,EASZ;AACED,IAAAA,CAAC,EAAE,CADL;AAEEC,IAAAA,WAAW,EAAE;AAFf,GATY,CAAd;AAeAtB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,aAAa,CAACH,WAAD,CAAb;AACAM,IAAAA,aAAa,CAACL,WAAD,CAAb;AACD,GAHQ,EAGN,CAACD,WAAD,EAAcC,WAAd,CAHM,CAAT;AAKA,QAAMU,OAAO,GAAG;AACdC,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EAAE;AADA,KADG;AAIdC,IAAAA,OAAO,EAAE;AACPD,MAAAA,OAAO,EAAE;AADF,KAJK;AAOdE,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,QADD;AAELC,MAAAA,MAAM,EAAE,KAFH;AAGLC,MAAAA,KAAK,EAAE;AAHF,KAPO;AAYdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,eAAe,EAAE9B,MAAM,CAAC+B,aADjB;AAEPC,MAAAA,WAAW,EAAE,CAFN;AAGPC,MAAAA,WAAW,EAAE,0BAHN;AAIPC,MAAAA,MAAM,EAAE,KAJD;AAKPC,MAAAA,KAAK,EAAEnC,MAAM,CAAC+B,aALP;AAMPK,MAAAA,KAAK,EAAE,MANA;AAOPC,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,EADJ;AAELC,QAAAA,UAAU,EAAE,OAFP;AAGLC,QAAAA,UAAU,EAAE,GAHP;AAIL;AACAL,QAAAA,KAAK,EAAEnC,MAAM,CAACyC,kBALT;AAMLC,QAAAA,QAAQ,EAAE;AANL;AAPA,KAZK;AA4BdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD,KA5BO;AA+BdC,IAAAA,QAAQ,EAAE;AACRD,MAAAA,IAAI,EAAE;AADE,KA/BI;AAkCdE,IAAAA,KAAK,EAAE;AACLpB,MAAAA,IAAI,EAAE,UADD;AAELqB,MAAAA,OAAO,EAAE,KAFJ;AAGLC,MAAAA,MAAM,EAAE;AACNzB,QAAAA,OAAO,EAAE,KADH;AAEN0B,QAAAA,QAAQ,EAAE,CAFJ;AAGN/B,QAAAA,CAAC,EAAE,EAHG;AAINmB,QAAAA,KAAK,EAAE;AACLE,UAAAA,UAAU,EAAE,QADP;AAELG,UAAAA,QAAQ,EAAE,MAFL;AAGLF,UAAAA,UAAU,EAAE,GAHP;AAILU,UAAAA,UAAU,EAAE,EAJP;AAKLC,UAAAA,aAAa,EAAE,GALV;AAMLhB,UAAAA,KAAK,EAAEnC,MAAM,CAACoD;AANT;AAJD;AAHH,KAlCO;AAmDdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,GAAG,EAAE,CADA;AAEL;AACAP,MAAAA,OAAO,EAAE,IAHJ;AAILC,MAAAA,MAAM,EAAE;AACNzB,QAAAA,OAAO,EAAE;AADH,OAJH;AAOLoB,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD,OAPF;AAULW,MAAAA,SAAS,EAAE,CACT;AACEC,QAAAA,SAAS,EAAE;AADb,OADS,CAVN;AAeLC,MAAAA,aAAa,EAAEzD,MAAM,CAAC0D,aAfjB;AAgBLC,MAAAA,iBAAiB,EAAE;AAhBd,KAnDO;AAqEdC,IAAAA,MAAM,EAAE;AACNrC,MAAAA,OAAO,EAAE,IADH;AAENsC,MAAAA,aAAa,EAAE,KAFT;AAGNC,MAAAA,KAAK,EAAE,QAHD;AAINC,MAAAA,YAAY,EAAE,CAJR;AAKN;AACAC,MAAAA,YAAY,EAAE,KANR;AAONC,MAAAA,SAAS,EAAE;AACT1B,QAAAA,UAAU,EAAE,OADH;AAETG,QAAAA,QAAQ,EAAE,MAFD;AAGTF,QAAAA,UAAU,EAAE,GAHH;AAITU,QAAAA,UAAU,EAAE,IAJH;AAKTC,QAAAA,aAAa,EAAE,CAAC,IALP;AAMThB,QAAAA,KAAK,EAAE;AANE;AAPL,KArEM;AAqFda,IAAAA,MAAM,EAAE;AACNzB,MAAAA,OAAO,EAAE;AADH,KArFM;AAwFd2C,IAAAA,eAAe,EAAE,CAxFH;AAyFdC,IAAAA,UAAU,EAAE,CAzFE;AA0FdC,IAAAA,WAAW,EAAE;AACXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,YAAY,EAAE,CADR;AAENC,QAAAA,YAAY,EAAE,GAFR;AAGNC,QAAAA,MAAM,EAAE;AACNC,UAAAA,QAAQ,EAAE;AACRC,YAAAA,OAAO,EAAE;AADD,WADJ;AAINC,UAAAA,MAAM,EAAE;AACND,YAAAA,OAAO,EAAE;AADH,WAJF;AAONE,UAAAA,KAAK,EAAE;AACLrD,YAAAA,OAAO,EAAE,KADJ;AAELsD,YAAAA,IAAI,EAAE;AAFD;AAPD;AAHF,OADG;AAiBXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,UAAU,EAAE;AADN,OAjBG;AAoBXC,MAAAA,IAAI,EAAE;AACJxB,QAAAA,SAAS,EAAE;AADP;AApBK,KA1FC;AAmHda,IAAAA,MAAM,EAAE,CACN;AACEY,MAAAA,IAAI,EAAEzE,OADR;AAEE0E,MAAAA,IAAI,EAAExE,WAFR;AAGEmB,MAAAA,OAAO,EAAE;AACPsD,QAAAA,YAAY,EACV,gEACA3E,OADA,GAEA,aAJK;AAKP4E,QAAAA,WAAW,EAAE,kCALN;AAMPtD,QAAAA,eAAe,EAAE9B,MAAM,CAAC+B,aANjB;AAOPC,QAAAA,WAAW,EAAE,CAPN;AAQPC,QAAAA,WAAW,EAAE,0BARN;AASPC,QAAAA,MAAM,EAAE,KATD;AAUPC,QAAAA,KAAK,EAAEnC,MAAM,CAAC+B,aAVP;AAWPK,QAAAA,KAAK,EAAE,MAXA;AAYPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,EADJ;AAELC,UAAAA,UAAU,EAAE,OAFP;AAGLC,UAAAA,UAAU,EAAE,GAHP;AAIL;AACAL,UAAAA,KAAK,EAAEnC,MAAM,CAACyC,kBALT;AAMLC,UAAAA,QAAQ,EAAE;AANL;AAZA,OAHX;AAwBEP,MAAAA,KAAK,EAAE;AACLkD,QAAAA,cAAc,EAAE;AACdC,UAAAA,EAAE,EAAE,CADU;AAEdC,UAAAA,EAAE,EAAE,CAFU;AAGdC,UAAAA,EAAE,EAAE,CAHU;AAIdC,UAAAA,EAAE,EAAE;AAJU,SADX;AAOLC,QAAAA,KAAK,EAAE,CACL,CAAC,CAAD,EAAI,SAAJ,CADK,EAEL,CAAC,CAAD,EAAI,SAAJ,CAFK;AAPF,OAxBT;AAoCEC,MAAAA,UAAU,EAAE;AACVpE,QAAAA,OAAO,EAAE;AADC;AApCd,KADM,EAyCN;AACE0D,MAAAA,IAAI,EAAExE,OADR;AAEEiB,MAAAA,IAAI,EAAE,MAFR;AAGEwD,MAAAA,IAAI,EAAEvE,WAHR;AAIEkB,MAAAA,OAAO,EAAE;AACPsD,QAAAA,YAAY,EACV,gEACA1E,OADA,GAEA,aAJK;AAKP2E,QAAAA,WAAW,EAAE,kCALN;AAMPtD,QAAAA,eAAe,EAAE9B,MAAM,CAAC+B,aANjB;AAOPC,QAAAA,WAAW,EAAE,CAPN;AAQPC,QAAAA,WAAW,EAAE,0BARN;AASPC,QAAAA,MAAM,EAAE,KATD;AAUPC,QAAAA,KAAK,EAAEnC,MAAM,CAAC+B,aAVP;AAWPK,QAAAA,KAAK,EAAE,MAXA;AAYPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,EADJ;AAELC,UAAAA,UAAU,EAAE,OAFP;AAGLC,UAAAA,UAAU,EAAE,GAHP;AAIL;AACAL,UAAAA,KAAK,EAAEnC,MAAM,CAACyC,kBALT;AAMLC,UAAAA,QAAQ,EAAE;AANL;AAZA,OAJX;AAyBEkD,MAAAA,MAAM,EAAE;AACNC,QAAAA,SAAS,EAAE,SADL;AAENC,QAAAA,MAAM,EAAE,GAFF;AAGNC,QAAAA,SAAS,EAAE,CAHL;AAINC,QAAAA,SAAS,EAAE;AAJL,OAzBV;AA+BE7D,MAAAA,KAAK,EAAE,SA/BT;AAgCE4D,MAAAA,SAAS,EAAE;AAhCb,KAzCM;AAnHM,GAAhB;AAiMA,QAAME,aAAa,GAAG7F,eAAe,EAArC;AAEA,QAAM8F,SAAS,GAAGhG,UAAU,CAAC;AAC3BiG,IAAAA,QAAQ,EAAE;AACRvE,MAAAA,KAAK,EAAE;AADC,KADiB;AAI3Be,IAAAA,KAAK,EAAE;AACLyD,MAAAA,UAAU,EAAE,CADP;AAELxE,MAAAA,KAAK,EAAE,MAFF;AAGLyE,MAAAA,UAAU,EAAE,QAHP;AAILC,MAAAA,QAAQ,EAAE,QAJL;AAKLC,MAAAA,YAAY,EAAE;AALT,KAJoB;AAW3BC,IAAAA,KAAK,EAAE;AACLJ,MAAAA,UAAU,EAAE;AADP;AAXoB,GAAD,CAA5B;AAgBA,QAAMK,OAAO,GAAGP,SAAS,EAAzB;AAEA,sBACE;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,SAAS,EAAC,QAFZ;AAGE,MAAA,OAAO,EAAC,YAHV;AAIE,MAAA,UAAU,EAAC,QAJb;AAKE,MAAA,KAAK,EAAE;AAAEtE,QAAAA,KAAK,EAAE;AAAT,OALT;AAME,MAAA,OAAO,EAAE,CANX;AAAA,8BAQE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,SAAS,EAAE6E,OAAO,CAACN,QAA9B;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,OAAO,EAAC,IADV;AAEE,UAAA,KAAK,EAAC,aAFR;AAGE,UAAA,KAAK,EAAC,QAHR;AAIE,UAAA,SAAS,EAAG,GAAEF,aAAa,CAACS,QAAS,IAAGD,OAAO,CAAC9D,KAAM,EAJxD;AAAA,oBAMGrC,MAAM,GAAG,OAAT,GAAmBC;AANtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAkBE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,+BACE,QAAC,eAAD;AAAiB,UAAA,UAAU,EAAET,UAA7B;AAAyC,UAAA,OAAO,EAAEuB;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA0BD,CA7RD;;GAAMhB,e;UA+OkBD,e;;;KA/OlBC,e;AA+RN,eAAeA,eAAf","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-return */\n/* eslint-disable @typescript-eslint/restrict-plus-operands */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport React, { useEffect } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { COLORS } from '../../../plTheme';\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport { useGlobalStyles } from '../../../plStyles';\nimport { getLearningData_getLearningData_learningParticipation } from '../../../gql/types';\nimport { _t_ } from '../../../utils/translation/translation';\n\nexport interface BarAndLineGraphProps {\n  title1: string | null | undefined;\n  title2: string | null | undefined;\n  legend1: string | null | undefined;\n  legend2: string | null | undefined;\n  series1Data:\n    | (number | { x: number; y: number | null; label: string | null } | null)[]\n    | null\n    | undefined;\n  series2Data:\n    | (number | { x: number; y: number | null; label: string | null } | null)[]\n    | null\n    | undefined;\n}\n\n// const series1Data = [1.0, 1.0, 3.0, 2.0];\n// const series2Data = [3.0, 4.0, 3.0, 2.0];\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst BarAndLineGraph: React.FC<BarAndLineGraphProps> = ({\n  title1,\n  title2,\n  legend1,\n  legend2,\n  series1Data,\n  series2Data,\n}: BarAndLineGraphProps) => {\n  const [chart1Data, setChart1Data] = React.useState(series1Data);\n  const [chart2Data, setChart2Data] = React.useState(series2Data);\n\n  const data1 = [\n    {\n      y: 2,\n      description: '2',\n    },\n    {\n      y: 3,\n      description: '3',\n    },\n    {\n      y: 4,\n      description: '4',\n    },\n  ];\n\n  const data2 = [\n    {\n      y: 2,\n      description: '2',\n    },\n    {\n      y: 3,\n      description: '3',\n    },\n    {\n      y: 4,\n      description: 'Lola',\n    },\n  ];\n\n  useEffect(() => {\n    setChart1Data(series1Data);\n    setChart2Data(series2Data);\n  }, [series1Data, series2Data]);\n\n  const options = {\n    exporting: {\n      enabled: false,\n    },\n    credits: {\n      enabled: false,\n    },\n    chart: {\n      type: 'column',\n      height: '70%',\n      width: '350',\n    },\n    tooltip: {\n      backgroundColor: COLORS.GENERAL_WHITE,\n      borderWidth: 1,\n      borderColor: 'RGBA(126, 133, 142, 0.2)',\n      shadow: false,\n      color: COLORS.GENERAL_WHITE,\n      shape: 'rect',\n      style: {\n        padding: 15,\n        fontFamily: 'Rubik',\n        fontWeight: 500,\n        // fontSize: 12,\n        color: COLORS.TEXT_HIGH_EMPHASIS,\n        fontSize: 13,\n      },\n    },\n    title: {\n      text: null,\n    },\n    subtitle: {\n      text: null,\n    },\n    xAxis: {\n      type: 'category',\n      visible: false,\n      labels: {\n        enabled: false,\n        rotation: 0,\n        y: 35,\n        style: {\n          fontFamily: 'Mulish',\n          fontSize: '11px',\n          fontWeight: 600,\n          lineHeight: 15,\n          letterSpacing: 0.1,\n          color: COLORS.LEARNER_BAR_LABEL,\n        },\n      },\n    },\n    yAxis: {\n      min: 0,\n      // max: 5,\n      visible: true,\n      labels: {\n        enabled: false,\n      },\n      title: {\n        text: null,\n      },\n      plotLines: [\n        {\n          dashStyle: 'dash',\n        },\n      ],\n      gridLineColor: COLORS.LIGHT_GREY_50,\n      gridLineDashStyle: 'dash',\n    },\n    legend: {\n      enabled: true,\n      verticalAlign: 'top',\n      align: 'center',\n      symbolRadius: 0,\n      // x: -25,\n      squareSymbol: false,\n      itemStyle: {\n        fontFamily: 'Rubik',\n        fontSize: '12px',\n        fontWeight: 300,\n        lineHeight: 9.48,\n        letterSpacing: -0.13,\n        color: '#171F46',\n      },\n    },\n    labels: {\n      enabled: false,\n    },\n    minorTickLength: 0,\n    tickLength: 0,\n    plotOptions: {\n      series: {\n        borderRadius: 3,\n        groupPadding: 0.5,\n        states: {\n          inactive: {\n            opacity: 1,\n          },\n          active: {\n            opacity: 1,\n          },\n          hover: {\n            enabled: false,\n            halo: null,\n          },\n        },\n      },\n      column: {\n        pointWidth: 27,\n      },\n      line: {\n        dashStyle: 'solid',\n      },\n    },\n\n    series: [\n      {\n        name: legend1,\n        data: series1Data,\n        tooltip: {\n          headerFormat:\n            '<span style=\"text-transform: uppercase; font-weight: 400;\">' +\n            legend1 +\n            '</span><br>',\n          pointFormat: '<span> {point.label:.1f }</span>',\n          backgroundColor: COLORS.GENERAL_WHITE,\n          borderWidth: 1,\n          borderColor: 'RGBA(126, 133, 142, 0.2)',\n          shadow: false,\n          color: COLORS.GENERAL_WHITE,\n          shape: 'rect',\n          style: {\n            padding: 15,\n            fontFamily: 'Rubik',\n            fontWeight: 500,\n            // fontSize: 12,\n            color: COLORS.TEXT_HIGH_EMPHASIS,\n            fontSize: 13,\n          },\n        },\n        color: {\n          linearGradient: {\n            x1: 0,\n            x2: 0,\n            y1: 0,\n            y2: 1,\n          },\n          stops: [\n            [0, '#80CBF1'],\n            [1, '#29B695'],\n          ],\n        },\n        dataLabels: {\n          enabled: false,\n        },\n      },\n      {\n        name: legend2,\n        type: 'line',\n        data: series2Data,\n        tooltip: {\n          headerFormat:\n            '<span style=\"text-transform: uppercase; font-weight: 400;\">' +\n            legend2 +\n            '</span><br>',\n          pointFormat: '<span> {point.label:.1f }</span>',\n          backgroundColor: COLORS.GENERAL_WHITE,\n          borderWidth: 1,\n          borderColor: 'RGBA(126, 133, 142, 0.2)',\n          shadow: false,\n          color: COLORS.GENERAL_WHITE,\n          shape: 'rect',\n          style: {\n            padding: 15,\n            fontFamily: 'Rubik',\n            fontWeight: 500,\n            // fontSize: 12,\n            color: COLORS.TEXT_HIGH_EMPHASIS,\n            fontSize: 13,\n          },\n        },\n        marker: {\n          fillColor: '#FFFFFF',\n          radius: 3.5,\n          lineWidth: 1,\n          lineColor: null,\n        },\n        color: '#0055DC',\n        lineWidth: 1,\n      },\n    ],\n  };\n\n  const globalClasses = useGlobalStyles();\n\n  const useStyles = makeStyles({\n    barTitle: {\n      width: '100%',\n    },\n    title: {\n      marginLeft: 8,\n      width: '100%',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n    },\n    graph: {\n      marginLeft: 10,\n    },\n  });\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n        style={{ width: '100%' }}\n        spacing={1}\n      >\n        <Grid item className={classes.barTitle}>\n          <Typography\n            variant=\"h5\"\n            color=\"textPrimary\"\n            align=\"center\"\n            className={`${globalClasses.h5Medium} ${classes.title}`}\n          >\n            {title1 + ' vs. ' + title2}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <HighchartsReact highcharts={Highcharts} options={options} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default BarAndLineGraph;\n"]},"metadata":{},"sourceType":"module"}