{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/molecules/CircularProgressWidget/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useGlobalStyles } from '../../../plStyles';\nimport { COLORS } from '../../../plTheme';\nimport CircleProgress from '../../atoms/CircleProgress';\nimport WidgetCard from '../../atoms/WidgetCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CircularProgressWidget = ({\n  percentage,\n  variant,\n  title\n}) => {\n  _s();\n\n  const useStyles = makeStyles({\n    main: {\n      padding: title == 'Win Rate' && variant == 'small' ? 10 : 16,\n      paddingLeft: variant === 'large1' || variant === 'small1' ? 10 : 16\n    },\n    heading: {\n      color: COLORS.TEXT_LOW_EMPHASIS,\n      textTransform: 'uppercase'\n    },\n    donut: {\n      margin: '0px auto 20px auto'\n    }\n  });\n  const classes = useStyles();\n  const globalClasses = useGlobalStyles();\n  return /*#__PURE__*/_jsxDEV(WidgetCard, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"space-between\",\n      style: {\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: classes.main,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: globalClasses.body1WidgetTitle,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.donut,\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: variant === 'large' || variant === 'large1' || variant === 'rep' ? 111 : 88,\n            height: variant === 'large' || variant === 'large1' || variant === 'rep' ? 111 : 88,\n            marginBottom: variant === 'large' || variant === 'large1' ? 25 : variant == 'rep' ? 30 : 25\n          },\n          children: /*#__PURE__*/_jsxDEV(CircleProgress, {\n            percentage: percentage ? Math.trunc(percentage * 10) / 10 : 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CircularProgressWidget, \"+MxyZrEJ6fwBdqLdd4iSUSEX3hM=\", true, function () {\n  return [useGlobalStyles];\n});\n\n_c = CircularProgressWidget;\nexport default CircularProgressWidget;\n\nvar _c;\n\n$RefreshReg$(_c, \"CircularProgressWidget\");","map":{"version":3,"sources":["/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/molecules/CircularProgressWidget/index.tsx"],"names":["Grid","makeStyles","Typography","React","useGlobalStyles","COLORS","CircleProgress","WidgetCard","CircularProgressWidget","percentage","variant","title","useStyles","main","padding","paddingLeft","heading","color","TEXT_LOW_EMPHASIS","textTransform","donut","margin","classes","globalClasses","height","body1WidgetTitle","display","justifyContent","alignItems","width","marginBottom","Math","trunc"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,UAAf,EAA2BC,UAA3B,QAA6C,mBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;;AAQA,MAAMC,sBAAuD,GAAG,CAAC;AAC/DC,EAAAA,UAD+D;AAE/DC,EAAAA,OAF+D;AAG/DC,EAAAA;AAH+D,CAAD,KAInC;AAAA;;AAC3B,QAAMC,SAAS,GAAGX,UAAU,CAAC;AAC3BY,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAEH,KAAK,IAAI,UAAT,IAAuBD,OAAO,IAAI,OAAlC,GAA4C,EAA5C,GAAiD,EADtD;AAEJK,MAAAA,WAAW,EAAEL,OAAO,KAAK,QAAZ,IAAwBA,OAAO,KAAK,QAApC,GAA+C,EAA/C,GAAoD;AAF7D,KADqB;AAK3BM,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAEZ,MAAM,CAACa,iBADP;AAEPC,MAAAA,aAAa,EAAE;AAFR,KALkB;AAS3BC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AADH;AAToB,GAAD,CAA5B;AAcA,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAMW,aAAa,GAAGnB,eAAe,EAArC;AAEA,sBACE,QAAC,UAAD;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,SAAS,EAAC,QAFZ;AAGE,MAAA,OAAO,EAAC,eAHV;AAIE,MAAA,KAAK,EAAE;AAAEoB,QAAAA,MAAM,EAAE;AAAV,OAJT;AAAA,8BAME,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,SAAS,EAAEF,OAAO,CAACT,IAA9B;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,SAAS,EAAEU,aAAa,CAACE,gBAArC;AAAA,oBACGd;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eAWE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,+BACE;AACE,UAAA,SAAS,EAAEW,OAAO,CAACF,KADrB;AAEE,UAAA,KAAK,EAAE;AACLM,YAAAA,OAAO,EAAE,MADJ;AAELC,YAAAA,cAAc,EAAE,QAFX;AAGLC,YAAAA,UAAU,EAAE,QAHP;AAILC,YAAAA,KAAK,EACHnB,OAAO,KAAK,OAAZ,IAAuBA,OAAO,KAAK,QAAnC,IAA+CA,OAAO,KAAK,KAA3D,GACI,GADJ,GAEI,EAPD;AAQLc,YAAAA,MAAM,EACJd,OAAO,KAAK,OAAZ,IAAuBA,OAAO,KAAK,QAAnC,IAA+CA,OAAO,KAAK,KAA3D,GACI,GADJ,GAEI,EAXD;AAYLoB,YAAAA,YAAY,EACVpB,OAAO,KAAK,OAAZ,IAAuBA,OAAO,KAAK,QAAnC,GACI,EADJ,GAEIA,OAAO,IAAI,KAAX,GACA,EADA,GAEA;AAjBD,WAFT;AAAA,iCAsBE,QAAC,cAAD;AACE,YAAA,UAAU,EAAED,UAAU,GAAGsB,IAAI,CAACC,KAAL,CAAWvB,UAAU,GAAG,EAAxB,IAA8B,EAAjC,GAAsC;AAD9D;AAAA;AAAA;AAAA;AAAA;AAtBF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD,CAlED;;GAAMD,sB;UAoBkBJ,e;;;KApBlBI,sB;AAoEN,eAAeA,sBAAf","sourcesContent":["import { Grid, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useGlobalStyles } from '../../../plStyles';\nimport { COLORS } from '../../../plTheme';\nimport CircleProgress from '../../atoms/CircleProgress';\nimport WidgetCard from '../../atoms/WidgetCard';\n\ninterface CircularProgressProps {\n  percentage?: number | null;\n  variant: string;\n  title: string;\n}\n\nconst CircularProgressWidget: React.FC<CircularProgressProps> = ({\n  percentage,\n  variant,\n  title,\n}: CircularProgressProps) => {\n  const useStyles = makeStyles({\n    main: {\n      padding: title == 'Win Rate' && variant == 'small' ? 10 : 16,\n      paddingLeft: variant === 'large1' || variant === 'small1' ? 10 : 16,\n    },\n    heading: {\n      color: COLORS.TEXT_LOW_EMPHASIS,\n      textTransform: 'uppercase',\n    },\n    donut: {\n      margin: '0px auto 20px auto',\n    },\n  });\n\n  const classes = useStyles();\n  const globalClasses = useGlobalStyles();\n\n  return (\n    <WidgetCard>\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        style={{ height: '100%' }}\n      >\n        <Grid item className={classes.main}>\n          <Typography className={globalClasses.body1WidgetTitle}>\n            {title}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <div\n            className={classes.donut}\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              width:\n                variant === 'large' || variant === 'large1' || variant === 'rep'\n                  ? 111\n                  : 88,\n              height:\n                variant === 'large' || variant === 'large1' || variant === 'rep'\n                  ? 111\n                  : 88,\n              marginBottom:\n                variant === 'large' || variant === 'large1'\n                  ? 25\n                  : variant == 'rep'\n                  ? 30\n                  : 25,\n            }}\n          >\n            <CircleProgress\n              percentage={percentage ? Math.trunc(percentage * 10) / 10 : 0}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </WidgetCard>\n  );\n};\n\nexport default CircularProgressWidget;\n"]},"metadata":{},"sourceType":"module"}