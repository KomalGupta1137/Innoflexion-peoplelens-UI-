{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Current/peoplelens_ui/src/auth/Auth0Callback.tsx\",\n    _s = $RefreshSig$();\n\nimport { useAuth0 } from '@auth0/auth0-react';\nimport React, { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport Loader from '../components/atoms/Loader';\nimport logger from '../utils/logger/logger';\nimport { isEmpty } from 'lodash-es';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Auth0Callback() {\n  _s();\n\n  const {\n    // getAccessTokenSilently,\n    getAccessTokenWithPopup,\n    loginWithRedirect,\n    getIdTokenClaims\n  } = useAuth0();\n  const history = useHistory();\n  useEffect(() => {\n    const getUserMetadata = async () => {\n      const domain = process.env.REACT_APP_AUTH0_DOMAIN || '';\n\n      try {\n        const accessToken = await getAccessTokenWithPopup({\n          audience: `https://${domain}/api/v2/`,\n          scope: 'openid email profile'\n        });\n\n        if (isEmpty(accessToken)) {\n          await loginWithRedirect({\n            audience: `https://${domain}/api/v2/`,\n            scope: 'openid email profile'\n          });\n        }\n\n        const user = await getIdTokenClaims({\n          audience: `https://${domain}/api/v2/`\n        });\n        pendo.initialize({\n          visitor: {\n            id: user.email,\n            email: user.email,\n            // eslint-disable-next-line camelcase\n            full_name: user.name\n          },\n          account: {\n            id: domain\n          }\n        });\n        const idToken = user['__raw'];\n        const fetchResponse = await fetch(`${process.env.REACT_APP_API_BASE || ''}/api/token`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${idToken}`\n          },\n          credentials: 'omit'\n        });\n        const fetchResponseAsJson = await fetchResponse.json();\n        localStorage.setItem('accessToken', fetchResponseAsJson ? fetchResponseAsJson.jwtToken : '');\n        history.push('/dashboard'); //history.length <= 1 ? history.push('/dashboard') : history.goBack();\n      } catch (e) {\n        logger.error(e.message);\n      }\n    };\n\n    void getUserMetadata();\n  }, [getAccessTokenWithPopup, loginWithRedirect, getIdTokenClaims, history]);\n  return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Auth0Callback, \"lVZ3rFpkrsc0YOXlXEQQwBBQ8cg=\", false, function () {\n  return [useAuth0, useHistory];\n});\n\n_c = Auth0Callback;\nexport default Auth0Callback;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth0Callback\");","map":{"version":3,"sources":["/home/komal/Documents/Current/peoplelens_ui/src/auth/Auth0Callback.tsx"],"names":["useAuth0","React","useEffect","useHistory","Loader","logger","isEmpty","Auth0Callback","getAccessTokenWithPopup","loginWithRedirect","getIdTokenClaims","history","getUserMetadata","domain","process","env","REACT_APP_AUTH0_DOMAIN","accessToken","audience","scope","user","pendo","initialize","visitor","id","email","full_name","name","account","idToken","fetchResponse","fetch","REACT_APP_API_BASE","method","headers","Authorization","credentials","fetchResponseAsJson","json","localStorage","setItem","jwtToken","push","e","error","message"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,OAAT,QAAwB,WAAxB;;;AAIA,SAASC,aAAT,GAAyB;AAAA;;AACvB,QAAM;AACJ;AACAC,IAAAA,uBAFI;AAGJC,IAAAA,iBAHI;AAIJC,IAAAA;AAJI,MAKFV,QAAQ,EALZ;AAMA,QAAMW,OAAO,GAAGR,UAAU,EAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,eAAe,GAAG,YAAY;AAClC,YAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,sBAAZ,IAAsC,EAArD;;AACA,UAAI;AACF,cAAMC,WAAW,GAAG,MAAMT,uBAAuB,CAAC;AAChDU,UAAAA,QAAQ,EAAG,WAAUL,MAAO,UADoB;AAEhDM,UAAAA,KAAK,EAAE;AAFyC,SAAD,CAAjD;;AAIA,YAAIb,OAAO,CAACW,WAAD,CAAX,EAA0B;AACxB,gBAAMR,iBAAiB,CAAC;AACtBS,YAAAA,QAAQ,EAAG,WAAUL,MAAO,UADN;AAEtBM,YAAAA,KAAK,EAAE;AAFe,WAAD,CAAvB;AAID;;AAED,cAAMC,IAAI,GAAG,MAAMV,gBAAgB,CAAC;AAClCQ,UAAAA,QAAQ,EAAG,WAAUL,MAAO;AADM,SAAD,CAAnC;AAGAQ,QAAAA,KAAK,CAACC,UAAN,CAAiB;AACfC,UAAAA,OAAO,EAAE;AACPC,YAAAA,EAAE,EAAEJ,IAAI,CAACK,KADF;AAEPA,YAAAA,KAAK,EAAEL,IAAI,CAACK,KAFL;AAGP;AACAC,YAAAA,SAAS,EAAEN,IAAI,CAACO;AAJT,WADM;AAOfC,UAAAA,OAAO,EAAE;AACPJ,YAAAA,EAAE,EAAEX;AADG;AAPM,SAAjB;AAWA,cAAMgB,OAAO,GAAGT,IAAI,CAAC,OAAD,CAApB;AACA,cAAMU,aAAa,GAAG,MAAMC,KAAK,CAC9B,GAAEjB,OAAO,CAACC,GAAR,CAAYiB,kBAAZ,IAAkC,EAAG,YADT,EAE/B;AACEC,UAAAA,MAAM,EAAE,KADV;AAEEC,UAAAA,OAAO,EAAE;AACP,4BAAgB,kBADT;AAEPC,YAAAA,aAAa,EAAG,UAASN,OAAQ;AAF1B,WAFX;AAMEO,UAAAA,WAAW,EAAE;AANf,SAF+B,CAAjC;AAWA,cAAMC,mBAAmB,GAAG,MAAMP,aAAa,CAACQ,IAAd,EAAlC;AACAC,QAAAA,YAAY,CAACC,OAAb,CACE,aADF,EAEEH,mBAAmB,GAAGA,mBAAmB,CAACI,QAAvB,GAAkC,EAFvD;AAIA9B,QAAAA,OAAO,CAAC+B,IAAR,CAAa,YAAb,EA3CE,CA4CF;AACD,OA7CD,CA6CE,OAAOC,CAAP,EAAU;AACVtC,QAAAA,MAAM,CAACuC,KAAP,CAAaD,CAAC,CAACE,OAAf;AACD;AACF,KAlDD;;AAmDA,SAAKjC,eAAe,EAApB;AACD,GArDQ,EAqDN,CAACJ,uBAAD,EAA0BC,iBAA1B,EAA6CC,gBAA7C,EAA+DC,OAA/D,CArDM,CAAT;AAuDA,sBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAjEQJ,a;UAMHP,Q,EACYG,U;;;KAPTI,a;AAmET,eAAeA,aAAf","sourcesContent":["import { useAuth0 } from '@auth0/auth0-react';\nimport React, { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport Loader from '../components/atoms/Loader';\nimport logger from '../utils/logger/logger';\nimport { isEmpty } from 'lodash-es';\n\ndeclare const pendo: any;\n\nfunction Auth0Callback() {\n  const {\n    // getAccessTokenSilently,\n    getAccessTokenWithPopup,\n    loginWithRedirect,\n    getIdTokenClaims,\n  } = useAuth0();\n  const history = useHistory();\n\n  useEffect(() => {\n    const getUserMetadata = async () => {\n      const domain = process.env.REACT_APP_AUTH0_DOMAIN || '';\n      try {\n        const accessToken = await getAccessTokenWithPopup({\n          audience: `https://${domain}/api/v2/`,\n          scope: 'openid email profile',\n        });\n        if (isEmpty(accessToken)) {\n          await loginWithRedirect({\n            audience: `https://${domain}/api/v2/`,\n            scope: 'openid email profile',\n          });\n        }\n\n        const user = await getIdTokenClaims({\n          audience: `https://${domain}/api/v2/`,\n        });\n        pendo.initialize({\n          visitor: {\n            id: user.email,\n            email: user.email,\n            // eslint-disable-next-line camelcase\n            full_name: user.name,\n          },\n          account: {\n            id: domain,\n          },\n        });\n        const idToken = user['__raw'];\n        const fetchResponse = await fetch(\n          `${process.env.REACT_APP_API_BASE || ''}/api/token`,\n          {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${idToken}`,\n            },\n            credentials: 'omit',\n          },\n        );\n        const fetchResponseAsJson = await fetchResponse.json();\n        localStorage.setItem(\n          'accessToken',\n          fetchResponseAsJson ? fetchResponseAsJson.jwtToken : '',\n        );\n        history.push('/dashboard');\n        //history.length <= 1 ? history.push('/dashboard') : history.goBack();\n      } catch (e) {\n        logger.error(e.message);\n      }\n    };\n    void getUserMetadata();\n  }, [getAccessTokenWithPopup, loginWithRedirect, getIdTokenClaims, history]);\n\n  return <Loader />;\n}\n\nexport default Auth0Callback;\n"]},"metadata":{},"sourceType":"module"}