{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/atoms/Icon.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  large: {\n    height: '40px',\n    width: '25px'\n  },\n  small: {\n    height: '10.61px',\n    width: '11.21px'\n  },\n  medium: {\n    height: '21px',\n    width: '21px'\n  },\n  smallMedium: {\n    height: '18px',\n    width: '18px'\n  }\n}));\n\nconst Icon = ({\n  title,\n  imageSrc,\n  imageSize,\n  height = '',\n  width = ''\n}) => {\n  _s();\n\n  const classes = useStyles();\n  let className = classes.small;\n\n  if (imageSize === 'large') {\n    className = classes.large;\n  } else if (imageSize === 'medium') {\n    className = classes.medium;\n  } else if (imageSize === 'smallMedium') {\n    className = classes.smallMedium;\n  } // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\n\n  if (height != '' && width != '') return /*#__PURE__*/_jsxDEV(CardMedia, {\n    style: {\n      height: height,\n      width: width\n    },\n    title: title,\n    image: imageSrc\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);else return /*#__PURE__*/_jsxDEV(CardMedia, {\n    className: className,\n    title: title,\n    image: imageSrc\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Icon, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Icon;\nexport default Icon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Icon\");","map":{"version":3,"sources":["/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/atoms/Icon.tsx"],"names":["React","CardMedia","makeStyles","useStyles","theme","large","height","width","small","medium","smallMedium","Icon","title","imageSrc","imageSize","classes","className"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,MADH;AAELC,IAAAA,KAAK,EAAE;AAFF,GADgC;AAKvCC,EAAAA,KAAK,EAAE;AACLF,IAAAA,MAAM,EAAE,SADH;AAELC,IAAAA,KAAK,EAAE;AAFF,GALgC;AASvCE,EAAAA,MAAM,EAAE;AACNH,IAAAA,MAAM,EAAE,MADF;AAENC,IAAAA,KAAK,EAAE;AAFD,GAT+B;AAavCG,EAAAA,WAAW,EAAE;AACXJ,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,KAAK,EAAE;AAFI;AAb0B,CAAZ,CAAD,CAA5B;;AA2BA,MAAMI,IAA0B,GAAG,CAAC;AAClCC,EAAAA,KADkC;AAElCC,EAAAA,QAFkC;AAGlCC,EAAAA,SAHkC;AAIlCR,EAAAA,MAAM,GAAG,EAJyB;AAKlCC,EAAAA,KAAK,GAAG;AAL0B,CAAD,KAMjB;AAAA;;AAChB,QAAMQ,OAAO,GAAGZ,SAAS,EAAzB;AACA,MAAIa,SAAS,GAAGD,OAAO,CAACP,KAAxB;;AACA,MAAIM,SAAS,KAAK,OAAlB,EAA2B;AACzBE,IAAAA,SAAS,GAAGD,OAAO,CAACV,KAApB;AACD,GAFD,MAEO,IAAIS,SAAS,KAAK,QAAlB,EAA4B;AACjCE,IAAAA,SAAS,GAAGD,OAAO,CAACN,MAApB;AACD,GAFM,MAEA,IAAIK,SAAS,KAAK,aAAlB,EAAiC;AACtCE,IAAAA,SAAS,GAAGD,OAAO,CAACL,WAApB;AACD,GATe,CAUhB;;;AACA,MAAIJ,MAAM,IAAI,EAAV,IAAgBC,KAAK,IAAI,EAA7B,EACE,oBACE,QAAC,SAAD;AACE,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM,EAAEA,MAAV;AAAkBC,MAAAA,KAAK,EAAEA;AAAzB,KADT;AAEE,IAAA,KAAK,EAAEK,KAFT;AAGE,IAAA,KAAK,EAAEC;AAHT;AAAA;AAAA;AAAA;AAAA,UADF,CADF,KASE,oBAAO,QAAC,SAAD;AAAW,IAAA,SAAS,EAAEG,SAAtB;AAAiC,IAAA,KAAK,EAAEJ,KAAxC;AAA+C,IAAA,KAAK,EAAEC;AAAtD;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CA3BD;;GAAMF,I;UAOYR,S;;;KAPZQ,I;AA6BN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  large: {\n    height: '40px',\n    width: '25px',\n  },\n  small: {\n    height: '10.61px',\n    width: '11.21px',\n  },\n  medium: {\n    height: '21px',\n    width: '21px',\n  },\n  smallMedium: {\n    height: '18px',\n    width: '18px',\n  },\n}));\n\nexport interface ImageProps {\n  title: string;\n  imageSrc: any;\n  imageSize: string;\n  height?: any;\n  width?: any;\n}\n\nconst Icon: React.FC<ImageProps> = ({\n  title,\n  imageSrc,\n  imageSize,\n  height = '',\n  width = '',\n}: ImageProps) => {\n  const classes = useStyles();\n  let className = classes.small;\n  if (imageSize === 'large') {\n    className = classes.large;\n  } else if (imageSize === 'medium') {\n    className = classes.medium;\n  } else if (imageSize === 'smallMedium') {\n    className = classes.smallMedium;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  if (height != '' && width != '')\n    return (\n      <CardMedia\n        style={{ height: height, width: width }}\n        title={title}\n        image={imageSrc}\n      />\n    );\n  else\n    return <CardMedia className={className} title={title} image={imageSrc} />;\n};\n\nexport default Icon;\n"]},"metadata":{},"sourceType":"module"}