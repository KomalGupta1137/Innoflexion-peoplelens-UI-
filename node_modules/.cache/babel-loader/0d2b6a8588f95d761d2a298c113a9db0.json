{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/organisms/RepSalesActivitiesAll/index.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable @typescript-eslint/restrict-plus-operands */\n\n/* eslint-disable react-hooks/rules-of-hooks */\n\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { FormControl, Grid, makeStyles, MenuItem, Select, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { _t_ } from '../../../utils/translation/translation';\nimport CalendarIcon from '../../../assets/calendar.png';\nimport { COLORS, plTheme } from '../../../plTheme';\nimport { useWindowSize } from '../../../utils/hooks/useWindowSize';\nimport TimeAllocation from '../../molecules/TimeAllocation';\nimport RepDealFunnel from '../RepDealFunnel';\nimport { useQuery } from '@apollo/client';\nimport { GetPeopleActivitiesData } from '../../../gql/queries/dashboard';\nimport { dates } from '../ManagerDashboard';\nimport Loader from '../../atoms/Loader';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { addDays, addMinutes, addWeeks } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RepSalesActivitiesAll = ({\n  currentWeek,\n  activeQuarter\n}) => {\n  _s();\n\n  var _funnelData$peopleAct, _funnelData$peopleAct2, _funnelData$peopleAct3, _funnelData$peopleAct4, _funnelData$peopleAct5, _funnelData$peopleAct6, _funnelData$peopleAct7, _funnelData$peopleAct8, _funnelData$peopleAct9, _funnelData$peopleAct10;\n\n  const [width] = useWindowSize();\n  const useStyles = makeStyles({\n    subtitle: {\n      fontWeight: 300,\n      marginTop: 13\n    },\n    calendarIcon: {\n      width: 22,\n      height: 24\n    },\n    heading: {\n      marginTop: 60\n    },\n    mainDiv: {\n      marginTop: '2rem'\n    },\n    item: {\n      borderRadius: 4,\n      border: '1px solid ' + COLORS.BORDER_PRIMARY,\n      boxShadow: '0px 4px 20px ' + COLORS.BOX_SHADOW_CARDS\n    },\n    leftHeading: {\n      marginTop: 20,\n      marginBottom: 18,\n      marginLeft: width < 1500 ? 20 : 100\n    },\n    leftHeading1: {\n      marginBottom: 18,\n      marginLeft: width < 1500 ? 20 : 100\n    },\n    formControl: {\n      marginLeft: 22,\n      width: '216px',\n      marginBottom: -10\n    },\n    quantityRoot: {\n      '& .MuiOutlinedInput-notchedOutline': {\n        border: '1px solid rgba(215, 223, 233, 0.4)',\n        borderRadius: '2px'\n      },\n      '& .Mui-focused .MuiOutlinedInput-notchedOutline': {\n        border: '1px solid rgba(215, 223, 233, 0.4)',\n        borderRadius: '2px'\n      },\n      '&:hover .MuiOutlinedInput-notchedOutline': {\n        border: '1px solid rgba(215, 223, 233, 0.4)',\n        borderRadius: '2px'\n      }\n    },\n    rightSubHeading: {\n      fontFamily: plTheme.typography.fontFamily,\n      fontSize: plTheme.typography.subtitle1.fontSize,\n      fontWeight: plTheme.typography.h2.fontWeight,\n      lineHeight: plTheme.typography.subtitle1.lineHeight,\n      fontStyle: plTheme.typography.h3.fontStyle,\n      backgroundColor: COLORS.GENERAL_WHITE\n    },\n    dropDown: {\n      height: 40\n    },\n    icon: {\n      color: COLORS.TEXT_HIGH_EMPHASIS\n    },\n    selectRoot: {\n      '&:focus': {\n        backgroundColor: 'transparent'\n      }\n    }\n  });\n  const classes = useStyles();\n  const [userId, setUserId] = useState('');\n  const [firstDateOfQuarter, setFirstDateOfQuarter] = React.useState(new Date());\n  const [selectedOption, setSelectedOption] = useState(currentWeek);\n  useEffect(() => {\n    // const start = moment().startOf('quarter');\n    const start = dates[activeQuarter].startDate;\n    const date = new Date(start.valueOf()); // date.setFullYear(2020); //To be removed later!\n\n    setFirstDateOfQuarter(new Date(date.valueOf()));\n  }, [activeQuarter]);\n  useEffect(() => {\n    getStartDateOfQuery();\n    getEndDateOfQuery();\n  }, [firstDateOfQuarter, selectedOption]);\n\n  const getStartDateOfQuery = () => {\n    const outputDate = firstDateOfQuarter;\n    const newDate = addWeeks(outputDate, selectedOption - 1);\n    const nextDay = addDays(newDate, 0);\n    return nextDay.toISOString();\n  };\n\n  const getEndDateOfQuery = () => {\n    const outputDate = firstDateOfQuarter;\n    let newDate = addWeeks(outputDate, selectedOption - 1);\n    newDate = addDays(newDate, 8);\n    newDate = addMinutes(newDate, -1);\n    return newDate.toISOString();\n  };\n\n  const handleChange = event => {\n    setSelectedOption(event.target.value);\n  }; // const {\n  //   loading,\n  //   error,\n  //   data,\n  //   refetch,\n  // }: QueryResult<peopleactivityQuery> = useQuery(GetPeopleActivitiesData, {\n  //   variables: {\n  //     dashboardInput: {\n  //       startDate: getStartDateOfQuery(),\n  //       endDate: getEndDateOfQuery(),\n  //     },\n  //     userId: userId,\n  //     persona: 'AE',\n  //   },\n  // });\n  // useEffect(() => {\n  //   void refetch();\n  // }, [refetch, selectedOption]);\n  // if (error) return <>`Error! ${error.message}` </>;\n\n\n  const {\n    loading: funnelLoading,\n    data: funnelData,\n    error: funnelError,\n    refetch: funnelRefetch\n  } = useQuery(GetPeopleActivitiesData, {\n    variables: {\n      dashboardInput: {\n        startDate: getStartDateOfQuery(),\n        endDate: getEndDateOfQuery(),\n        quarter: activeQuarter,\n        week: selectedOption\n      },\n      userId: userId\n    }\n  });\n  useEffect(() => {\n    void funnelRefetch();\n  }, [funnelRefetch]);\n  useEffect(() => {\n    setSelectedOption(currentWeek);\n  }, [currentWeek]); // if (loading) {\n  //   return (\n  //     <>\n  //       <Grid style={{ width: '90%', height: 750 }}>\n  //         <Loader />\n  //       </Grid>\n  //     </>\n  //   );\n  // }\n\n  if (funnelLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        style: {\n          width: '90%',\n          height: 750\n        },\n        children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      alignItems: \"flex-end\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: classes.heading,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          color: \"textPrimary\",\n          children: _t_('Sales Activities')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          color: \"textPrimary\",\n          className: classes.subtitle,\n          children: _t_('Weekly self performance against activity goals, these can be shared with managers.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justify: \"center\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: CalendarIcon,\n              className: classes.calendarIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"outlined\",\n              className: classes.formControl,\n              classes: {\n                root: classes.quantityRoot\n              },\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                IconComponent: ExpandMoreIcon,\n                className: `${classes.dropDown} ${classes.rightSubHeading}`,\n                displayEmpty: true // defaultValue={totalWeeks}\n                ,\n                value: selectedOption,\n                onChange: handleChange,\n                MenuProps: {\n                  anchorOrigin: {\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                  },\n                  transformOrigin: {\n                    vertical: 'top',\n                    horizontal: 'left'\n                  },\n                  getContentAnchorEl: null\n                },\n                inputProps: {\n                  classes: {\n                    icon: classes.icon,\n                    root: classes.selectRoot\n                  }\n                },\n                children: [...Array(13)].map((e, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  className: classes.rightSubHeading,\n                  value: index + 1,\n                  children: [\"WEEKLY (\", index + 1, \"/13)\"]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      className: classes.mainDiv,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(RepDealFunnel, {\n          activeNegotiations: funnelData === null || funnelData === void 0 ? void 0 : (_funnelData$peopleAct = funnelData.peopleActivities) === null || _funnelData$peopleAct === void 0 ? void 0 : (_funnelData$peopleAct2 = _funnelData$peopleAct.dealFunnel) === null || _funnelData$peopleAct2 === void 0 ? void 0 : _funnelData$peopleAct2.activeNegotiations,\n          opps: funnelData === null || funnelData === void 0 ? void 0 : (_funnelData$peopleAct3 = funnelData.peopleActivities) === null || _funnelData$peopleAct3 === void 0 ? void 0 : (_funnelData$peopleAct4 = _funnelData$peopleAct3.dealFunnel) === null || _funnelData$peopleAct4 === void 0 ? void 0 : _funnelData$peopleAct4.opps,\n          meetings: funnelData === null || funnelData === void 0 ? void 0 : (_funnelData$peopleAct5 = funnelData.peopleActivities) === null || _funnelData$peopleAct5 === void 0 ? void 0 : (_funnelData$peopleAct6 = _funnelData$peopleAct5.dealFunnel) === null || _funnelData$peopleAct6 === void 0 ? void 0 : _funnelData$peopleAct6.meetings,\n          proposals: funnelData === null || funnelData === void 0 ? void 0 : (_funnelData$peopleAct7 = funnelData.peopleActivities) === null || _funnelData$peopleAct7 === void 0 ? void 0 : (_funnelData$peopleAct8 = _funnelData$peopleAct7.dealFunnel) === null || _funnelData$peopleAct8 === void 0 ? void 0 : _funnelData$peopleAct8.proposals,\n          deals: funnelData === null || funnelData === void 0 ? void 0 : (_funnelData$peopleAct9 = funnelData.peopleActivities) === null || _funnelData$peopleAct9 === void 0 ? void 0 : (_funnelData$peopleAct10 = _funnelData$peopleAct9.dealFunnel) === null || _funnelData$peopleAct10 === void 0 ? void 0 : _funnelData$peopleAct10.deals\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TimeAllocation // data={timeAllocationData}\n        , {\n          startDate: getStartDateOfQuery(),\n          endDate: getEndDateOfQuery(),\n          height: 372,\n          week: selectedOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RepSalesActivitiesAll, \"QobozDg9fWurzwtLzgeA6x21HpY=\", true, function () {\n  return [useWindowSize, useQuery];\n});\n\n_c = RepSalesActivitiesAll;\nexport default RepSalesActivitiesAll;\n\nvar _c;\n\n$RefreshReg$(_c, \"RepSalesActivitiesAll\");","map":{"version":3,"sources":["/home/komal/Documents/Backup/FrontEnd/peoplelens_ui/src/components/organisms/RepSalesActivitiesAll/index.tsx"],"names":["FormControl","Grid","makeStyles","MenuItem","Select","Typography","React","useEffect","useState","_t_","CalendarIcon","COLORS","plTheme","useWindowSize","TimeAllocation","RepDealFunnel","useQuery","GetPeopleActivitiesData","dates","Loader","ExpandMoreIcon","addDays","addMinutes","addWeeks","RepSalesActivitiesAll","currentWeek","activeQuarter","width","useStyles","subtitle","fontWeight","marginTop","calendarIcon","height","heading","mainDiv","item","borderRadius","border","BORDER_PRIMARY","boxShadow","BOX_SHADOW_CARDS","leftHeading","marginBottom","marginLeft","leftHeading1","formControl","quantityRoot","rightSubHeading","fontFamily","typography","fontSize","subtitle1","h2","lineHeight","fontStyle","h3","backgroundColor","GENERAL_WHITE","dropDown","icon","color","TEXT_HIGH_EMPHASIS","selectRoot","classes","userId","setUserId","firstDateOfQuarter","setFirstDateOfQuarter","Date","selectedOption","setSelectedOption","start","startDate","date","valueOf","getStartDateOfQuery","getEndDateOfQuery","outputDate","newDate","nextDay","toISOString","handleChange","event","target","value","loading","funnelLoading","data","funnelData","error","funnelError","refetch","funnelRefetch","variables","dashboardInput","endDate","quarter","week","root","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","Array","map","e","index","peopleActivities","dealFunnel","activeNegotiations","opps","meetings","proposals","deals"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/restrict-plus-operands */\n/* eslint-disable react-hooks/rules-of-hooks */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport {\n  FormControl,\n  Grid,\n  makeStyles,\n  MenuItem,\n  Select,\n  Typography,\n} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\n\nimport { _t_ } from '../../../utils/translation/translation';\n\nimport CalendarIcon from '../../../assets/calendar.png';\nimport { COLORS, plTheme } from '../../../plTheme';\nimport { useWindowSize } from '../../../utils/hooks/useWindowSize';\nimport TimeAllocation from '../../molecules/TimeAllocation';\nimport RepDealFunnel from '../RepDealFunnel';\nimport { QueryResult, useQuery } from '@apollo/client';\nimport { GetPeopleActivitiesData } from '../../../gql/queries/dashboard';\nimport { dates } from '../ManagerDashboard';\nimport Loader from '../../atoms/Loader';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { addDays, addMinutes, addWeeks, subYears } from 'date-fns';\nimport { peopleactivityQuery } from '../../../gql/types';\nimport moment from 'moment';\n\ninterface RepSalesActivitiesAllProps {\n  currentWeek: number;\n  activeQuarter: number;\n}\n\nconst RepSalesActivitiesAll: React.FC<RepSalesActivitiesAllProps> = ({\n  currentWeek,\n  activeQuarter,\n}: RepSalesActivitiesAllProps) => {\n  const [width] = useWindowSize();\n  const useStyles = makeStyles({\n    subtitle: {\n      fontWeight: 300,\n      marginTop: 13,\n    },\n    calendarIcon: {\n      width: 22,\n      height: 24,\n    },\n    heading: {\n      marginTop: 60,\n    },\n    mainDiv: {\n      marginTop: '2rem',\n    },\n    item: {\n      borderRadius: 4,\n      border: '1px solid ' + COLORS.BORDER_PRIMARY,\n      boxShadow: '0px 4px 20px ' + COLORS.BOX_SHADOW_CARDS,\n    },\n    leftHeading: {\n      marginTop: 20,\n      marginBottom: 18,\n      marginLeft: width < 1500 ? 20 : 100,\n    },\n    leftHeading1: {\n      marginBottom: 18,\n      marginLeft: width < 1500 ? 20 : 100,\n    },\n    formControl: {\n      marginLeft: 22,\n      width: '216px',\n      marginBottom: -10,\n    },\n    quantityRoot: {\n      '& .MuiOutlinedInput-notchedOutline': {\n        border: '1px solid rgba(215, 223, 233, 0.4)',\n        borderRadius: '2px',\n      },\n      '& .Mui-focused .MuiOutlinedInput-notchedOutline': {\n        border: '1px solid rgba(215, 223, 233, 0.4)',\n        borderRadius: '2px',\n      },\n      '&:hover .MuiOutlinedInput-notchedOutline': {\n        border: '1px solid rgba(215, 223, 233, 0.4)',\n        borderRadius: '2px',\n      },\n    },\n    rightSubHeading: {\n      fontFamily: plTheme.typography.fontFamily,\n      fontSize: plTheme.typography.subtitle1.fontSize,\n      fontWeight: plTheme.typography.h2.fontWeight,\n      lineHeight: plTheme.typography.subtitle1.lineHeight,\n      fontStyle: plTheme.typography.h3.fontStyle,\n      backgroundColor: COLORS.GENERAL_WHITE,\n    },\n    dropDown: {\n      height: 40,\n    },\n    icon: {\n      color: COLORS.TEXT_HIGH_EMPHASIS,\n    },\n    selectRoot: {\n      '&:focus': {\n        backgroundColor: 'transparent',\n      },\n    },\n  });\n\n  const classes = useStyles();\n\n  const [userId, setUserId] = useState('');\n  const [firstDateOfQuarter, setFirstDateOfQuarter] = React.useState<Date>(\n    new Date(),\n  );\n  const [selectedOption, setSelectedOption] = useState<number>(currentWeek);\n\n  useEffect(() => {\n    // const start = moment().startOf('quarter');\n    const start = dates[activeQuarter].startDate;\n    const date = new Date(start.valueOf());\n    // date.setFullYear(2020); //To be removed later!\n    setFirstDateOfQuarter(new Date(date.valueOf()));\n  }, [activeQuarter]);\n\n  useEffect(() => {\n    getStartDateOfQuery();\n    getEndDateOfQuery();\n  }, [firstDateOfQuarter, selectedOption]);\n\n  const getStartDateOfQuery = () => {\n    const outputDate = firstDateOfQuarter;\n    const newDate = addWeeks(outputDate, selectedOption - 1);\n    const nextDay = addDays(newDate, 0);\n    return nextDay.toISOString();\n  };\n\n  const getEndDateOfQuery = () => {\n    const outputDate: Date = firstDateOfQuarter;\n    let newDate = addWeeks(outputDate, selectedOption - 1);\n    newDate = addDays(newDate, 8);\n    newDate = addMinutes(newDate, -1);\n    return newDate.toISOString();\n  };\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setSelectedOption(event.target.value as number);\n  };\n\n  // const {\n  //   loading,\n  //   error,\n  //   data,\n  //   refetch,\n  // }: QueryResult<peopleactivityQuery> = useQuery(GetPeopleActivitiesData, {\n  //   variables: {\n  //     dashboardInput: {\n  //       startDate: getStartDateOfQuery(),\n  //       endDate: getEndDateOfQuery(),\n  //     },\n  //     userId: userId,\n  //     persona: 'AE',\n  //   },\n  // });\n\n  // useEffect(() => {\n  //   void refetch();\n  // }, [refetch, selectedOption]);\n\n  // if (error) return <>`Error! ${error.message}` </>;\n\n  const {\n    loading: funnelLoading,\n    data: funnelData,\n    error: funnelError,\n    refetch: funnelRefetch,\n  }: QueryResult<peopleactivityQuery> = useQuery(GetPeopleActivitiesData, {\n    variables: {\n      dashboardInput: {\n        startDate: getStartDateOfQuery(),\n        endDate: getEndDateOfQuery(),\n        quarter: activeQuarter,\n        week: selectedOption,\n      },\n      userId: userId,\n    },\n  });\n\n  useEffect(() => {\n    void funnelRefetch();\n  }, [funnelRefetch]);\n\n  useEffect(() => {\n    setSelectedOption(currentWeek);\n  }, [currentWeek]);\n\n  // if (loading) {\n  //   return (\n  //     <>\n  //       <Grid style={{ width: '90%', height: 750 }}>\n  //         <Loader />\n  //       </Grid>\n  //     </>\n  //   );\n  // }\n\n  if (funnelLoading) {\n    return (\n      <>\n        <Grid style={{ width: '90%', height: 750 }}>\n          <Loader />\n        </Grid>\n      </>\n    );\n  }\n  return (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item className={classes.heading}>\n          <Typography variant=\"h2\" color=\"textPrimary\">\n            {_t_('Sales Activities')}\n          </Typography>\n          <Typography\n            variant=\"h3\"\n            color=\"textPrimary\"\n            className={classes.subtitle}\n          >\n            {_t_(\n              'Weekly self performance against activity goals, these can be shared with managers.',\n            )}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid item>\n              <img src={CalendarIcon} className={classes.calendarIcon} />\n            </Grid>\n            <Grid item>\n              <FormControl\n                variant=\"outlined\"\n                className={classes.formControl}\n                classes={{\n                  root: classes.quantityRoot,\n                }}\n              >\n                <Select\n                  IconComponent={ExpandMoreIcon}\n                  className={`${classes.dropDown} ${classes.rightSubHeading}`}\n                  displayEmpty\n                  // defaultValue={totalWeeks}\n                  value={selectedOption}\n                  onChange={handleChange}\n                  MenuProps={{\n                    anchorOrigin: {\n                      vertical: 'bottom',\n                      horizontal: 'left',\n                    },\n                    transformOrigin: {\n                      vertical: 'top',\n                      horizontal: 'left',\n                    },\n                    getContentAnchorEl: null,\n                  }}\n                  inputProps={{\n                    classes: {\n                      icon: classes.icon,\n                      root: classes.selectRoot,\n                    },\n                  }}\n                >\n                  {[...Array(13)].map((e, index) => (\n                    <MenuItem\n                      key={index}\n                      className={classes.rightSubHeading}\n                      value={index + 1}\n                    >\n                      WEEKLY ({index + 1}/13)\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid container direction=\"row\" className={classes.mainDiv} spacing={3}>\n        <Grid item xs={6}>\n          <RepDealFunnel\n            activeNegotiations={\n              funnelData?.peopleActivities?.dealFunnel?.activeNegotiations\n            }\n            opps={funnelData?.peopleActivities?.dealFunnel?.opps}\n            meetings={funnelData?.peopleActivities?.dealFunnel?.meetings}\n            proposals={funnelData?.peopleActivities?.dealFunnel?.proposals}\n            deals={funnelData?.peopleActivities?.dealFunnel?.deals}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TimeAllocation\n            // data={timeAllocationData}\n            startDate={getStartDateOfQuery()}\n            endDate={getEndDateOfQuery()}\n            height={372}\n            week={selectedOption}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default RepSalesActivitiesAll;\n"]},"metadata":{},"sourceType":"module"}