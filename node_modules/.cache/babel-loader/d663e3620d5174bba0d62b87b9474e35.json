{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Current/peoplelens_ui/src/components/molecules/Progressbar/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { createStyles, Grid, makeStyles, Typography, withStyles } from '@material-ui/core';\nimport React from 'react';\nimport { COLORS, plTheme } from '../../../plTheme';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { _t_ } from '../../../utils/translation/translation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BorderLinearProgress = withStyles(() => createStyles({\n  root: {\n    height: '9.61px',\n    borderRadius: '100px'\n  },\n  colorPrimary: {\n    backgroundColor: COLORS.MAIN_HOVER_LIGHT\n  },\n  bar: {\n    borderRadius: '100px',\n    backgroundColor: COLORS.PL_PRIMARY\n  }\n}))(LinearProgress);\n\nconst Progressbar = ({\n  name,\n  percentage,\n  value1,\n  value2,\n  benchmarkValue\n}) => {\n  _s();\n\n  console.log(value1, value2);\n  const customizedValue = name === 'Untouched Opps' ? value1 * 10 : value2;\n  const customizedBenchamark = name === 'Untouched Opps' ? benchmarkValue * 10 : benchmarkValue > 100 ? benchmarkValue / 2 : benchmarkValue;\n  const useStyles = makeStyles({\n    root: {\n      width: '424.62px',\n      height: '123px',\n      backgroundColor: COLORS.LIGHT_GREY_24_HOVER,\n      border: '1px solid rgba(215, 223, 233, 0.2)'\n    },\n    heading: {\n      marginLeft: '20.08px',\n      marginTop: '10px',\n      fontWeight: plTheme.typography.subtitle1.fontWeight\n    },\n    bar: {\n      height: '9.61px',\n      backgroundColor: COLORS.MAIN_HOVER_LIGHT,\n      borderRadius: 7,\n      marginTop: 35,\n      marginLeft: '20.08px',\n      marginRight: '20.08px',\n      background: 'linear-gradient(to right, ' + COLORS.PL_PRIMARY + ' ' + value1.toString() + '%, ' + COLORS.MAIN_HOVER_LIGHT + ' 0%)'\n    },\n    dataValue: {\n      marginLeft: customizedValue > 0 ? customizedValue === 100 ? `${customizedValue - 4.2}%` : `${customizedValue - 3.2}%` : `${customizedValue}%`,\n      fontWeight: plTheme.typography.h3.fontWeight\n    },\n    arrow: {\n      height: '20px',\n      width: '20px',\n      marginRight: '20.08px'\n    },\n    rightHeading: {\n      fontSize: plTheme.typography.subtitle1.fontSize\n    },\n    positiveColor: {\n      color: COLORS.SUCCESS_PRESSED\n    },\n    negativeColor: {\n      color: COLORS.ERROR_PRESSED\n    },\n    innerSubHeading: {\n      marginTop: '1px',\n      marginLeft: `${customizedBenchamark}%`,\n      color: COLORS.GREY_TEXT_DARKER\n    },\n    footerArrow: {\n      height: '25px',\n      width: '25px'\n    },\n    footerTypography: {\n      fontWeight: plTheme.typography.h4.fontWeight,\n      width: '100px'\n    },\n    footer: {\n      marginTop: '-7px',\n      marginLeft: `calc(${customizedBenchamark}% - 33px)`,\n      marginBottom: '13px'\n    },\n    borderLinearProgress: {\n      marginLeft: '20.08px',\n      marginRight: '20.08px'\n    },\n    gridExample: {\n      marginLeft: '20.08px',\n      marginRight: '20.08px',\n      width: '384px'\n    },\n    selectRoot: {\n      '&:focus': {\n        backgroundColor: 'yellow'\n      }\n    }\n  });\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"space-between\",\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"flex-end\",\n        justify: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            className: classes.heading,\n            children: _t_(name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justify: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                className: percentage && percentage.toString().includes('-') ? `${classes.rightHeading} ${classes.negativeColor}` : `${classes.rightHeading} ${classes.positiveColor}`,\n                children: [percentage && percentage.toString().replace('-', ''), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: percentage && percentage.toString().includes('-') ? /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {\n                className: `${classes.arrow} ${classes.negativeColor}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(ArrowDropUpIcon, {\n                className: `${classes.arrow} ${classes.positiveColor}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justify: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.gridExample,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            className: classes.dataValue,\n            children: value1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.borderLinearProgress,\n          children: /*#__PURE__*/_jsxDEV(BorderLinearProgress, {\n            variant: \"determinate\",\n            value: customizedValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.innerSubHeading,\n          children: /*#__PURE__*/_jsxDEV(ArrowDropUpIcon, {\n            className: classes.footerArrow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.footer,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: classes.footerTypography,\n            color: \"textSecondary\",\n            style: {\n              width: 'auto'\n            },\n            children: [_t_('BENCHMARK'), \": \", benchmarkValue]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Progressbar, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", true);\n\n_c = Progressbar;\nexport default Progressbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Progressbar\");","map":{"version":3,"sources":["/home/komal/Documents/Current/peoplelens_ui/src/components/molecules/Progressbar/index.tsx"],"names":["createStyles","Grid","makeStyles","Typography","withStyles","React","COLORS","plTheme","ArrowDropUpIcon","ArrowDropDownIcon","LinearProgress","_t_","BorderLinearProgress","root","height","borderRadius","colorPrimary","backgroundColor","MAIN_HOVER_LIGHT","bar","PL_PRIMARY","Progressbar","name","percentage","value1","value2","benchmarkValue","console","log","customizedValue","customizedBenchamark","useStyles","width","LIGHT_GREY_24_HOVER","border","heading","marginLeft","marginTop","fontWeight","typography","subtitle1","marginRight","background","toString","dataValue","h3","arrow","rightHeading","fontSize","positiveColor","color","SUCCESS_PRESSED","negativeColor","ERROR_PRESSED","innerSubHeading","GREY_TEXT_DARKER","footerArrow","footerTypography","h4","footer","marginBottom","borderLinearProgress","gridExample","selectRoot","classes","includes","replace"],"mappings":"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","sourcesContent":["import {\n  createStyles,\n  Grid,\n  makeStyles,\n  Typography,\n  withStyles,\n} from '@material-ui/core';\nimport React from 'react';\nimport { COLORS, plTheme } from '../../../plTheme';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { _t_ } from '../../../utils/translation/translation';\n\nconst BorderLinearProgress = withStyles(() =>\n  createStyles({\n    root: {\n      height: '9.61px',\n      borderRadius: '100px',\n    },\n    colorPrimary: {\n      backgroundColor: COLORS.MAIN_HOVER_LIGHT,\n    },\n    bar: {\n      borderRadius: '100px',\n      backgroundColor: COLORS.PL_PRIMARY,\n    },\n  }),\n)(LinearProgress);\n\ninterface ProgressbarProps {\n  name: string;\n  percentage: number;\n  value1: number;\n  value2: number;\n  benchmarkValue: number;\n}\n\nconst Progressbar: React.FC<ProgressbarProps> = ({\n  name,\n  percentage,\n  value1,\n  value2,\n  benchmarkValue,\n}: ProgressbarProps) => {\n  console.log(value1, value2);\n  const customizedValue = name === 'Untouched Opps' ? value1 * 10 : value2;\n  const customizedBenchamark =\n    name === 'Untouched Opps'\n      ? benchmarkValue * 10\n      : benchmarkValue > 100\n      ? benchmarkValue / 2\n      : benchmarkValue;\n  const useStyles = makeStyles({\n    root: {\n      width: '424.62px',\n      height: '123px',\n      backgroundColor: COLORS.LIGHT_GREY_24_HOVER,\n      border: '1px solid rgba(215, 223, 233, 0.2)',\n    },\n    heading: {\n      marginLeft: '20.08px',\n      marginTop: '10px',\n      fontWeight: plTheme.typography.subtitle1.fontWeight,\n    },\n    bar: {\n      height: '9.61px',\n      backgroundColor: COLORS.MAIN_HOVER_LIGHT,\n      borderRadius: 7,\n      marginTop: 35,\n      marginLeft: '20.08px',\n      marginRight: '20.08px',\n      background:\n        'linear-gradient(to right, ' +\n        COLORS.PL_PRIMARY +\n        ' ' +\n        value1.toString() +\n        '%, ' +\n        COLORS.MAIN_HOVER_LIGHT +\n        ' 0%)',\n    },\n    dataValue: {\n      marginLeft:\n        customizedValue > 0\n          ? customizedValue === 100\n            ? `${customizedValue - 4.2}%`\n            : `${customizedValue - 3.2}%`\n          : `${customizedValue}%`,\n      fontWeight: plTheme.typography.h3.fontWeight,\n    },\n    arrow: {\n      height: '20px',\n      width: '20px',\n      marginRight: '20.08px',\n    },\n    rightHeading: {\n      fontSize: plTheme.typography.subtitle1.fontSize,\n    },\n    positiveColor: {\n      color: COLORS.SUCCESS_PRESSED,\n    },\n    negativeColor: {\n      color: COLORS.ERROR_PRESSED,\n    },\n    innerSubHeading: {\n      marginTop: '1px',\n      marginLeft: `${customizedBenchamark}%`,\n      color: COLORS.GREY_TEXT_DARKER,\n    },\n    footerArrow: {\n      height: '25px',\n      width: '25px',\n    },\n    footerTypography: {\n      fontWeight: plTheme.typography.h4.fontWeight,\n      width: '100px',\n    },\n    footer: {\n      marginTop: '-7px',\n      marginLeft: `calc(${customizedBenchamark}% - 33px)`,\n      marginBottom: '13px',\n    },\n    borderLinearProgress: {\n      marginLeft: '20.08px',\n      marginRight: '20.08px',\n    },\n    gridExample: {\n      marginLeft: '20.08px',\n      marginRight: '20.08px',\n      width: '384px',\n    },\n    selectRoot: {\n      '&:focus': {\n        backgroundColor: 'yellow',\n      },\n    },\n  });\n\n  const classes = useStyles();\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"space-between\"\n      className={classes.root}\n    >\n      <Grid item>\n        <Grid\n          container\n          direction=\"row\"\n          alignItems=\"flex-end\"\n          justify=\"space-between\"\n        >\n          <Grid item>\n            <Typography variant=\"h5\" className={classes.heading}>\n              {_t_(name)}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Grid container direction=\"row\" justify=\"space-between\">\n              <Grid item>\n                <Typography\n                  variant=\"h5\"\n                  className={\n                    percentage && percentage.toString().includes('-')\n                      ? `${classes.rightHeading} ${classes.negativeColor}`\n                      : `${classes.rightHeading} ${classes.positiveColor}`\n                  }\n                >\n                  {percentage && percentage.toString().replace('-', '')}%\n                </Typography>\n              </Grid>\n              <Grid item>\n                {percentage && percentage.toString().includes('-') ? (\n                  <ArrowDropDownIcon\n                    className={`${classes.arrow} ${classes.negativeColor}`}\n                  />\n                ) : (\n                  <ArrowDropUpIcon\n                    className={`${classes.arrow} ${classes.positiveColor}`}\n                  />\n                )}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" justify=\"space-between\">\n          <Grid item className={classes.gridExample}>\n            <Typography variant=\"h4\" className={classes.dataValue}>\n              {value1}\n            </Typography>\n          </Grid>\n          <Grid item className={classes.borderLinearProgress}>\n            <BorderLinearProgress\n              variant=\"determinate\"\n              value={customizedValue}\n            />\n          </Grid>\n          <Grid item className={classes.innerSubHeading}>\n            <ArrowDropUpIcon className={classes.footerArrow} />\n          </Grid>\n          <Grid item className={classes.footer}>\n            <Typography\n              variant=\"h6\"\n              className={classes.footerTypography}\n              color=\"textSecondary\"\n              style={{ width: 'auto' }}\n            >\n              {_t_('BENCHMARK')}: {benchmarkValue}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Progressbar;\n"]},"metadata":{},"sourceType":"module"}