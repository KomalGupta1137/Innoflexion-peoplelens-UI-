{"ast":null,"code":"var _jsxFileName = \"/home/komal/Documents/Current/peoplelens_ui/src/components/organisms/SDRSalesOutcomeContainer/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, makeStyles } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { _t_ } from '../../../utils/translation/translation';\nimport CircularProgressWidget from '../../molecules/CircularProgressWidget';\nimport RepProductPortfolio from '../../molecules/RepProductPortfolio';\nimport ProductPenetrationGraph from '../../molecules/ProductPenetrationGraph';\nimport { GetDashboardData, GetPeopleActivitiesData } from '../../../gql/queries/dashboard';\nimport Loader from '../../atoms/Loader';\nimport { useQuery } from '@apollo/client';\nimport { ProductColorContext } from '../../../utils/productColorContext';\nimport SDRClosedSales from '../../molecules/SDRClosedSales';\nimport SDRAvgDealSize from '../../molecules/SDRAvgDealSize';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  mainDiv: {\n    marginTop: '0.8rem'\n  }\n});\n\nconst SDRSalesOutcomeContainer = ({\n  startDate,\n  endDate,\n  activeQuarter\n}) => {\n  _s();\n\n  var _dashboardData$salesO, _dashboardData$salesO2, _dashboardData$salesO3, _dashboardData$salesO4, _dashboardData$salesO12, _dashboardData$salesO13, _dashboardData$salesO14, _dashboardData$salesO15, _dashboardData$salesO16, _dashboardData$salesO17, _dashboardData$salesO18, _dashboardData$salesO19, _dashboardData$salesO20, _dashboardData$salesO21, _dashboardData$salesO22, _dashboardData$salesO23, _dashboardData$salesO24, _dashboardData$salesO25, _dashboardData$salesO26, _dashboardData$salesO27, _dashboardData$salesO28, _dashboardData$salesO29, _dashboardData$salesO30, _dashboardData$salesO31, _dashboardData$salesO32, _dashboardData$salesO33, _previousYearDashboar, _previousYearDashboar2, _previousYearDashboar3;\n\n  const previousStartDate = new Date(startDate);\n  const previousEndDate = new Date(endDate);\n  const previousStartDateNew = new Date(previousStartDate.setMonth(previousStartDate.getMonth() - 12)).toISOString();\n  const previousEndDateNew = new Date(previousEndDate.setMonth(previousEndDate.getMonth() - 12) - 1000).toISOString();\n  const {\n    ProductColorMap,\n    setProductColorMap\n  } = React.useContext(ProductColorContext);\n  const classes = useStyles();\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(GetDashboardData, {\n    variables: {\n      dashboardInput: {\n        startDate: startDate,\n        endDate: endDate,\n        userId: ''\n      }\n    }\n  });\n  const {\n    loading: loading3,\n    error: error3,\n    data: data3,\n    refetch: refetch3\n  } = useQuery(GetDashboardData, {\n    variables: {\n      dashboardInput: {\n        startDate: previousStartDateNew,\n        endDate: previousEndDateNew,\n        userId: ''\n      }\n    }\n  });\n  const {\n    loading: funnelLoading,\n    data: funnelData,\n    error: funnelError,\n    refetch: funnelRefetch\n  } = useQuery(GetPeopleActivitiesData, {\n    variables: {\n      dashboardInput: {\n        startDate: startDate,\n        endDate: endDate // quarter: activeQuarter,\n        // week: selectedOption,\n\n      },\n      userId: localStorage.getItem('userId')\n    }\n  });\n  useEffect(() => {\n    refetch;\n  }, [startDate, endDate]);\n  useEffect(() => {\n    funnelRefetch;\n  }, [startDate, endDate]);\n  useEffect(() => {\n    var _data$getDashboardDat;\n\n    setProductColorMap(data === null || data === void 0 ? void 0 : (_data$getDashboardDat = data.getDashboardData) === null || _data$getDashboardDat === void 0 ? void 0 : _data$getDashboardDat.productColorMap);\n  }, [data]);\n\n  if (loading || funnelLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  if (error || funnelError) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"`Error! $\", error === null || error === void 0 ? void 0 : error.message, \"` \"]\n  }, void 0, true);\n\n  if (loading3) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  if (error3) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"`Error! $\", error3.message, \"` \"]\n  }, void 0, true);\n  const dashboardData = data === null || data === void 0 ? void 0 : data.getDashboardData;\n  const previousYearDashboardData = data3 === null || data3 === void 0 ? void 0 : data3.getDashboardData;\n  const SalesCycle = [];\n  dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO = dashboardData.salesOutcome) === null || _dashboardData$salesO === void 0 ? void 0 : _dashboardData$salesO.totalSalesCycle;\n  const SalesCycleLen = (dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO2 = dashboardData.salesOutcome) === null || _dashboardData$salesO2 === void 0 ? void 0 : _dashboardData$salesO2.totalSalesCycle) ? dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO3 = dashboardData.salesOutcome) === null || _dashboardData$salesO3 === void 0 ? void 0 : (_dashboardData$salesO4 = _dashboardData$salesO3.totalSalesCycle) === null || _dashboardData$salesO4 === void 0 ? void 0 : _dashboardData$salesO4.length : 0;\n\n  for (let i = 0; i < SalesCycleLen; i++) {\n    var _dashboardData$salesO5, _dashboardData$salesO6, _dashboardData$salesO7, _dashboardData$salesO8, _dashboardData$salesO9, _dashboardData$salesO10, _dashboardData$salesO11;\n\n    const name = (dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO5 = dashboardData.salesOutcome) === null || _dashboardData$salesO5 === void 0 ? void 0 : _dashboardData$salesO5.totalSalesCycle) && (dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO6 = dashboardData.salesOutcome) === null || _dashboardData$salesO6 === void 0 ? void 0 : (_dashboardData$salesO7 = _dashboardData$salesO6.totalSalesCycle[i]) === null || _dashboardData$salesO7 === void 0 ? void 0 : (_dashboardData$salesO8 = _dashboardData$salesO7.product) === null || _dashboardData$salesO8 === void 0 ? void 0 : _dashboardData$salesO8.name);\n    const value = (dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO9 = dashboardData.salesOutcome) === null || _dashboardData$salesO9 === void 0 ? void 0 : _dashboardData$salesO9.totalSalesCycle) && (dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO10 = dashboardData.salesOutcome) === null || _dashboardData$salesO10 === void 0 ? void 0 : (_dashboardData$salesO11 = _dashboardData$salesO10.totalSalesCycle[i]) === null || _dashboardData$salesO11 === void 0 ? void 0 : _dashboardData$salesO11.productCycle);\n    SalesCycle.push([name, value]);\n  }\n\n  const avgDealSize = (dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO12 = dashboardData.salesOutcome) === null || _dashboardData$salesO12 === void 0 ? void 0 : (_dashboardData$salesO13 = _dashboardData$salesO12.totalSalesClosed) === null || _dashboardData$salesO13 === void 0 ? void 0 : _dashboardData$salesO13.overallTotalSalesClosed) && (dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO14 = dashboardData.salesOutcome) === null || _dashboardData$salesO14 === void 0 ? void 0 : _dashboardData$salesO14.noOfDeals) && (dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO15 = dashboardData.salesOutcome) === null || _dashboardData$salesO15 === void 0 ? void 0 : (_dashboardData$salesO16 = _dashboardData$salesO15.totalSalesClosed) === null || _dashboardData$salesO16 === void 0 ? void 0 : _dashboardData$salesO16.overallTotalSalesClosed) / (dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO17 = dashboardData.salesOutcome) === null || _dashboardData$salesO17 === void 0 ? void 0 : _dashboardData$salesO17.noOfDeals);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 3,\n    className: classes.mainDiv,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      style: {\n        flex: 35\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            flex: '33.3%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: 192\n            },\n            children: /*#__PURE__*/_jsxDEV(SDRClosedSales, {\n              closed: dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO18 = dashboardData.salesOutcome) === null || _dashboardData$salesO18 === void 0 ? void 0 : (_dashboardData$salesO19 = _dashboardData$salesO18.totalSalesClosed) === null || _dashboardData$salesO19 === void 0 ? void 0 : _dashboardData$salesO19.overallTotalSalesClosed,\n              existingClosed: dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO20 = dashboardData.salesOutcome) === null || _dashboardData$salesO20 === void 0 ? void 0 : (_dashboardData$salesO21 = _dashboardData$salesO20.totalSalesClosed) === null || _dashboardData$salesO21 === void 0 ? void 0 : _dashboardData$salesO21.existingTotalSalesClosed,\n              forecast: dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO22 = dashboardData.salesOutcome) === null || _dashboardData$salesO22 === void 0 ? void 0 : _dashboardData$salesO22.totalSalesForecast,\n              reportInd: 'rep'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            flex: '33.3%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: 192\n            },\n            children: /*#__PURE__*/_jsxDEV(SDRAvgDealSize, {\n              avgDealSize: avgDealSize,\n              dealsClosed: dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO23 = dashboardData.salesOutcome) === null || _dashboardData$salesO23 === void 0 ? void 0 : _dashboardData$salesO23.noOfDeals,\n              repInd: true,\n              funnelData: funnelData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            flex: '33.3%'\n          },\n          children: /*#__PURE__*/_jsxDEV(ProductPenetrationGraph, {\n            data: SalesCycle,\n            activeQuarter: 0,\n            reportInd: true,\n            repLens: true,\n            chartTitle: 'Sales cycle (On Opps created)',\n            xAxisTitile: 'DAYS'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      style: {\n        flex: 62\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            flex: '33.3%'\n          },\n          children: [' ', /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: 192\n                },\n                children: /*#__PURE__*/_jsxDEV(SDRClosedSales, {\n                  closed: dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO24 = dashboardData.salesOutcome) === null || _dashboardData$salesO24 === void 0 ? void 0 : (_dashboardData$salesO25 = _dashboardData$salesO24.totalSalesClosed) === null || _dashboardData$salesO25 === void 0 ? void 0 : _dashboardData$salesO25.overallTotalSalesClosed,\n                  existingClosed: dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO26 = dashboardData.salesOutcome) === null || _dashboardData$salesO26 === void 0 ? void 0 : (_dashboardData$salesO27 = _dashboardData$salesO26.totalSalesClosed) === null || _dashboardData$salesO27 === void 0 ? void 0 : _dashboardData$salesO27.existingTotalSalesClosed,\n                  forecast: dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO28 = dashboardData.salesOutcome) === null || _dashboardData$salesO28 === void 0 ? void 0 : _dashboardData$salesO28.totalSalesForecast,\n                  reportInd: 'rep',\n                  widget: 'Profitability'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: 192\n                },\n                children: /*#__PURE__*/_jsxDEV(CircularProgressWidget, {\n                  title: _t_('Win Rate (On Opps created)'),\n                  percentage: dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO29 = dashboardData.salesOutcome) === null || _dashboardData$salesO29 === void 0 ? void 0 : _dashboardData$salesO29.winRate,\n                  variant: 'large'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            flex: '66.67%',\n            height: 1000\n          },\n          children: [' ', /*#__PURE__*/_jsxDEV(RepProductPortfolio, {\n            salesClosed: dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO30 = dashboardData.salesOutcome) === null || _dashboardData$salesO30 === void 0 ? void 0 : (_dashboardData$salesO31 = _dashboardData$salesO30.totalSalesClosed) === null || _dashboardData$salesO31 === void 0 ? void 0 : _dashboardData$salesO31.overallTotalSalesClosed,\n            portfolioPresented: dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO32 = dashboardData.salesOutcome) === null || _dashboardData$salesO32 === void 0 ? void 0 : _dashboardData$salesO32.portfolioPresented,\n            data: dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$salesO33 = dashboardData.salesOutcome) === null || _dashboardData$salesO33 === void 0 ? void 0 : _dashboardData$salesO33.topProductContributors,\n            previousYearData: previousYearDashboardData === null || previousYearDashboardData === void 0 ? void 0 : (_previousYearDashboar = previousYearDashboardData.salesOutcome) === null || _previousYearDashboar === void 0 ? void 0 : _previousYearDashboar.topProductContributors,\n            previousYearSalesClosed: previousYearDashboardData === null || previousYearDashboardData === void 0 ? void 0 : (_previousYearDashboar2 = previousYearDashboardData.salesOutcome) === null || _previousYearDashboar2 === void 0 ? void 0 : (_previousYearDashboar3 = _previousYearDashboar2.totalSalesClosed) === null || _previousYearDashboar3 === void 0 ? void 0 : _previousYearDashboar3.overallTotalSalesClosed,\n            lens: 'SDR'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SDRSalesOutcomeContainer, \"7DXZU6x0ld8k2qi1XXXoPZudh9Q=\", false, function () {\n  return [useStyles, useQuery, useQuery, useQuery];\n});\n\n_c = SDRSalesOutcomeContainer;\nexport default SDRSalesOutcomeContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SDRSalesOutcomeContainer\");","map":{"version":3,"sources":["/home/komal/Documents/Current/peoplelens_ui/src/components/organisms/SDRSalesOutcomeContainer/index.tsx"],"names":["Grid","makeStyles","React","useEffect","_t_","CircularProgressWidget","RepProductPortfolio","ProductPenetrationGraph","GetDashboardData","GetPeopleActivitiesData","Loader","useQuery","ProductColorContext","SDRClosedSales","SDRAvgDealSize","useStyles","mainDiv","marginTop","SDRSalesOutcomeContainer","startDate","endDate","activeQuarter","previousStartDate","Date","previousEndDate","previousStartDateNew","setMonth","getMonth","toISOString","previousEndDateNew","ProductColorMap","setProductColorMap","useContext","classes","loading","error","data","refetch","variables","dashboardInput","userId","loading3","error3","data3","refetch3","funnelLoading","funnelData","funnelError","funnelRefetch","localStorage","getItem","getDashboardData","productColorMap","message","dashboardData","previousYearDashboardData","SalesCycle","salesOutcome","totalSalesCycle","SalesCycleLen","length","i","name","product","value","productCycle","push","avgDealSize","totalSalesClosed","overallTotalSalesClosed","noOfDeals","flex","height","existingTotalSalesClosed","totalSalesForecast","winRate","portfolioPresented","topProductContributors"],"mappings":"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","sourcesContent":["import { Grid, makeStyles } from '@material-ui/core';\nimport React, { useEffect } from 'react';\n\nimport { _t_ } from '../../../utils/translation/translation';\n\nimport AvgDealSize from '../../molecules/AvgDealSize';\nimport CircularProgressWidget from '../../molecules/CircularProgressWidget';\nimport RepProductPortfolio from '../../molecules/RepProductPortfolio';\nimport ProductPenetrationGraph from '../../molecules/ProductPenetrationGraph';\n\nimport ClosedSales from '../../molecules/ClosedSales';\n\n// import ClosedSalesNew from '../../molecules/ClosedSalesNew';\nimport {\n  getDashboardData as DashboardResponse,\n  peopleactivityQuery,\n} from '../../../gql/types';\n\nimport {\n  GetDashboardData,\n  GetPeopleActivitiesData,\n} from '../../../gql/queries/dashboard';\nimport Loader from '../../atoms/Loader';\nimport { QueryResult, useQuery } from '@apollo/client';\nimport { ProductColorContext } from '../../../utils/productColorContext';\nimport SDRClosedSales from '../../molecules/SDRClosedSales';\nimport SDRAvgDealSize from '../../molecules/SDRAvgDealSize';\n\ninterface SDRSalesOutcomeContainerProps {\n  startDate: string;\n  endDate: string;\n  activeQuarter: number;\n}\n\nconst useStyles = makeStyles({\n  mainDiv: {\n    marginTop: '0.8rem',\n  },\n});\n\nconst SDRSalesOutcomeContainer: React.FC<SDRSalesOutcomeContainerProps> = ({\n  startDate,\n  endDate,\n  activeQuarter,\n}: SDRSalesOutcomeContainerProps) => {\n  const previousStartDate = new Date(startDate);\n  const previousEndDate = new Date(endDate);\n  const previousStartDateNew = new Date(\n    previousStartDate.setMonth(previousStartDate.getMonth() - 12),\n  ).toISOString();\n  const previousEndDateNew = new Date(\n    previousEndDate.setMonth(previousEndDate.getMonth() - 12) - 1000,\n  ).toISOString();\n\n  const { ProductColorMap, setProductColorMap } = React.useContext(\n    ProductColorContext,\n  );\n\n  const classes = useStyles();\n  const {\n    loading,\n    error,\n    data,\n    refetch,\n  }: QueryResult<DashboardResponse> = useQuery(GetDashboardData, {\n    variables: {\n      dashboardInput: {\n        startDate: startDate,\n        endDate: endDate,\n        userId: '',\n      },\n    },\n  });\n\n  const {\n    loading: loading3,\n    error: error3,\n    data: data3,\n    refetch: refetch3,\n  }: QueryResult<DashboardResponse> = useQuery(GetDashboardData, {\n    variables: {\n      dashboardInput: {\n        startDate: previousStartDateNew,\n        endDate: previousEndDateNew,\n        userId: '',\n      },\n    },\n  });\n\n  const {\n    loading: funnelLoading,\n    data: funnelData,\n    error: funnelError,\n    refetch: funnelRefetch,\n  }: QueryResult<peopleactivityQuery> = useQuery(GetPeopleActivitiesData, {\n    variables: {\n      dashboardInput: {\n        startDate: startDate,\n        endDate: endDate,\n        // quarter: activeQuarter,\n        // week: selectedOption,\n      },\n      userId: localStorage.getItem('userId'),\n    },\n  });\n\n  useEffect(() => {\n    refetch;\n  }, [startDate, endDate]);\n\n  useEffect(() => {\n    funnelRefetch;\n  }, [startDate, endDate]);\n\n  useEffect(() => {\n    setProductColorMap(data?.getDashboardData?.productColorMap);\n  }, [data]);\n\n  if (loading || funnelLoading) {\n    return (\n      <>\n        <Loader />\n      </>\n    );\n  }\n  if (error || funnelError) return <>`Error! ${error?.message}` </>;\n  if (loading3) {\n    return (\n      <>\n        <Loader />\n      </>\n    );\n  }\n  if (error3) return <>`Error! ${error3.message}` </>;\n  const dashboardData = data?.getDashboardData;\n  const previousYearDashboardData = data3?.getDashboardData;\n  const SalesCycle = [];\n  dashboardData?.salesOutcome?.totalSalesCycle;\n  const SalesCycleLen = dashboardData?.salesOutcome?.totalSalesCycle\n    ? dashboardData?.salesOutcome?.totalSalesCycle?.length\n    : 0;\n  for (let i = 0; i < SalesCycleLen; i++) {\n    const name =\n      dashboardData?.salesOutcome?.totalSalesCycle &&\n      dashboardData?.salesOutcome?.totalSalesCycle[i]?.product?.name;\n    const value =\n      dashboardData?.salesOutcome?.totalSalesCycle &&\n      dashboardData?.salesOutcome?.totalSalesCycle[i]?.productCycle;\n    SalesCycle.push([name, value]);\n  }\n\n  const avgDealSize =\n    dashboardData?.salesOutcome?.totalSalesClosed?.overallTotalSalesClosed &&\n    dashboardData?.salesOutcome?.noOfDeals &&\n    dashboardData?.salesOutcome?.totalSalesClosed?.overallTotalSalesClosed /\n      dashboardData?.salesOutcome?.noOfDeals;\n\n  return (\n    <Grid container direction=\"row\" spacing={3} className={classes.mainDiv}>\n      <Grid item style={{ flex: 35 }}>\n        <Grid container direction=\"column\" spacing={3}>\n          <Grid item style={{ flex: '33.3%' }}>\n            <div style={{ height: 192 }}>\n              <SDRClosedSales\n                closed={\n                  dashboardData?.salesOutcome?.totalSalesClosed\n                    ?.overallTotalSalesClosed\n                }\n                existingClosed={\n                  dashboardData?.salesOutcome?.totalSalesClosed\n                    ?.existingTotalSalesClosed\n                }\n                forecast={dashboardData?.salesOutcome?.totalSalesForecast}\n                reportInd={'rep'}\n              />\n            </div>\n          </Grid>\n          <Grid item style={{ flex: '33.3%' }}>\n            <div style={{ height: 192 }}>\n              <SDRAvgDealSize\n                avgDealSize={avgDealSize}\n                dealsClosed={dashboardData?.salesOutcome?.noOfDeals}\n                repInd={true}\n                funnelData={funnelData}\n              />\n            </div>\n          </Grid>\n          <Grid item style={{ flex: '33.3%' }}>\n            <ProductPenetrationGraph\n              data={SalesCycle}\n              activeQuarter={0}\n              reportInd={true}\n              repLens={true}\n              chartTitle={'Sales cycle (On Opps created)'}\n              xAxisTitile={'DAYS'}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item style={{ flex: 62 }}>\n        <Grid container direction=\"column\" spacing={3}>\n          <Grid item style={{ flex: '33.3%' }}>\n            {' '}\n            <Grid container direction=\"row\" spacing={2}>\n              <Grid item xs={6}>\n                <div style={{ height: 192 }}>\n                  <SDRClosedSales\n                    closed={\n                      dashboardData?.salesOutcome?.totalSalesClosed\n                        ?.overallTotalSalesClosed\n                    }\n                    existingClosed={\n                      dashboardData?.salesOutcome?.totalSalesClosed\n                        ?.existingTotalSalesClosed\n                    }\n                    forecast={dashboardData?.salesOutcome?.totalSalesForecast}\n                    reportInd={'rep'}\n                    widget={'Profitability'}\n                  />\n                </div>\n              </Grid>\n              <Grid item xs={6}>\n                <div style={{ height: 192 }}>\n                  <CircularProgressWidget\n                    title={_t_('Win Rate (On Opps created)')}\n                    percentage={dashboardData?.salesOutcome?.winRate}\n                    variant={'large'}\n                  />\n                </div>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item style={{ flex: '66.67%', height: 1000 }}>\n            {' '}\n            <RepProductPortfolio\n              salesClosed={\n                dashboardData?.salesOutcome?.totalSalesClosed\n                  ?.overallTotalSalesClosed\n              }\n              portfolioPresented={\n                dashboardData?.salesOutcome?.portfolioPresented\n              }\n              data={dashboardData?.salesOutcome?.topProductContributors}\n              previousYearData={\n                previousYearDashboardData?.salesOutcome?.topProductContributors\n              }\n              previousYearSalesClosed={\n                previousYearDashboardData?.salesOutcome?.totalSalesClosed\n                  ?.overallTotalSalesClosed\n              }\n              lens={'SDR'}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SDRSalesOutcomeContainer;\n"]},"metadata":{},"sourceType":"module"}